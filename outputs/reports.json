[{"created": 1733299822.804359, "duration": 0.020317792892456055, "exitcode": 0, "root": "/test", "environment": {}, "summary": {"passed": 5, "total": 5, "collected": 5}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test1", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test2", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test3", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test4", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test5", "type": "Function", "lineno": 22}]}], "tests": [{"nodeid": "run.py::test1", "lineno": 10, "outcome": "passed", "keywords": ["test1", "run.py", "test", ""], "setup": {"duration": 0.00033226100000005587, "outcome": "passed"}, "call": {"duration": 0.0001970350000002341, "outcome": "passed"}, "teardown": {"duration": 0.00017664500000025285, "outcome": "passed"}}, {"nodeid": "run.py::test2", "lineno": 13, "outcome": "passed", "keywords": ["test2", "run.py", "test", ""], "setup": {"duration": 0.00016894999999994553, "outcome": "passed"}, "call": {"duration": 0.00016358699999985404, "outcome": "passed"}, "teardown": {"duration": 0.00013665499999993003, "outcome": "passed"}}, {"nodeid": "run.py::test3", "lineno": 16, "outcome": "passed", "keywords": ["test3", "run.py", "test", ""], "setup": {"duration": 0.00015470399999983897, "outcome": "passed"}, "call": {"duration": 0.00014642600000014383, "outcome": "passed"}, "teardown": {"duration": 0.00013934299999984745, "outcome": "passed"}}, {"nodeid": "run.py::test4", "lineno": 19, "outcome": "passed", "keywords": ["test4", "run.py", "test", ""], "setup": {"duration": 0.0001519059999997019, "outcome": "passed"}, "call": {"duration": 0.00014495900000000006, "outcome": "passed"}, "teardown": {"duration": 0.000126067000000063, "outcome": "passed"}}, {"nodeid": "run.py::test5", "lineno": 22, "outcome": "passed", "keywords": ["test5", "run.py", "test", ""], "setup": {"duration": 0.00015855600000014292, "outcome": "passed"}, "call": {"duration": 0.00014247099999975532, "outcome": "passed"}, "teardown": {"duration": 0.00016164199999968432, "outcome": "passed"}}]}, {"created": 1733299821.8051584, "duration": 0.05442190170288086, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 5, "failed": 4, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_with_case_sensitivity", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "type": "Function", "lineno": 34}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0004034270000001783, "outcome": "passed"}, "call": {"duration": 0.0002670199999998957, "outcome": "passed"}, "teardown": {"duration": 0.00017584300000006436, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016693000000000957, "outcome": "passed"}, "call": {"duration": 0.0001515089999999386, "outcome": "passed"}, "teardown": {"duration": 0.00013112799999981384, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015674200000015404, "outcome": "passed"}, "call": {"duration": 0.00014718800000013132, "outcome": "passed"}, "teardown": {"duration": 0.00012956600000002538, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00016027100000015615, "outcome": "passed"}, "call": {"duration": 0.0001464710000000924, "outcome": "passed"}, "teardown": {"duration": 0.00012947599999990622, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.000152847000000067, "outcome": "passed"}, "call": {"duration": 0.00016212499999990193, "outcome": "passed"}, "teardown": {"duration": 0.00012890499999995697, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 25, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00014913999999999206, "outcome": "passed"}, "call": {"duration": 0.00044187400000006427, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 27, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 27, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:27: AssertionError"}, "teardown": {"duration": 0.0001952569999998932, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_case_sensitivity", "lineno": 28, "outcome": "failed", "keywords": ["test_remove_Occ_with_case_sensitivity", "run.py", "test", ""], "setup": {"duration": 0.00018969999999995935, "outcome": "passed"}, "call": {"duration": 0.0004476010000000752, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 30, "message": "AssertionError: assert 'CaeSenitive' == 'CaseSensitve'\n  \n  - CaseSensitve\n  ?   -    -\n  + CaeSenitive\n  ?         +"}, "traceback": [{"path": "run.py", "lineno": 30, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_case_sensitivity():\n>       assert remove_Occ(\"CaseSensitive\", \"s\") == \"CaseSensitve\"\nE       AssertionError: assert 'CaeSenitive' == 'CaseSensitve'\nE         \nE         - CaseSensitve\nE         ?   -    -\nE         + CaeSenitive\nE         ?         +\n\nrun.py:30: AssertionError"}, "teardown": {"duration": 0.00017839899999994024, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 31, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017116200000000248, "outcome": "passed"}, "call": {"duration": 0.0004260589999998121, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 33, "message": "AssertionError: assert 'helloworld' == 'hello@orld'\n  \n  - hello@orld\n  ?      ^\n  + helloworld\n  ?      ^"}, "traceback": [{"path": "run.py", "lineno": 33, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"hello@world\", \"@\") == \"hello@orld\"\nE       AssertionError: assert 'helloworld' == 'hello@orld'\nE         \nE         - hello@orld\nE         ?      ^\nE         + helloworld\nE         ?      ^\n\nrun.py:33: AssertionError"}, "teardown": {"duration": 0.00018020100000004646, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "lineno": 34, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017453300000003225, "outcome": "passed"}, "call": {"duration": 0.00034226500000000826, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 36, "message": "AssertionError: assert '!!hello!!' == 'hello!!!'\n  \n  - hello!!!\n  ?        -\n  + !!hello!!\n  ? ++"}, "traceback": [{"path": "run.py", "lineno": 36, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_special_characters():\n>       assert remove_Occ(\"!!!hello!!!\", \"!\") == \"hello!!!\"\nE       AssertionError: assert '!!hello!!' == 'hello!!!'\nE         \nE         - hello!!!\nE         ?        -\nE         + !!hello!!\nE         ? ++\n\nrun.py:36: AssertionError"}, "teardown": {"duration": 0.00020168300000000805, "outcome": "passed"}}]}, {"created": 1733299822.8154604, "duration": 0.05377769470214844, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 6, "failed": 4, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_first_and_last", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_single_char", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_special_characters", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_case_insensitive", "type": "Function", "lineno": 34}, {"nodeid": "run.py::test_digit", "type": "Function", "lineno": 37}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003182320000001404, "outcome": "passed"}, "call": {"duration": 0.00024923200000004364, "outcome": "passed"}, "teardown": {"duration": 0.00015504999999982338, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001699459999999764, "outcome": "passed"}, "call": {"duration": 0.0001559200000000871, "outcome": "passed"}, "teardown": {"duration": 0.0001356930000000478, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 16, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015504500000007582, "outcome": "passed"}, "call": {"duration": 0.00015988799999999692, "outcome": "passed"}, "teardown": {"duration": 0.00012876099999981072, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last", "lineno": 19, "outcome": "failed", "keywords": ["test_remove_first_and_last", "run.py", "test", ""], "setup": {"duration": 0.0001491670000000056, "outcome": "passed"}, "call": {"duration": 0.00039599000000012374, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 21, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 21, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:21: AssertionError"}, "teardown": {"duration": 0.00019977100000012626, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char", "lineno": 22, "outcome": "passed", "keywords": ["test_single_char", "run.py", "test", ""], "setup": {"duration": 0.00018348099999987433, "outcome": "passed"}, "call": {"duration": 0.000167293999999929, "outcome": "passed"}, "teardown": {"duration": 0.00013842800000007927, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 25, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017325000000001367, "outcome": "passed"}, "call": {"duration": 0.00015254300000000498, "outcome": "passed"}, "teardown": {"duration": 0.00013320899999991198, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 28, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015500800000012305, "outcome": "passed"}, "call": {"duration": 0.0003759180000000306, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 30, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 30, "message": "AssertionError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:30: AssertionError"}, "teardown": {"duration": 0.0001817399999999303, "outcome": "passed"}}, {"nodeid": "run.py::test_special_characters", "lineno": 31, "outcome": "failed", "keywords": ["test_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001690129999998291, "outcome": "passed"}, "call": {"duration": 0.0003573949999999826, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 33, "message": "AssertionError: assert '!#$hello#' == '!$hello#'\n  \n  - !$hello#\n  + !#$hello#\n  ?  +"}, "traceback": [{"path": "run.py", "lineno": 33, "message": "AssertionError"}], "longrepr": "def test_special_characters():\n>       assert remove_Occ(\"!@#$hello@#\", \"@\") == \"!$hello#\"\nE       AssertionError: assert '!#$hello#' == '!$hello#'\nE         \nE         - !$hello#\nE         + !#$hello#\nE         ?  +\n\nrun.py:33: AssertionError"}, "teardown": {"duration": 0.00017350299999985275, "outcome": "passed"}}, {"nodeid": "run.py::test_case_insensitive", "lineno": 34, "outcome": "failed", "keywords": ["test_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00017752600000009444, "outcome": "passed"}, "call": {"duration": 0.000350348999999861, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 36, "message": "AssertionError: assert 'HeloWord' == 'HeoWorld'\n  \n  - HeoWorld\n  ?       -\n  + HeloWord\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 36, "message": "AssertionError"}], "longrepr": "def test_case_insensitive():\n>       assert remove_Occ(\"HelloWorld\", \"l\") == \"HeoWorld\"\nE       AssertionError: assert 'HeloWord' == 'HeoWorld'\nE         \nE         - HeoWorld\nE         ?       -\nE         + HeloWord\nE         ?   +\n\nrun.py:36: AssertionError"}, "teardown": {"duration": 0.00017080699999993953, "outcome": "passed"}}, {"nodeid": "run.py::test_digit", "lineno": 37, "outcome": "passed", "keywords": ["test_digit", "run.py", "test", ""], "setup": {"duration": 0.00016553500000004995, "outcome": "passed"}, "call": {"duration": 0.0001560109999998449, "outcome": "passed"}, "teardown": {"duration": 0.00017531599999998093, "outcome": "passed"}}]}, {"created": 1733299822.394774, "duration": 0.055843353271484375, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 7, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_with_multiple_removals", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "type": "Function", "lineno": 34}, {"nodeid": "run.py::test_remove_Occ_with_space_char", "type": "Function", "lineno": 37}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "lineno": 10, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_in_string", "run.py", "test", ""], "setup": {"duration": 0.0003216440000000098, "outcome": "passed"}, "call": {"duration": 0.00043914000000011555, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 12, "message": "AssertionError: assert 'heo' == 'heloo'\n  \n  - heloo\n  ?   - -\n  + heo"}, "traceback": [{"path": "run.py", "lineno": 12, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_in_string():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\nE       AssertionError: assert 'heo' == 'heloo'\nE         \nE         - heloo\nE         ?   - -\nE         + heo\n\nrun.py:12: AssertionError"}, "teardown": {"duration": 0.0002790679999997714, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00019278799999966623, "outcome": "passed"}, "call": {"duration": 0.00018880399999998687, "outcome": "passed"}, "teardown": {"duration": 0.00013948899999993714, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.0001561629999997649, "outcome": "passed"}, "call": {"duration": 0.00014960699999999605, "outcome": "passed"}, "teardown": {"duration": 0.00013929499999987272, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015431099999974052, "outcome": "passed"}, "call": {"duration": 0.00014386199999982807, "outcome": "passed"}, "teardown": {"duration": 0.0001269399999999088, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_Occ_with_repeated_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00015660100000003396, "outcome": "passed"}, "call": {"duration": 0.00014358600000008437, "outcome": "passed"}, "teardown": {"duration": 0.00013338699999998482, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "lineno": 25, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00014572300000015304, "outcome": "passed"}, "call": {"duration": 0.0003913909999999632, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 27, "message": "AssertionError: assert 'bookkeepe' == 'bookkeepke'\n  \n  - bookkeepke\n  ?         -\n  + bookkeepe"}, "traceback": [{"path": "run.py", "lineno": 27, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_char_at_end():\n>       assert remove_Occ(\"bookkeeper\", \"r\") == \"bookkeepke\"\nE       AssertionError: assert 'bookkeepe' == 'bookkeepke'\nE         \nE         - bookkeepke\nE         ?         -\nE         + bookkeepe\n\nrun.py:27: AssertionError"}, "teardown": {"duration": 0.00017170199999982927, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_removals", "lineno": 28, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_removals", "run.py", "test", ""], "setup": {"duration": 0.0001621019999999973, "outcome": "passed"}, "call": {"duration": 0.00034715399999996066, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 30, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 30, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_removals():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:30: AssertionError"}, "teardown": {"duration": 0.00016539300000006918, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 31, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016642100000030524, "outcome": "passed"}, "call": {"duration": 0.00015343500000009058, "outcome": "passed"}, "teardown": {"duration": 0.00013086699999975693, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "lineno": 34, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.0001700489999998389, "outcome": "passed"}, "call": {"duration": 0.0001577370000003242, "outcome": "passed"}, "teardown": {"duration": 0.00012881700000022533, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_space_char", "lineno": 37, "outcome": "passed", "keywords": ["test_remove_Occ_with_space_char", "run.py", "test", ""], "setup": {"duration": 0.00014656500000009842, "outcome": "passed"}, "call": {"duration": 0.0001446719999997903, "outcome": "passed"}, "teardown": {"duration": 0.00016611200000005155, "outcome": "passed"}}]}, {"created": 1733299821.5570664, "duration": 0.047174692153930664, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 7, "failed": 1, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_single_character", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_char_not_in_string", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_first_and_last_same", "type": "Function", "lineno": 31}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00034502600000019257, "outcome": "passed"}, "call": {"duration": 0.0002018200000000192, "outcome": "passed"}, "teardown": {"duration": 0.00015864899999984416, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001855040000000585, "outcome": "passed"}, "call": {"duration": 0.00022610199999961722, "outcome": "passed"}, "teardown": {"duration": 0.0001364420000000699, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 16, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001647660000001494, "outcome": "passed"}, "call": {"duration": 0.0001492000000000715, "outcome": "passed"}, "teardown": {"duration": 0.00013059100000001322, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 19, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001590769999997299, "outcome": "passed"}, "call": {"duration": 0.000382791000000271, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 21, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 21, "message": "AssertionError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:21: AssertionError"}, "teardown": {"duration": 0.00025779900000033606, "outcome": "passed"}}, {"nodeid": "run.py::test_single_character", "lineno": 22, "outcome": "passed", "keywords": ["test_single_character", "run.py", "test", ""], "setup": {"duration": 0.00019243000000024324, "outcome": "passed"}, "call": {"duration": 0.00017813399999999646, "outcome": "passed"}, "teardown": {"duration": 0.00014708200000024263, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 25, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016372400000008724, "outcome": "passed"}, "call": {"duration": 0.0001506839999998455, "outcome": "passed"}, "teardown": {"duration": 0.00014193800000006362, "outcome": "passed"}}, {"nodeid": "run.py::test_char_not_in_string", "lineno": 28, "outcome": "passed", "keywords": ["test_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015053700000011716, "outcome": "passed"}, "call": {"duration": 0.00014349299999993903, "outcome": "passed"}, "teardown": {"duration": 0.0001292099999998797, "outcome": "passed"}}, {"nodeid": "run.py::test_first_and_last_same", "lineno": 31, "outcome": "passed", "keywords": ["test_first_and_last_same", "run.py", "test", ""], "setup": {"duration": 0.00015470999999989132, "outcome": "passed"}, "call": {"duration": 0.0001442100000002, "outcome": "passed"}, "teardown": {"duration": 0.000161360999999971, "outcome": "passed"}}]}, {"created": 1733299822.4390905, "duration": 0.047972917556762695, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 5, "total": 7, "collected": 7}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 28}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 10, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003441629999998419, "outcome": "passed"}, "call": {"duration": 0.0005203059999998594, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 12, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 12, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:12: AssertionError"}, "teardown": {"duration": 0.0003213070000001039, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 13, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002134700000000489, "outcome": "passed"}, "call": {"duration": 0.0004000109999999779, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 15, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 15, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:15: AssertionError"}, "teardown": {"duration": 0.00019028499999995674, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019033099999998804, "outcome": "passed"}, "call": {"duration": 0.00016425200000003137, "outcome": "passed"}, "teardown": {"duration": 0.00013337400000001942, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00016345600000011729, "outcome": "passed"}, "call": {"duration": 0.00016378899999991425, "outcome": "passed"}, "teardown": {"duration": 0.0001322369999998685, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00014887000000007866, "outcome": "passed"}, "call": {"duration": 0.00016468599999996947, "outcome": "passed"}, "teardown": {"duration": 0.00013408300000006257, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 25, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015589200000021286, "outcome": "passed"}, "call": {"duration": 0.00014074899999982904, "outcome": "passed"}, "teardown": {"duration": 0.00012605499999995828, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 28, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00014916399999997942, "outcome": "passed"}, "call": {"duration": 0.00014941800000012329, "outcome": "passed"}, "teardown": {"duration": 0.00016401100000007496, "outcome": "passed"}}]}, {"created": 1733299822.8492386, "duration": 0.04846382141113281, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 7, "failed": 2, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_char_is_first", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_char_is_last", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "type": "Function", "lineno": 34}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00033817199999996994, "outcome": "passed"}, "call": {"duration": 0.0002463859999999318, "outcome": "passed"}, "teardown": {"duration": 0.00014993500000004545, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001652930000000108, "outcome": "passed"}, "call": {"duration": 0.00015260300000008442, "outcome": "passed"}, "teardown": {"duration": 0.00013012899999997884, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00015669000000007038, "outcome": "passed"}, "call": {"duration": 0.00016034399999997895, "outcome": "passed"}, "teardown": {"duration": 0.0001277060000000052, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00014769900000000113, "outcome": "passed"}, "call": {"duration": 0.00013921699999985826, "outcome": "passed"}, "teardown": {"duration": 0.0001362650000000798, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.000143942000000008, "outcome": "passed"}, "call": {"duration": 0.0001412970000000957, "outcome": "passed"}, "teardown": {"duration": 0.00012284799999995322, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 25, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015348900000011767, "outcome": "passed"}, "call": {"duration": 0.00014064200000007965, "outcome": "passed"}, "teardown": {"duration": 0.0001321430000000845, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_is_first", "lineno": 28, "outcome": "passed", "keywords": ["test_remove_Occ_char_is_first", "run.py", "test", ""], "setup": {"duration": 0.00015480600000006284, "outcome": "passed"}, "call": {"duration": 0.00014961800000001801, "outcome": "passed"}, "teardown": {"duration": 0.00012467599999999024, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_is_last", "lineno": 31, "outcome": "failed", "keywords": ["test_remove_Occ_char_is_last", "run.py", "test", ""], "setup": {"duration": 0.0001432850000000485, "outcome": "passed"}, "call": {"duration": 0.000399206999999846, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 33, "message": "AssertionError: assert 'appl' == 'app'\n  \n  - app\n  + appl\n  ?    +"}, "traceback": [{"path": "run.py", "lineno": 33, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_char_is_last():\n>       assert remove_Occ(\"apple\", \"e\") == \"app\"\nE       AssertionError: assert 'appl' == 'app'\nE         \nE         - app\nE         + appl\nE         ?    +\n\nrun.py:33: AssertionError"}, "teardown": {"duration": 0.00017884100000009617, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "lineno": 34, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.0001919389999998078, "outcome": "passed"}, "call": {"duration": 0.0003828859999999157, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 36, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 36, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:36: AssertionError"}, "teardown": {"duration": 0.0002130629999999023, "outcome": "passed"}}]}, {"created": 1733299822.7729948, "duration": 0.04614591598510742, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 6, "failed": 1, "total": 7, "collected": 7}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 28}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00034729599999994143, "outcome": "passed"}, "call": {"duration": 0.0002230900000002034, "outcome": "passed"}, "teardown": {"duration": 0.00016720299999994914, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001692680000000557, "outcome": "passed"}, "call": {"duration": 0.0001572770000000112, "outcome": "passed"}, "teardown": {"duration": 0.0001301359999998919, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015010400000003976, "outcome": "passed"}, "call": {"duration": 0.00015257999999995775, "outcome": "passed"}, "teardown": {"duration": 0.00012690199999987328, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 19, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001478159999999118, "outcome": "passed"}, "call": {"duration": 0.0005292580000000324, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 21, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 21, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:21: AssertionError"}, "teardown": {"duration": 0.0002586490000000552, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00020117799999996855, "outcome": "passed"}, "call": {"duration": 0.00018745100000017167, "outcome": "passed"}, "teardown": {"duration": 0.00013974999999999405, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 25, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00019984300000008837, "outcome": "passed"}, "call": {"duration": 0.00015385599999984123, "outcome": "passed"}, "teardown": {"duration": 0.00012975999999986776, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 28, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015470299999997827, "outcome": "passed"}, "call": {"duration": 0.00015459600000000684, "outcome": "passed"}, "teardown": {"duration": 0.00016734900000003883, "outcome": "passed"}}]}, {"created": 1733299823.111044, "duration": 0.05970263481140137, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 6, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_char_at_start", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_char_at_end", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_first_and_last_of_same_char", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 34}, {"nodeid": "run.py::test_single_char_string", "type": "Function", "lineno": 37}, {"nodeid": "run.py::test_single_char_string_not_present", "type": "Function", "lineno": 40}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 10, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00041132100000007554, "outcome": "passed"}, "call": {"duration": 0.00041812100000004904, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 12, "message": "AssertionError: assert 'heo' == 'heloo'\n  \n  - heloo\n  ?   - -\n  + heo"}, "traceback": [{"path": "run.py", "lineno": 12, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\nE       AssertionError: assert 'heo' == 'heloo'\nE         \nE         - heloo\nE         ?   - -\nE         + heo\n\nrun.py:12: AssertionError"}, "teardown": {"duration": 0.0002588900000000116, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00020070999999965977, "outcome": "passed"}, "call": {"duration": 0.0001712449999997645, "outcome": "passed"}, "teardown": {"duration": 0.00013947100000022417, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00016348099999996535, "outcome": "passed"}, "call": {"duration": 0.0001643320000002113, "outcome": "passed"}, "teardown": {"duration": 0.00013115299999988395, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 19, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015294399999987718, "outcome": "passed"}, "call": {"duration": 0.00036807300000019083, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 21, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 21, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:21: AssertionError"}, "teardown": {"duration": 0.00018650799999964107, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_start", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00017751800000009865, "outcome": "passed"}, "call": {"duration": 0.00016006400000012633, "outcome": "passed"}, "teardown": {"duration": 0.0001388370000001693, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_end", "lineno": 25, "outcome": "failed", "keywords": ["test_remove_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00017570799999999664, "outcome": "passed"}, "call": {"duration": 0.00034968499999976643, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 27, "message": "AssertionError: assert 'appl' == 'apppl'\n  \n  - apppl\n  ?    -\n  + appl"}, "traceback": [{"path": "run.py", "lineno": 27, "message": "AssertionError"}], "longrepr": "def test_remove_char_at_end():\n>       assert remove_Occ(\"apple\", \"e\") == \"apppl\"\nE       AssertionError: assert 'appl' == 'apppl'\nE         \nE         - apppl\nE         ?    -\nE         + appl\n\nrun.py:27: AssertionError"}, "teardown": {"duration": 0.0001924290000001605, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 28, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.000179684999999985, "outcome": "passed"}, "call": {"duration": 0.0003447630000001922, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 30, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 30, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:30: AssertionError"}, "teardown": {"duration": 0.0001777029999998625, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_of_same_char", "lineno": 31, "outcome": "failed", "keywords": ["test_remove_first_and_last_of_same_char", "run.py", "test", ""], "setup": {"duration": 0.00016813899999990056, "outcome": "passed"}, "call": {"duration": 0.0003594129999999751, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 33, "message": "AssertionError: assert 'booeeper' == 'bookeeper'\n  \n  - bookeeper\n  ?    -\n  + booeeper"}, "traceback": [{"path": "run.py", "lineno": 33, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_of_same_char():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'booeeper' == 'bookeeper'\nE         \nE         - bookeeper\nE         ?    -\nE         + booeeper\n\nrun.py:33: AssertionError"}, "teardown": {"duration": 0.00018165400000036414, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 34, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001709149999999937, "outcome": "passed"}, "call": {"duration": 0.00015289200000001557, "outcome": "passed"}, "teardown": {"duration": 0.00014448399999977823, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string", "lineno": 37, "outcome": "passed", "keywords": ["test_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00015621899999995748, "outcome": "passed"}, "call": {"duration": 0.00015083100000001792, "outcome": "passed"}, "teardown": {"duration": 0.00013402399999984382, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string_not_present", "lineno": 40, "outcome": "passed", "keywords": ["test_single_char_string_not_present", "run.py", "test", ""], "setup": {"duration": 0.00015999199999994218, "outcome": "passed"}, "call": {"duration": 0.00015533299999992423, "outcome": "passed"}, "teardown": {"duration": 0.00016659800000029534, "outcome": "passed"}}]}, {"created": 1733299820.9912772, "duration": 0.05627131462097168, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_special_characters", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "type": "Function", "lineno": 34}, {"nodeid": "run.py::test_remove_Occ_unicode_characters", "type": "Function", "lineno": 37}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 10, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003565409999999325, "outcome": "passed"}, "call": {"duration": 0.00045344499999999677, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 12, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 12, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:12: AssertionError"}, "teardown": {"duration": 0.0002057390000000936, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 13, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018978099999999998, "outcome": "passed"}, "call": {"duration": 0.00035733199999987697, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 15, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 15, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:15: AssertionError"}, "teardown": {"duration": 0.00018401500000009285, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.000174067000000111, "outcome": "passed"}, "call": {"duration": 0.00015809699999991267, "outcome": "passed"}, "teardown": {"duration": 0.00014899600000006785, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00015567500000002177, "outcome": "passed"}, "call": {"duration": 0.00014832700000000365, "outcome": "passed"}, "teardown": {"duration": 0.00012933000000003858, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001661109999999688, "outcome": "passed"}, "call": {"duration": 0.00014940100000004897, "outcome": "passed"}, "teardown": {"duration": 0.00013158899999998752, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 25, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00016048700000004246, "outcome": "passed"}, "call": {"duration": 0.00014689200000006508, "outcome": "passed"}, "teardown": {"duration": 0.0001280299999999457, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 28, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001534780000000957, "outcome": "passed"}, "call": {"duration": 0.0003465419999999497, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 30, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 30, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:30: AssertionError"}, "teardown": {"duration": 0.00018166299999999858, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_special_characters", "lineno": 31, "outcome": "failed", "keywords": ["test_remove_Occ_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017770099999991906, "outcome": "passed"}, "call": {"duration": 0.0003467370000000969, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 33, "message": "AssertionError: assert '##$#' == '##$$#'\n  \n  - ##$$#\n  ?    -\n  + ##$#"}, "traceback": [{"path": "run.py", "lineno": 33, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_special_characters():\n>       assert remove_Occ(\"#$#$$#\", \"$\") == \"##$$#\"\nE       AssertionError: assert '##$#' == '##$$#'\nE         \nE         - ##$$#\nE         ?    -\nE         + ##$#\n\nrun.py:33: AssertionError"}, "teardown": {"duration": 0.0001743429999998547, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "lineno": 34, "outcome": "failed", "keywords": ["test_remove_Occ_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00017051900000009113, "outcome": "passed"}, "call": {"duration": 0.000352362000000106, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 36, "message": "AssertionError: assert 'Bnan' == 'Bnana'\n  \n  - Bnana\n  ?     -\n  + Bnan"}, "traceback": [{"path": "run.py", "lineno": 36, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_case_insensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnana\"\nE       AssertionError: assert 'Bnan' == 'Bnana'\nE         \nE         - Bnana\nE         ?     -\nE         + Bnan\n\nrun.py:36: AssertionError"}, "teardown": {"duration": 0.00017669799999997515, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_unicode_characters", "lineno": 37, "outcome": "passed", "keywords": ["test_remove_Occ_unicode_characters", "run.py", "test", ""], "setup": {"duration": 0.00019659300000007818, "outcome": "passed"}, "call": {"duration": 0.00015824700000011127, "outcome": "passed"}, "teardown": {"duration": 0.00017138599999988458, "outcome": "passed"}}]}, {"created": 1733299823.3100364, "duration": 0.058995962142944336, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 6, "failed": 2, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_first_and_last_same_char", "type": "Function", "lineno": 31}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0006008199999998354, "outcome": "passed"}, "call": {"duration": 0.00028818899999993874, "outcome": "passed"}, "teardown": {"duration": 0.00021413999999975175, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002629909999996016, "outcome": "passed"}, "call": {"duration": 0.00021056000000019282, "outcome": "passed"}, "teardown": {"duration": 0.00017786900000027472, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002939900000002993, "outcome": "passed"}, "call": {"duration": 0.00019638999999971318, "outcome": "passed"}, "teardown": {"duration": 0.0001752299999999707, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 19, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0002541000000002569, "outcome": "passed"}, "call": {"duration": 0.0005281199999997988, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 21, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 21, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:21: AssertionError"}, "teardown": {"duration": 0.0002973799999996807, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0002585900000000585, "outcome": "passed"}, "call": {"duration": 0.00022052999999999656, "outcome": "passed"}, "teardown": {"duration": 0.0002620399999999634, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 25, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.0005693999999998312, "outcome": "passed"}, "call": {"duration": 0.0002574099999996804, "outcome": "passed"}, "teardown": {"duration": 0.00027868000000008664, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 28, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00023444999999977512, "outcome": "passed"}, "call": {"duration": 0.0002367899999997647, "outcome": "passed"}, "teardown": {"duration": 0.00019235999999978048, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_first_and_last_same_char", "lineno": 31, "outcome": "failed", "keywords": ["test_remove_Occ_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.0002480099999999652, "outcome": "passed"}, "call": {"duration": 0.00043808999999983556, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 33, "message": "AssertionError: assert 'aa' == 'a'\n  \n  - a\n  + aa"}, "traceback": [{"path": "run.py", "lineno": 33, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_first_and_last_same_char():\n>       assert remove_Occ(\"abba\", \"b\") == \"a\"\nE       AssertionError: assert 'aa' == 'a'\nE         \nE         - a\nE         + aa\n\nrun.py:33: AssertionError"}, "teardown": {"duration": 0.0003014289999998532, "outcome": "passed"}}]}, {"created": 1733299821.5537658, "duration": 0.053093671798706055, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 8, "failed": 3, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_multiple_first_occurrences", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_multiple_last_occurrences", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_single_character", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_first_and_last_of_single_character", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_remove_empty_string", "type": "Function", "lineno": 34}, {"nodeid": "run.py::test_remove_first_of_empty_string", "type": "Function", "lineno": 37}, {"nodeid": "run.py::test_remove_last_of_empty_string", "type": "Function", "lineno": 40}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003819540000000732, "outcome": "passed"}, "call": {"duration": 0.0001816850000000425, "outcome": "passed"}, "teardown": {"duration": 0.00015100199999995567, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017148399999999953, "outcome": "passed"}, "call": {"duration": 0.00015846100000005414, "outcome": "passed"}, "teardown": {"duration": 0.000130884999999914, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.0001521919999998289, "outcome": "passed"}, "call": {"duration": 0.0001552049999999916, "outcome": "passed"}, "teardown": {"duration": 0.00012608300000005457, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 19, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00014751999999984555, "outcome": "passed"}, "call": {"duration": 0.0003915439999999659, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 21, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 21, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:21: AssertionError"}, "teardown": {"duration": 0.00018226800000009646, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_first_occurrences", "lineno": 22, "outcome": "failed", "keywords": ["test_remove_multiple_first_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017209699999987116, "outcome": "passed"}, "call": {"duration": 0.00035051100000016433, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 24, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 24, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_first_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:24: AssertionError"}, "teardown": {"duration": 0.0001771439999997959, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_last_occurrences", "lineno": 25, "outcome": "failed", "keywords": ["test_remove_multiple_last_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016871500000004147, "outcome": "passed"}, "call": {"duration": 0.00032129600000008196, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 27, "message": "AssertionError: assert 'misisippi' == 'mippi'\n  \n  - mippi\n  + misisippi"}, "traceback": [{"path": "run.py", "lineno": 27, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_last_occurrences():\n>       assert remove_Occ(\"mississippi\", \"s\") == \"mippi\"\nE       AssertionError: assert 'misisippi' == 'mippi'\nE         \nE         - mippi\nE         + misisippi\n\nrun.py:27: AssertionError"}, "teardown": {"duration": 0.00017645200000004913, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_single_character", "lineno": 28, "outcome": "passed", "keywords": ["test_remove_single_character", "run.py", "test", ""], "setup": {"duration": 0.0001710020000000867, "outcome": "passed"}, "call": {"duration": 0.00015586999999994688, "outcome": "passed"}, "teardown": {"duration": 0.00013276300000009122, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_of_single_character", "lineno": 31, "outcome": "passed", "keywords": ["test_remove_first_and_last_of_single_character", "run.py", "test", ""], "setup": {"duration": 0.00016368099999986008, "outcome": "passed"}, "call": {"duration": 0.00015383899999998896, "outcome": "passed"}, "teardown": {"duration": 0.00013180899999998275, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_empty_string", "lineno": 34, "outcome": "passed", "keywords": ["test_remove_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001537480000000091, "outcome": "passed"}, "call": {"duration": 0.00015527900000011918, "outcome": "passed"}, "teardown": {"duration": 0.00012724300000011013, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_of_empty_string", "lineno": 37, "outcome": "passed", "keywords": ["test_remove_first_of_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001482360000000238, "outcome": "passed"}, "call": {"duration": 0.00013996900000012857, "outcome": "passed"}, "teardown": {"duration": 0.00013618799999992603, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_of_empty_string", "lineno": 40, "outcome": "passed", "keywords": ["test_remove_last_of_empty_string", "run.py", "test", ""], "setup": {"duration": 0.000145722999999931, "outcome": "passed"}, "call": {"duration": 0.00014061899999995298, "outcome": "passed"}, "teardown": {"duration": 0.00016259700000009758, "outcome": "passed"}}]}, {"created": 1733299822.0507996, "duration": 0.044213294982910156, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 1, "passed": 4, "total": 5, "collected": 5}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test1", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test2", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test3", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test4", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test5", "type": "Function", "lineno": 18}]}], "tests": [{"nodeid": "run.py::test1", "lineno": 6, "outcome": "failed", "keywords": ["test1", "run.py", "test", ""], "setup": {"duration": 0.00040701400000009436, "outcome": "passed"}, "call": {"duration": 0.0004784489999998254, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test1():\n>       assert remove_Occ(\"hello\",\"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002823080000000644, "outcome": "passed"}}, {"nodeid": "run.py::test2", "lineno": 9, "outcome": "passed", "keywords": ["test2", "run.py", "test", ""], "setup": {"duration": 0.0001927259999998654, "outcome": "passed"}, "call": {"duration": 0.0001845659999999416, "outcome": "passed"}, "teardown": {"duration": 0.00013862100000006095, "outcome": "passed"}}, {"nodeid": "run.py::test3", "lineno": 12, "outcome": "passed", "keywords": ["test3", "run.py", "test", ""], "setup": {"duration": 0.00015884500000007407, "outcome": "passed"}, "call": {"duration": 0.00014923700000002427, "outcome": "passed"}, "teardown": {"duration": 0.00013976200000009875, "outcome": "passed"}}, {"nodeid": "run.py::test4", "lineno": 15, "outcome": "passed", "keywords": ["test4", "run.py", "test", ""], "setup": {"duration": 0.00015079799999995203, "outcome": "passed"}, "call": {"duration": 0.00014433800000013264, "outcome": "passed"}, "teardown": {"duration": 0.00012652199999996228, "outcome": "passed"}}, {"nodeid": "run.py::test5", "lineno": 18, "outcome": "passed", "keywords": ["test5", "run.py", "test", ""], "setup": {"duration": 0.00015259099999997972, "outcome": "passed"}, "call": {"duration": 0.0001421829999999069, "outcome": "passed"}, "teardown": {"duration": 0.0001690409999999254, "outcome": "passed"}}]}, {"created": 1733299822.6214921, "duration": 0.05510234832763672, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 3, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_case_sensitivity", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003376479999999127, "outcome": "passed"}, "call": {"duration": 0.00048311699999992186, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020982199999997064, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00018715500000032748, "outcome": "passed"}, "call": {"duration": 0.0001831370000000554, "outcome": "passed"}, "teardown": {"duration": 0.00015153800000033968, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016846699999994996, "outcome": "passed"}, "call": {"duration": 0.00014775999999994127, "outcome": "passed"}, "teardown": {"duration": 0.00013083199999996964, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00016565600000006953, "outcome": "passed"}, "call": {"duration": 0.000332766999999734, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'a' == 'ale'\n  \n  - ale\n  + a"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"apple\", \"p\") == \"ale\"\nE       AssertionError: assert 'a' == 'ale'\nE         \nE         - ale\nE         + a\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00018105000000012694, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001710799999998791, "outcome": "passed"}, "call": {"duration": 0.00015323800000022203, "outcome": "passed"}, "teardown": {"duration": 0.00014662500000017786, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001561489999999388, "outcome": "passed"}, "call": {"duration": 0.0003477050000002535, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.0001669460000002232, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_case_sensitivity", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_case_sensitivity", "run.py", "test", ""], "setup": {"duration": 0.00016301299999987862, "outcome": "passed"}, "call": {"duration": 0.0003176489999998644, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'CaeSen' == 'CaseSensitve'\n  \n  - CaseSensitve\n  + CaeSen"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_case_sensitivity():\n>       assert remove_Occ(\"CaseSensitive\", \"s\") == \"CaseSensitve\"\nE       AssertionError: assert 'CaeSen' == 'CaseSensitve'\nE         \nE         - CaseSensitve\nE         + CaeSen\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017475399999966612, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001736609999998251, "outcome": "passed"}, "call": {"duration": 0.00035107099999986957, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'helloworld' == 'hello@orld'\n  \n  - hello@orld\n  ?      ^\n  + helloworld\n  ?      ^"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"hello@world\", \"@\") == \"hello@orld\"\nE       AssertionError: assert 'helloworld' == 'hello@orld'\nE         \nE         - hello@orld\nE         ?      ^\nE         + helloworld\nE         ?      ^\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00019113900000000683, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001705249999996994, "outcome": "passed"}, "call": {"duration": 0.00034038399999980484, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert '!!hello!!' == 'hello!!!'\n  \n  - hello!!!\n  ?        -\n  + !!hello!!\n  ? ++"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_special_characters():\n>       assert remove_Occ(\"!!!hello!!!\", \"!\") == \"hello!!!\"\nE       AssertionError: assert '!!hello!!' == 'hello!!!'\nE         \nE         - hello!!!\nE         ?        -\nE         + !!hello!!\nE         ? ++\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00020777099999991222, "outcome": "passed"}}]}, {"created": 1733299821.6810849, "duration": 0.056276798248291016, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_first_and_last", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_single_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_case_insensitive", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_digit", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00036111999999999256, "outcome": "passed"}, "call": {"duration": 0.0005184419999999523, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020568999999981408, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018929599999983893, "outcome": "passed"}, "call": {"duration": 0.0001675830000000822, "outcome": "passed"}, "teardown": {"duration": 0.00013790700000004819, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001603700000001318, "outcome": "passed"}, "call": {"duration": 0.000147112999999921, "outcome": "passed"}, "teardown": {"duration": 0.00012888600000016126, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_first_and_last", "run.py", "test", ""], "setup": {"duration": 0.00016459399999990687, "outcome": "passed"}, "call": {"duration": 0.00035931200000005603, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017698400000010217, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char", "lineno": 18, "outcome": "passed", "keywords": ["test_single_char", "run.py", "test", ""], "setup": {"duration": 0.00016957499999992187, "outcome": "passed"}, "call": {"duration": 0.00015684999999998617, "outcome": "passed"}, "teardown": {"duration": 0.00014461899999984595, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015923100000003743, "outcome": "passed"}, "call": {"duration": 0.0001452220000000004, "outcome": "passed"}, "teardown": {"duration": 0.00012887799999994343, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015464299999989883, "outcome": "passed"}, "call": {"duration": 0.000339778999999929, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017843500000003232, "outcome": "passed"}}, {"nodeid": "run.py::test_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001729779999999348, "outcome": "passed"}, "call": {"duration": 0.00036014200000011876, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '!#$hello' == '!$hello#'\n  \n  - !$hello#\n  ?        -\n  + !#$hello\n  ?  +"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_special_characters():\n>       assert remove_Occ(\"!@#$hello@#\", \"@\") == \"!$hello#\"\nE       AssertionError: assert '!#$hello' == '!$hello#'\nE         \nE         - !$hello#\nE         ?        -\nE         + !#$hello\nE         ?  +\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017691300000000076, "outcome": "passed"}}, {"nodeid": "run.py::test_case_insensitive", "lineno": 30, "outcome": "failed", "keywords": ["test_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00017301400000002687, "outcome": "passed"}, "call": {"duration": 0.00036341500000003357, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'HeloWor' == 'HeoWorld'\n  \n  - HeoWorld\n  ?       --\n  + HeloWor\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_case_insensitive():\n>       assert remove_Occ(\"HelloWorld\", \"l\") == \"HeoWorld\"\nE       AssertionError: assert 'HeloWor' == 'HeoWorld'\nE         \nE         - HeoWorld\nE         ?       --\nE         + HeloWor\nE         ?   +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00018036399999998842, "outcome": "passed"}}, {"nodeid": "run.py::test_digit", "lineno": 33, "outcome": "passed", "keywords": ["test_digit", "run.py", "test", ""], "setup": {"duration": 0.0001728670000000765, "outcome": "passed"}, "call": {"duration": 0.00017575499999988864, "outcome": "passed"}, "teardown": {"duration": 0.00017391200000016482, "outcome": "passed"}}]}, {"created": 1733299822.1321626, "duration": 0.05164837837219238, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 7, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_multiple_removals", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_space_char", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_in_string", "run.py", "test", ""], "setup": {"duration": 0.00031213100000027083, "outcome": "passed"}, "call": {"duration": 0.00044463699999974793, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heloo'\n  \n  - heloo\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_in_string():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\nE       AssertionError: assert 'he' == 'heloo'\nE         \nE         - heloo\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020178299999962235, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00019739900000015353, "outcome": "passed"}, "call": {"duration": 0.00018631500000010348, "outcome": "passed"}, "teardown": {"duration": 0.0001463049999999022, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00016114299999969717, "outcome": "passed"}, "call": {"duration": 0.00014604199999990186, "outcome": "passed"}, "teardown": {"duration": 0.00012740600000027413, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.0001523900000002243, "outcome": "passed"}, "call": {"duration": 0.00013936700000005686, "outcome": "passed"}, "teardown": {"duration": 0.00012457899999995803, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_with_repeated_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00015827899999987238, "outcome": "passed"}, "call": {"duration": 0.00014282900000006649, "outcome": "passed"}, "teardown": {"duration": 0.0001363969999998993, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00014705899999967187, "outcome": "passed"}, "call": {"duration": 0.0003967590000000243, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'bookkeepe' == 'bookkeepke'\n  \n  - bookkeepke\n  ?         -\n  + bookkeepe"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_char_at_end():\n>       assert remove_Occ(\"bookkeeper\", \"r\") == \"bookkeepke\"\nE       AssertionError: assert 'bookkeepe' == 'bookkeepke'\nE         \nE         - bookkeepke\nE         ?         -\nE         + bookkeepe\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017807199999975154, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_removals", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_removals", "run.py", "test", ""], "setup": {"duration": 0.0001685600000000953, "outcome": "passed"}, "call": {"duration": 0.00034513200000008126, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_removals():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00016884200000033545, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016474300000002273, "outcome": "passed"}, "call": {"duration": 0.00014825299999987607, "outcome": "passed"}, "teardown": {"duration": 0.0001344149999997768, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00016339899999984198, "outcome": "passed"}, "call": {"duration": 0.0001436130000000979, "outcome": "passed"}, "teardown": {"duration": 0.00012918600000011438, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_space_char", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_with_space_char", "run.py", "test", ""], "setup": {"duration": 0.0001520999999997663, "outcome": "passed"}, "call": {"duration": 0.0001418549999998575, "outcome": "passed"}, "teardown": {"duration": 0.0001571590000000178, "outcome": "passed"}}]}, {"created": 1733299822.6875067, "duration": 0.047017812728881836, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 6, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_single_character", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_char_not_in_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_first_and_last_same", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00031860100000002944, "outcome": "passed"}, "call": {"duration": 0.00048050899999996233, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00021021700000023458, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019722399999988482, "outcome": "passed"}, "call": {"duration": 0.00017518599999988282, "outcome": "passed"}, "teardown": {"duration": 0.00013950100000004184, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016782300000039996, "outcome": "passed"}, "call": {"duration": 0.0001449550000001132, "outcome": "passed"}, "teardown": {"duration": 0.00012870599999992294, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016007199999990007, "outcome": "passed"}, "call": {"duration": 0.00035016899999984474, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017610200000017784, "outcome": "passed"}}, {"nodeid": "run.py::test_single_character", "lineno": 18, "outcome": "passed", "keywords": ["test_single_character", "run.py", "test", ""], "setup": {"duration": 0.00016895199999966692, "outcome": "passed"}, "call": {"duration": 0.000149284999999999, "outcome": "passed"}, "teardown": {"duration": 0.00013275100000020856, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016101000000023902, "outcome": "passed"}, "call": {"duration": 0.00014308700000009722, "outcome": "passed"}, "teardown": {"duration": 0.00012921300000012792, "outcome": "passed"}}, {"nodeid": "run.py::test_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00014713900000007385, "outcome": "passed"}, "call": {"duration": 0.0001838990000000429, "outcome": "passed"}, "teardown": {"duration": 0.00013021200000018496, "outcome": "passed"}}, {"nodeid": "run.py::test_first_and_last_same", "lineno": 27, "outcome": "passed", "keywords": ["test_first_and_last_same", "run.py", "test", ""], "setup": {"duration": 0.00015003099999999492, "outcome": "passed"}, "call": {"duration": 0.00013939800000040137, "outcome": "passed"}, "teardown": {"duration": 0.00018092100000011158, "outcome": "passed"}}]}, {"created": 1733299822.1211915, "duration": 0.04597139358520508, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 5, "total": 7, "collected": 7}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 24}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00030269600000032426, "outcome": "passed"}, "call": {"duration": 0.00041095799999979477, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020686500000000052, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018945100000022919, "outcome": "passed"}, "call": {"duration": 0.0004339359999998571, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00018216899999989877, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017533599999985938, "outcome": "passed"}, "call": {"duration": 0.0001533010000001056, "outcome": "passed"}, "teardown": {"duration": 0.00014685600000019505, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00015544500000030936, "outcome": "passed"}, "call": {"duration": 0.000143510999999652, "outcome": "passed"}, "teardown": {"duration": 0.00012976299999989394, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001554029999999429, "outcome": "passed"}, "call": {"duration": 0.00014363000000017223, "outcome": "passed"}, "teardown": {"duration": 0.0001342050000001649, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001623120000000533, "outcome": "passed"}, "call": {"duration": 0.00014503199999982286, "outcome": "passed"}, "teardown": {"duration": 0.00012987899999972186, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00014674499999989266, "outcome": "passed"}, "call": {"duration": 0.00014805600000000751, "outcome": "passed"}, "teardown": {"duration": 0.00015981499999995208, "outcome": "passed"}}]}, {"created": 1733299823.4860954, "duration": 0.052564382553100586, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 6, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_is_first", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_char_is_last", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003028359999999175, "outcome": "passed"}, "call": {"duration": 0.00046702500000028735, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00021931499999983117, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018324899999999644, "outcome": "passed"}, "call": {"duration": 0.00017462600000017758, "outcome": "passed"}, "teardown": {"duration": 0.00014769800000014044, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00015745199999983583, "outcome": "passed"}, "call": {"duration": 0.00014806000000033848, "outcome": "passed"}, "teardown": {"duration": 0.00012912100000006532, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015623299999978357, "outcome": "passed"}, "call": {"duration": 0.00014698599999984907, "outcome": "passed"}, "teardown": {"duration": 0.00013057299999985617, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00017822399999989358, "outcome": "passed"}, "call": {"duration": 0.00015453299999990122, "outcome": "passed"}, "teardown": {"duration": 0.00013024500000025085, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00014998199999993744, "outcome": "passed"}, "call": {"duration": 0.00015302600000000055, "outcome": "passed"}, "teardown": {"duration": 0.00012748600000023202, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_is_first", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_is_first", "run.py", "test", ""], "setup": {"duration": 0.0001463799999998905, "outcome": "passed"}, "call": {"duration": 0.00015701400000001087, "outcome": "passed"}, "teardown": {"duration": 0.000138516000000255, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_is_last", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_char_is_last", "run.py", "test", ""], "setup": {"duration": 0.00014841800000020555, "outcome": "passed"}, "call": {"duration": 0.00034693900000037914, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'appl' == 'app'\n  \n  - app\n  + appl\n  ?    +"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_char_is_last():\n>       assert remove_Occ(\"apple\", \"e\") == \"app\"\nE       AssertionError: assert 'appl' == 'app'\nE         \nE         - app\nE         + appl\nE         ?    +\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0001722379999997692, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.0001716109999998494, "outcome": "passed"}, "call": {"duration": 0.00035693400000003095, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.0002000220000000219, "outcome": "passed"}}]}, {"created": 1733299823.1925032, "duration": 0.04552578926086426, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 5, "total": 7, "collected": 7}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 24}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003080040000003059, "outcome": "passed"}, "call": {"duration": 0.0003892389999999857, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020288499999976395, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001892079999996632, "outcome": "passed"}, "call": {"duration": 0.00018322999999975664, "outcome": "passed"}, "teardown": {"duration": 0.00013881599999976402, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017337700000030765, "outcome": "passed"}, "call": {"duration": 0.00014948700000028126, "outcome": "passed"}, "teardown": {"duration": 0.00013106599999979096, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015478099999999273, "outcome": "passed"}, "call": {"duration": 0.0003866040000000126, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00018109900000018442, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00017176600000023967, "outcome": "passed"}, "call": {"duration": 0.0001544849999999265, "outcome": "passed"}, "teardown": {"duration": 0.00013084199999990886, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016908000000004364, "outcome": "passed"}, "call": {"duration": 0.00014301700000007855, "outcome": "passed"}, "teardown": {"duration": 0.00012865200000033994, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.0001581569999999921, "outcome": "passed"}, "call": {"duration": 0.00015811699999979112, "outcome": "passed"}, "teardown": {"duration": 0.0001591969999998888, "outcome": "passed"}}]}, {"created": 1733299824.4216893, "duration": 0.0557558536529541, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 6, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_char_at_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_char_at_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_first_and_last_of_same_char", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_single_char_string", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_single_char_string_not_present", "type": "Function", "lineno": 36}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003910209999999914, "outcome": "passed"}, "call": {"duration": 0.00039780199999994714, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heloo'\n  \n  - heloo\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\nE       AssertionError: assert 'he' == 'heloo'\nE         \nE         - heloo\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020627900000014243, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018001599999983853, "outcome": "passed"}, "call": {"duration": 0.00016833100000002155, "outcome": "passed"}, "teardown": {"duration": 0.0001364470000000395, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00016677899999995027, "outcome": "passed"}, "call": {"duration": 0.0001555519999998367, "outcome": "passed"}, "teardown": {"duration": 0.00013029300000000354, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00014990500000000573, "outcome": "passed"}, "call": {"duration": 0.00035725499999994526, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017975199999997749, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_start", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00017005999999986088, "outcome": "passed"}, "call": {"duration": 0.00015101499999992107, "outcome": "passed"}, "teardown": {"duration": 0.00013326299999993907, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_end", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00015474999999987027, "outcome": "passed"}, "call": {"duration": 0.00032701099999998817, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'appl' == 'apppl'\n  \n  - apppl\n  ?    -\n  + appl"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_char_at_end():\n>       assert remove_Occ(\"apple\", \"e\") == \"apppl\"\nE       AssertionError: assert 'appl' == 'apppl'\nE         \nE         - apppl\nE         ?    -\nE         + appl\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00018407200000014612, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016910599999997444, "outcome": "passed"}, "call": {"duration": 0.0003357549999998266, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017317399999994265, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_of_same_char", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_first_and_last_of_same_char", "run.py", "test", ""], "setup": {"duration": 0.00016586699999998622, "outcome": "passed"}, "call": {"duration": 0.0003115099999999593, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'boo' == 'bookeeper'\n  \n  - bookeeper\n  + boo"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_of_same_char():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'boo' == 'bookeeper'\nE         \nE         - bookeeper\nE         + boo\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0001743030000000978, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 30, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017080000000002649, "outcome": "passed"}, "call": {"duration": 0.0001536630000000816, "outcome": "passed"}, "teardown": {"duration": 0.00013345099999995114, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string", "lineno": 33, "outcome": "passed", "keywords": ["test_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00016684299999991659, "outcome": "passed"}, "call": {"duration": 0.0001478070000000553, "outcome": "passed"}, "teardown": {"duration": 0.00012906799999989893, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string_not_present", "lineno": 36, "outcome": "passed", "keywords": ["test_single_char_string_not_present", "run.py", "test", ""], "setup": {"duration": 0.0001487339999999282, "outcome": "passed"}, "call": {"duration": 0.0001524420000000859, "outcome": "passed"}, "teardown": {"duration": 0.0001561690000000393, "outcome": "passed"}}]}, {"created": 1733299822.2615871, "duration": 0.05549168586730957, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_unicode_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003099380000000096, "outcome": "passed"}, "call": {"duration": 0.0004034010000002475, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002180059999998818, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018096000000022983, "outcome": "passed"}, "call": {"duration": 0.0004009549999999251, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00018927499999987774, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001784960000001945, "outcome": "passed"}, "call": {"duration": 0.00017211300000008478, "outcome": "passed"}, "teardown": {"duration": 0.00013479400000004915, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00016663399999972128, "outcome": "passed"}, "call": {"duration": 0.00014962599999979176, "outcome": "passed"}, "teardown": {"duration": 0.00012910300000035235, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016267400000025134, "outcome": "passed"}, "call": {"duration": 0.0001430230000001309, "outcome": "passed"}, "teardown": {"duration": 0.00012554499999994917, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00014890000000011838, "outcome": "passed"}, "call": {"duration": 0.0001466869999999787, "outcome": "passed"}, "teardown": {"duration": 0.00012532299999978846, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00014533700000018968, "outcome": "passed"}, "call": {"duration": 0.0003463099999998498, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017082100000020972, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001672550000000328, "outcome": "passed"}, "call": {"duration": 0.00033769900000013564, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '##$' == '##$$#'\n  \n  - ##$$#\n  ?    --\n  + ##$"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_special_characters():\n>       assert remove_Occ(\"#$#$$#\", \"$\") == \"##$$#\"\nE       AssertionError: assert '##$' == '##$$#'\nE         \nE         - ##$$#\nE         ?    --\nE         + ##$\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017936500000015343, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00017189699999997643, "outcome": "passed"}, "call": {"duration": 0.0003376460000001913, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'Bnan' == 'Bnana'\n  \n  - Bnana\n  ?     -\n  + Bnan"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_case_insensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnana\"\nE       AssertionError: assert 'Bnan' == 'Bnana'\nE         \nE         - Bnana\nE         ?     -\nE         + Bnan\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017460599999985504, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_unicode_characters", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_unicode_characters", "run.py", "test", ""], "setup": {"duration": 0.00017103000000018298, "outcome": "passed"}, "call": {"duration": 0.00016850999999995508, "outcome": "passed"}, "teardown": {"duration": 0.00017152200000003504, "outcome": "passed"}}]}, {"created": 1733299823.748783, "duration": 0.04858732223510742, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 6, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_first_and_last_same_char", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003533520000000845, "outcome": "passed"}, "call": {"duration": 0.0005365889999999762, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002437260000001107, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001925880000002156, "outcome": "passed"}, "call": {"duration": 0.00016775500000010268, "outcome": "passed"}, "teardown": {"duration": 0.0001448800000001249, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015983000000008296, "outcome": "passed"}, "call": {"duration": 0.0001486619999999661, "outcome": "passed"}, "teardown": {"duration": 0.00013277699999991732, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001592139999999631, "outcome": "passed"}, "call": {"duration": 0.00036398500000012213, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00019055500000009218, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017234900000007158, "outcome": "passed"}, "call": {"duration": 0.00015381000000003198, "outcome": "passed"}, "teardown": {"duration": 0.00014780400000002913, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00015405499999987526, "outcome": "passed"}, "call": {"duration": 0.00014532000000011536, "outcome": "passed"}, "teardown": {"duration": 0.00013099199999988542, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015674300000001473, "outcome": "passed"}, "call": {"duration": 0.00014348400000008255, "outcome": "passed"}, "teardown": {"duration": 0.000127410000000161, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_first_and_last_same_char", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00015762899999982594, "outcome": "passed"}, "call": {"duration": 0.0001447759999999576, "outcome": "passed"}, "teardown": {"duration": 0.00016917799999993655, "outcome": "passed"}}]}, {"created": 1733299823.8237612, "duration": 0.054551124572753906, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 7, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_multiple_first_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_multiple_last_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_single_character", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_first_and_last_of_single_character", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_empty_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_first_of_empty_string", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_last_of_empty_string", "type": "Function", "lineno": 36}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0009343990000001412, "outcome": "passed"}, "call": {"duration": 0.00044803600000031807, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0001910459999998615, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001985260000001432, "outcome": "passed"}, "call": {"duration": 0.0001583499999999738, "outcome": "passed"}, "teardown": {"duration": 0.0001352029999996951, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00016655599999992887, "outcome": "passed"}, "call": {"duration": 0.00014540500000004286, "outcome": "passed"}, "teardown": {"duration": 0.00012952199999993752, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.000177827999999991, "outcome": "passed"}, "call": {"duration": 0.00033754099999994125, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.0001735809999998672, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_first_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_multiple_first_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017287000000010266, "outcome": "passed"}, "call": {"duration": 0.0003557649999996748, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_first_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.0001735270000002842, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_last_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_multiple_last_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016749200000010234, "outcome": "passed"}, "call": {"duration": 0.000311883999999818, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'misis' == 'mippi'\n  \n  - mippi\n  + misis"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_last_occurrences():\n>       assert remove_Occ(\"mississippi\", \"s\") == \"mippi\"\nE       AssertionError: assert 'misis' == 'mippi'\nE         \nE         - mippi\nE         + misis\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017870000000019814, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_single_character", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_single_character", "run.py", "test", ""], "setup": {"duration": 0.00017419500000004362, "outcome": "passed"}, "call": {"duration": 0.00015146600000015553, "outcome": "passed"}, "teardown": {"duration": 0.00013194900000002008, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_of_single_character", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_first_and_last_of_single_character", "run.py", "test", ""], "setup": {"duration": 0.00016617499999993512, "outcome": "passed"}, "call": {"duration": 0.0001408659999997397, "outcome": "passed"}, "teardown": {"duration": 0.00012818300000017047, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_empty_string", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00014755499999985489, "outcome": "passed"}, "call": {"duration": 0.00015408299999997155, "outcome": "passed"}, "teardown": {"duration": 0.0001308949999998532, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_of_empty_string", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_first_of_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001517010000000596, "outcome": "passed"}, "call": {"duration": 0.00013951700000003342, "outcome": "passed"}, "teardown": {"duration": 0.00013836199999994747, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_of_empty_string", "lineno": 36, "outcome": "passed", "keywords": ["test_remove_last_of_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001485040000002158, "outcome": "passed"}, "call": {"duration": 0.00013771500000014925, "outcome": "passed"}, "teardown": {"duration": 0.00015412599999997667, "outcome": "passed"}}]}, {"created": 1733299822.6834853, "duration": 0.04399991035461426, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 3, "total": 5, "collected": 5}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test1", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test2", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test3", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test4", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test5", "type": "Function", "lineno": 17}]}], "tests": [{"nodeid": "run.py::test1", "lineno": 5, "outcome": "failed", "keywords": ["test1", "run.py", "test", ""], "setup": {"duration": 0.00032990499999963063, "outcome": "passed"}, "call": {"duration": 0.0005129789999998025, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 7, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 7, "message": "AssertionError"}], "longrepr": "def test1():\n>       assert remove_Occ(\"hello\",\"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:7: AssertionError"}, "teardown": {"duration": 0.00020345999999982212, "outcome": "passed"}}, {"nodeid": "run.py::test2", "lineno": 8, "outcome": "passed", "keywords": ["test2", "run.py", "test", ""], "setup": {"duration": 0.00017978300000009995, "outcome": "passed"}, "call": {"duration": 0.00018668499999963117, "outcome": "passed"}, "teardown": {"duration": 0.0001390159999998808, "outcome": "passed"}}, {"nodeid": "run.py::test3", "lineno": 11, "outcome": "passed", "keywords": ["test3", "run.py", "test", ""], "setup": {"duration": 0.00015838599999984382, "outcome": "passed"}, "call": {"duration": 0.00016093500000025074, "outcome": "passed"}, "teardown": {"duration": 0.00013608899999972834, "outcome": "passed"}}, {"nodeid": "run.py::test4", "lineno": 14, "outcome": "failed", "keywords": ["test4", "run.py", "test", ""], "setup": {"duration": 0.00015469199999973426, "outcome": "passed"}, "call": {"duration": 0.00037616899999992626, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 16, "message": "AssertionError: assert 'heollol' == 'helollol'\n  \n  - helollol\n  ?   -\n  + heollol"}, "traceback": [{"path": "run.py", "lineno": 16, "message": "AssertionError"}], "longrepr": "def test4():\n>       assert remove_Occ(\"hellolloll\",\"l\") == \"helollol\"\nE       AssertionError: assert 'heollol' == 'helollol'\nE         \nE         - helollol\nE         ?   -\nE         + heollol\n\nrun.py:16: AssertionError"}, "teardown": {"duration": 0.00017964800000003223, "outcome": "passed"}}, {"nodeid": "run.py::test5", "lineno": 17, "outcome": "passed", "keywords": ["test5", "run.py", "test", ""], "setup": {"duration": 0.00018354699999978408, "outcome": "passed"}, "call": {"duration": 0.0001534310000002037, "outcome": "passed"}, "teardown": {"duration": 0.00016429800000006267, "outcome": "passed"}}]}, {"created": 1733299823.4448762, "duration": 0.057660818099975586, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 7, "passed": 2, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_with_case_sensitivity", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "type": "Function", "lineno": 29}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003329579999999943, "outcome": "passed"}, "call": {"duration": 0.0004901889999997522, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 7, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 7, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:7: AssertionError"}, "teardown": {"duration": 0.00025962199999973734, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 8, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0002074609999995758, "outcome": "passed"}, "call": {"duration": 0.0001866549999998135, "outcome": "passed"}, "teardown": {"duration": 0.00014608699999962838, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 11, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016976199999962915, "outcome": "passed"}, "call": {"duration": 0.00037516900000023057, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 13, "message": "AssertionError: assert 'bnn' == 'bnan'\n  \n  - bnan\n  ?   -\n  + bnn"}, "traceback": [{"path": "run.py", "lineno": 13, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnan\"\nE       AssertionError: assert 'bnn' == 'bnan'\nE         \nE         - bnan\nE         ?   -\nE         + bnn\n\nrun.py:13: AssertionError"}, "teardown": {"duration": 0.0001855339999998762, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00017357699999998033, "outcome": "passed"}, "call": {"duration": 0.00035655000000023307, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 16, "message": "AssertionError: assert 'al' == 'ale'\n  \n  - ale\n  ?   -\n  + al"}, "traceback": [{"path": "run.py", "lineno": 16, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"apple\", \"p\") == \"ale\"\nE       AssertionError: assert 'al' == 'ale'\nE         \nE         - ale\nE         ?   -\nE         + al\n\nrun.py:16: AssertionError"}, "teardown": {"duration": 0.0001794489999999982, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 17, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017801100000003345, "outcome": "passed"}, "call": {"duration": 0.0001736970000001392, "outcome": "passed"}, "teardown": {"duration": 0.00013692500000006547, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 20, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015716399999998742, "outcome": "passed"}, "call": {"duration": 0.0003624449999999335, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 22, "message": "AssertionError: assert 'mssssipp' == 'mssissippi'\n  \n  - mssissippi\n  ?    -     -\n  + mssssipp"}, "traceback": [{"path": "run.py", "lineno": 22, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssssipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?    -     -\nE         + mssssipp\n\nrun.py:22: AssertionError"}, "teardown": {"duration": 0.00017680600000025137, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_case_sensitivity", "lineno": 23, "outcome": "failed", "keywords": ["test_remove_Occ_with_case_sensitivity", "run.py", "test", ""], "setup": {"duration": 0.000174540999999806, "outcome": "passed"}, "call": {"duration": 0.0003589690000000978, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 25, "message": "AssertionError: assert 'CaeSenitiv' == 'CaseSensitve'\n  \n  - CaseSensitve\n  ?   -    -   -\n  + CaeSenitiv\n  ?         +"}, "traceback": [{"path": "run.py", "lineno": 25, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_case_sensitivity():\n>       assert remove_Occ(\"CaseSensitive\", \"s\") == \"CaseSensitve\"\nE       AssertionError: assert 'CaeSenitiv' == 'CaseSensitve'\nE         \nE         - CaseSensitve\nE         ?   -    -   -\nE         + CaeSenitiv\nE         ?         +\n\nrun.py:25: AssertionError"}, "teardown": {"duration": 0.00017636799999998232, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 26, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017332799999980608, "outcome": "passed"}, "call": {"duration": 0.00036908999999996084, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 28, "message": "AssertionError: assert 'helloworl' == 'hello@orld'\n  \n  - hello@orld\n  ?      ^   -\n  + helloworl\n  ?      ^"}, "traceback": [{"path": "run.py", "lineno": 28, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"hello@world\", \"@\") == \"hello@orld\"\nE       AssertionError: assert 'helloworl' == 'hello@orld'\nE         \nE         - hello@orld\nE         ?      ^   -\nE         + helloworl\nE         ?      ^\n\nrun.py:28: AssertionError"}, "teardown": {"duration": 0.00017071700000004242, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "lineno": 29, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017800600000006384, "outcome": "passed"}, "call": {"duration": 0.0003396730000000403, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 31, "message": "AssertionError: assert '!hello!!' == 'hello!!!'\n  \n  - hello!!!\n  ?        -\n  + !hello!!\n  ? +"}, "traceback": [{"path": "run.py", "lineno": 31, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_special_characters():\n>       assert remove_Occ(\"!!!hello!!!\", \"!\") == \"hello!!!\"\nE       AssertionError: assert '!hello!!' == 'hello!!!'\nE         \nE         - hello!!!\nE         ?        -\nE         + !hello!!\nE         ? +\n\nrun.py:31: AssertionError"}, "teardown": {"duration": 0.00022209400000017254, "outcome": "passed"}}]}, {"created": 1733299823.2546966, "duration": 0.05777573585510254, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 7, "passed": 3, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_first_and_last", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_single_char", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_special_characters", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_case_insensitive", "type": "Function", "lineno": 29}, {"nodeid": "run.py::test_digit", "type": "Function", "lineno": 32}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002955499999997002, "outcome": "passed"}, "call": {"duration": 0.0004826559999999702, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 7, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 7, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:7: AssertionError"}, "teardown": {"duration": 0.00020603199999991162, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001917069999999299, "outcome": "passed"}, "call": {"duration": 0.00034991400000006223, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 10, "message": "AssertionError: assert 'hel' == 'hell'\n  \n  - hell\n  ?    -\n  + hel"}, "traceback": [{"path": "run.py", "lineno": 10, "message": "AssertionError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\nE       AssertionError: assert 'hel' == 'hell'\nE         \nE         - hell\nE         ?    -\nE         + hel\n\nrun.py:10: AssertionError"}, "teardown": {"duration": 0.00017496800000005308, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 11, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001697400000000293, "outcome": "passed"}, "call": {"duration": 0.0001545159999998269, "outcome": "passed"}, "teardown": {"duration": 0.0001343939999998156, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_first_and_last", "run.py", "test", ""], "setup": {"duration": 0.0001620359999998655, "outcome": "passed"}, "call": {"duration": 0.0003451640000000644, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 16, "message": "AssertionError: assert 'bnn' == 'bnana'\n  \n  - bnana\n  ?   - -\n  + bnn"}, "traceback": [{"path": "run.py", "lineno": 16, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnn' == 'bnana'\nE         \nE         - bnana\nE         ?   - -\nE         + bnn\n\nrun.py:16: AssertionError"}, "teardown": {"duration": 0.00017113199999974071, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char", "lineno": 17, "outcome": "passed", "keywords": ["test_single_char", "run.py", "test", ""], "setup": {"duration": 0.0001914329999999076, "outcome": "passed"}, "call": {"duration": 0.00015239700000035938, "outcome": "passed"}, "teardown": {"duration": 0.00013130700000019147, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 20, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015271399999994273, "outcome": "passed"}, "call": {"duration": 0.0001511229999997532, "outcome": "passed"}, "teardown": {"duration": 0.00012690799999992564, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 23, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001457289999997613, "outcome": "passed"}, "call": {"duration": 0.0003492580000004075, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 25, "message": "AssertionError: assert 'mssssipp' == 'mssissippi'\n  \n  - mssissippi\n  ?    -     -\n  + mssssipp"}, "traceback": [{"path": "run.py", "lineno": 25, "message": "AssertionError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssssipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?    -     -\nE         + mssssipp\n\nrun.py:25: AssertionError"}, "teardown": {"duration": 0.00016927399999966397, "outcome": "passed"}}, {"nodeid": "run.py::test_special_characters", "lineno": 26, "outcome": "failed", "keywords": ["test_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017666700000029678, "outcome": "passed"}, "call": {"duration": 0.00033799199999995366, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 28, "message": "AssertionError: assert '!#$hello' == '!$hello#'\n  \n  - !$hello#\n  ?        -\n  + !#$hello\n  ?  +"}, "traceback": [{"path": "run.py", "lineno": 28, "message": "AssertionError"}], "longrepr": "def test_special_characters():\n>       assert remove_Occ(\"!@#$hello@#\", \"@\") == \"!$hello#\"\nE       AssertionError: assert '!#$hello' == '!$hello#'\nE         \nE         - !$hello#\nE         ?        -\nE         + !#$hello\nE         ?  +\n\nrun.py:28: AssertionError"}, "teardown": {"duration": 0.0001796259999999883, "outcome": "passed"}}, {"nodeid": "run.py::test_case_insensitive", "lineno": 29, "outcome": "failed", "keywords": ["test_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00016678699999994606, "outcome": "passed"}, "call": {"duration": 0.00031995799999995356, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 31, "message": "AssertionError: assert 'HeoWorl' == 'HeoWorld'\n  \n  - HeoWorld\n  ?        -\n  + HeoWorl"}, "traceback": [{"path": "run.py", "lineno": 31, "message": "AssertionError"}], "longrepr": "def test_case_insensitive():\n>       assert remove_Occ(\"HelloWorld\", \"l\") == \"HeoWorld\"\nE       AssertionError: assert 'HeoWorl' == 'HeoWorld'\nE         \nE         - HeoWorld\nE         ?        -\nE         + HeoWorl\n\nrun.py:31: AssertionError"}, "teardown": {"duration": 0.00017607400000008155, "outcome": "passed"}}, {"nodeid": "run.py::test_digit", "lineno": 32, "outcome": "failed", "keywords": ["test_digit", "run.py", "test", ""], "setup": {"duration": 0.00017283200000006715, "outcome": "passed"}, "call": {"duration": 0.00034713299999999947, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 34, "message": "AssertionError: assert '12345678' == '123456789'\n  \n  - 123456789\n  ?         -\n  + 12345678"}, "traceback": [{"path": "run.py", "lineno": 34, "message": "AssertionError"}], "longrepr": "def test_digit():\n>       assert remove_Occ(\"1234567890\", \"0\") == \"123456789\"\nE       AssertionError: assert '12345678' == '123456789'\nE         \nE         - 123456789\nE         ?         -\nE         + 12345678\n\nrun.py:34: AssertionError"}, "teardown": {"duration": 0.00020811200000014907, "outcome": "passed"}}]}, {"created": 1733299824.0216966, "duration": 0.060912370681762695, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 7, "passed": 3, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_with_multiple_removals", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "type": "Function", "lineno": 29}, {"nodeid": "run.py::test_remove_Occ_with_space_char", "type": "Function", "lineno": 32}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_in_string", "run.py", "test", ""], "setup": {"duration": 0.0003126249999998443, "outcome": "passed"}, "call": {"duration": 0.0004403139999999972, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 7, "message": "AssertionError: assert 'he' == 'heloo'\n  \n  - heloo\n  + he"}, "traceback": [{"path": "run.py", "lineno": 7, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_in_string():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\nE       AssertionError: assert 'he' == 'heloo'\nE         \nE         - heloo\nE         + he\n\nrun.py:7: AssertionError"}, "teardown": {"duration": 0.00023865599999961518, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00020300600000000557, "outcome": "passed"}, "call": {"duration": 0.0004135920000001292, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 10, "message": "AssertionError: assert 'ell' == 'ello'\n  \n  - ello\n  ?    -\n  + ell"}, "traceback": [{"path": "run.py", "lineno": 10, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_at_start():\n>       assert remove_Occ(\"hello\", \"h\") == \"ello\"\nE       AssertionError: assert 'ell' == 'ello'\nE         \nE         - ello\nE         ?    -\nE         + ell\n\nrun.py:10: AssertionError"}, "teardown": {"duration": 0.00017541099999984766, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 11, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00017518499999980008, "outcome": "passed"}, "call": {"duration": 0.00034879400000020766, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 13, "message": "AssertionError: assert 'hel' == 'hell'\n  \n  - hell\n  ?    -\n  + hel"}, "traceback": [{"path": "run.py", "lineno": 13, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_at_end():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\nE       AssertionError: assert 'hel' == 'hell'\nE         \nE         - hell\nE         ?    -\nE         + hel\n\nrun.py:13: AssertionError"}, "teardown": {"duration": 0.00017609300000032135, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 14, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.0001835379999999276, "outcome": "passed"}, "call": {"duration": 0.00016538099999996447, "outcome": "passed"}, "teardown": {"duration": 0.00013288900000008042, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "lineno": 17, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.0001819339999999947, "outcome": "passed"}, "call": {"duration": 0.0003426220000002367, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 19, "message": "AssertionError: assert 'ookkeepe' == 'ookkeeper'\n  \n  - ookkeeper\n  ?         -\n  + ookkeepe"}, "traceback": [{"path": "run.py", "lineno": 19, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_char_at_start():\n>       assert remove_Occ(\"bookkeeper\", \"b\") == \"ookkeeper\"\nE       AssertionError: assert 'ookkeepe' == 'ookkeeper'\nE         \nE         - ookkeeper\nE         ?         -\nE         + ookkeepe\n\nrun.py:19: AssertionError"}, "teardown": {"duration": 0.00018226099999996137, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "lineno": 20, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00018398299999988765, "outcome": "passed"}, "call": {"duration": 0.0003348430000000846, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 22, "message": "AssertionError: assert 'bookkeep' == 'bookkeepke'\n  \n  - bookkeepke\n  ?         --\n  + bookkeep"}, "traceback": [{"path": "run.py", "lineno": 22, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_char_at_end():\n>       assert remove_Occ(\"bookkeeper\", \"r\") == \"bookkeepke\"\nE       AssertionError: assert 'bookkeep' == 'bookkeepke'\nE         \nE         - bookkeepke\nE         ?         --\nE         + bookkeep\n\nrun.py:22: AssertionError"}, "teardown": {"duration": 0.000179007999999925, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_removals", "lineno": 23, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_removals", "run.py", "test", ""], "setup": {"duration": 0.00018188600000001998, "outcome": "passed"}, "call": {"duration": 0.00040420000000018774, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 25, "message": "AssertionError: assert 'mssssipp' == 'mssissippi'\n  \n  - mssissippi\n  ?    -     -\n  + mssssipp"}, "traceback": [{"path": "run.py", "lineno": 25, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_removals():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssssipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?    -     -\nE         + mssssipp\n\nrun.py:25: AssertionError"}, "teardown": {"duration": 0.00019775300000013374, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 26, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001888349999998873, "outcome": "passed"}, "call": {"duration": 0.00015518000000014354, "outcome": "passed"}, "teardown": {"duration": 0.0001846470000002043, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "lineno": 29, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.0001747299999999008, "outcome": "passed"}, "call": {"duration": 0.00015048499999981146, "outcome": "passed"}, "teardown": {"duration": 0.00013026299999996382, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_space_char", "lineno": 32, "outcome": "failed", "keywords": ["test_remove_Occ_with_space_char", "run.py", "test", ""], "setup": {"duration": 0.0001533600000001023, "outcome": "passed"}, "call": {"duration": 0.0003918610000002154, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 34, "message": "AssertionError: assert 'helloworl' == 'helloworld'\n  \n  - helloworld\n  ?          -\n  + helloworl"}, "traceback": [{"path": "run.py", "lineno": 34, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_space_char():\n>       assert remove_Occ(\"hello world\", \" \") == \"helloworld\"\nE       AssertionError: assert 'helloworl' == 'helloworld'\nE         \nE         - helloworld\nE         ?          -\nE         + helloworl\n\nrun.py:34: AssertionError"}, "teardown": {"duration": 0.00021216500000020844, "outcome": "passed"}}]}, {"created": 1733299823.9551806, "duration": 0.051367759704589844, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 5, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_single_character", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_char_not_in_string", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_first_and_last_same", "type": "Function", "lineno": 26}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00040188299999988075, "outcome": "passed"}, "call": {"duration": 0.0005457810000000229, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 7, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 7, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:7: AssertionError"}, "teardown": {"duration": 0.00025582199999996114, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00020187100000002012, "outcome": "passed"}, "call": {"duration": 0.00042602999999985514, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 10, "message": "AssertionError: assert 'hel' == 'hell'\n  \n  - hell\n  ?    -\n  + hel"}, "traceback": [{"path": "run.py", "lineno": 10, "message": "AssertionError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\nE       AssertionError: assert 'hel' == 'hell'\nE         \nE         - hell\nE         ?    -\nE         + hel\n\nrun.py:10: AssertionError"}, "teardown": {"duration": 0.00018819699999994555, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 11, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001794820000000641, "outcome": "passed"}, "call": {"duration": 0.00016283600000011056, "outcome": "passed"}, "teardown": {"duration": 0.00013247800000004695, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 14, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00018157000000007528, "outcome": "passed"}, "call": {"duration": 0.00034218099999994145, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 16, "message": "AssertionError: assert 'bnn' == 'bnana'\n  \n  - bnana\n  ?   - -\n  + bnn"}, "traceback": [{"path": "run.py", "lineno": 16, "message": "AssertionError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnn' == 'bnana'\nE         \nE         - bnana\nE         ?   - -\nE         + bnn\n\nrun.py:16: AssertionError"}, "teardown": {"duration": 0.00017362300000001163, "outcome": "passed"}}, {"nodeid": "run.py::test_single_character", "lineno": 17, "outcome": "passed", "keywords": ["test_single_character", "run.py", "test", ""], "setup": {"duration": 0.00016859000000013502, "outcome": "passed"}, "call": {"duration": 0.0001546070000000288, "outcome": "passed"}, "teardown": {"duration": 0.00013664800000001698, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 20, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015742200000001816, "outcome": "passed"}, "call": {"duration": 0.00015377000000005303, "outcome": "passed"}, "teardown": {"duration": 0.0001391339999998742, "outcome": "passed"}}, {"nodeid": "run.py::test_char_not_in_string", "lineno": 23, "outcome": "passed", "keywords": ["test_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.0001524349999999508, "outcome": "passed"}, "call": {"duration": 0.00014158900000005303, "outcome": "passed"}, "teardown": {"duration": 0.00012518000000016904, "outcome": "passed"}}, {"nodeid": "run.py::test_first_and_last_same", "lineno": 26, "outcome": "passed", "keywords": ["test_first_and_last_same", "run.py", "test", ""], "setup": {"duration": 0.00015944900000008921, "outcome": "passed"}, "call": {"duration": 0.00014048300000002456, "outcome": "passed"}, "teardown": {"duration": 0.00016082099999992217, "outcome": "passed"}}]}, {"created": 1733299822.9543107, "duration": 0.05009174346923828, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 4, "total": 7, "collected": 7}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 23}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003399799999996844, "outcome": "passed"}, "call": {"duration": 0.0004353729999997391, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 7, "message": "AssertionError: assert 'bnn' == 'bnana'\n  \n  - bnana\n  ?   - -\n  + bnn"}, "traceback": [{"path": "run.py", "lineno": 7, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnn' == 'bnana'\nE         \nE         - bnana\nE         ?   - -\nE         + bnn\n\nrun.py:7: AssertionError"}, "teardown": {"duration": 0.0002591649999996726, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.000206920999999749, "outcome": "passed"}, "call": {"duration": 0.00043577999999966366, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 10, "message": "AssertionError: assert 'bnn' == 'banan'\n  \n  - banan\n  ?  - -\n  + bnn"}, "traceback": [{"path": "run.py", "lineno": 10, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnn' == 'banan'\nE         \nE         - banan\nE         ?  - -\nE         + bnn\n\nrun.py:10: AssertionError"}, "teardown": {"duration": 0.00017389200000028637, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017129999999987433, "outcome": "passed"}, "call": {"duration": 0.0001842079999998525, "outcome": "passed"}, "teardown": {"duration": 0.00013468700000007772, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 14, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.000171206999999729, "outcome": "passed"}, "call": {"duration": 0.000144730999999787, "outcome": "passed"}, "teardown": {"duration": 0.00015885700000017877, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 17, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00018199799999996102, "outcome": "passed"}, "call": {"duration": 0.0003632660000003618, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 19, "message": "AssertionError: assert 'mssssipp' == 'mssissipp'\n  \n  - mssissipp\n  ?    -\n  + mssssipp"}, "traceback": [{"path": "run.py", "lineno": 19, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissipp\"\nE       AssertionError: assert 'mssssipp' == 'mssissipp'\nE         \nE         - mssissipp\nE         ?    -\nE         + mssssipp\n\nrun.py:19: AssertionError"}, "teardown": {"duration": 0.00019372499999992243, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 20, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00018100199999970812, "outcome": "passed"}, "call": {"duration": 0.0001560710000001464, "outcome": "passed"}, "teardown": {"duration": 0.00013586600000037308, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 23, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00017716599999983984, "outcome": "passed"}, "call": {"duration": 0.00014647900000008818, "outcome": "passed"}, "teardown": {"duration": 0.00016765999999979186, "outcome": "passed"}}]}, {"created": 1733299824.0805635, "duration": 0.05625128746032715, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 4, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_char_is_first", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_Occ_char_is_last", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "type": "Function", "lineno": 29}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003675270000003117, "outcome": "passed"}, "call": {"duration": 0.0005120269999996374, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 7, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 7, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:7: AssertionError"}, "teardown": {"duration": 0.00028729899999957453, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00020502500000008084, "outcome": "passed"}, "call": {"duration": 0.0004119659999997083, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 10, "message": "AssertionError: assert 'hel' == 'hell'\n  \n  - hell\n  ?    -\n  + hel"}, "traceback": [{"path": "run.py", "lineno": 10, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\nE       AssertionError: assert 'hel' == 'hell'\nE         \nE         - hell\nE         ?    -\nE         + hel\n\nrun.py:10: AssertionError"}, "teardown": {"duration": 0.000191077000000206, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00018098199999982967, "outcome": "passed"}, "call": {"duration": 0.00015716800000031839, "outcome": "passed"}, "teardown": {"duration": 0.00013262599999963598, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 14, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001577859999999376, "outcome": "passed"}, "call": {"duration": 0.00014298100000020852, "outcome": "passed"}, "teardown": {"duration": 0.00013834600000039998, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 17, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00016283399999972303, "outcome": "passed"}, "call": {"duration": 0.00014185800000010573, "outcome": "passed"}, "teardown": {"duration": 0.00013135599999980485, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 20, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015074899999989455, "outcome": "passed"}, "call": {"duration": 0.00036515499999989487, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 22, "message": "AssertionError: assert 'bnn' == 'bnan'\n  \n  - bnan\n  ?   -\n  + bnn"}, "traceback": [{"path": "run.py", "lineno": 22, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnan\"\nE       AssertionError: assert 'bnn' == 'bnan'\nE         \nE         - bnan\nE         ?   -\nE         + bnn\n\nrun.py:22: AssertionError"}, "teardown": {"duration": 0.00017609499999959866, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_is_first", "lineno": 23, "outcome": "failed", "keywords": ["test_remove_Occ_char_is_first", "run.py", "test", ""], "setup": {"duration": 0.00017087099999990585, "outcome": "passed"}, "call": {"duration": 0.0003466690000002437, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 25, "message": "AssertionError: assert 'ppl' == 'pple'\n  \n  - pple\n  ?    -\n  + ppl"}, "traceback": [{"path": "run.py", "lineno": 25, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_char_is_first():\n>       assert remove_Occ(\"apple\", \"a\") == \"pple\"\nE       AssertionError: assert 'ppl' == 'pple'\nE         \nE         - pple\nE         ?    -\nE         + ppl\n\nrun.py:25: AssertionError"}, "teardown": {"duration": 0.0001749399999999568, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_is_last", "lineno": 26, "outcome": "passed", "keywords": ["test_remove_Occ_char_is_last", "run.py", "test", ""], "setup": {"duration": 0.0001693529999999832, "outcome": "passed"}, "call": {"duration": 0.0001538060000001451, "outcome": "passed"}, "teardown": {"duration": 0.0001393040000001733, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "lineno": 29, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.0001577440000000152, "outcome": "passed"}, "call": {"duration": 0.00034344399999985953, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 31, "message": "AssertionError: assert 'mssssipp' == 'mssissippi'\n  \n  - mssissippi\n  ?    -     -\n  + mssssipp"}, "traceback": [{"path": "run.py", "lineno": 31, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssssipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?    -     -\nE         + mssssipp\n\nrun.py:31: AssertionError"}, "teardown": {"duration": 0.00019751999999995107, "outcome": "passed"}}]}, {"created": 1733299823.4680607, "duration": 0.04857802391052246, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 4, "total": 7, "collected": 7}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 23}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00037361699999993725, "outcome": "passed"}, "call": {"duration": 0.0004852369999999162, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 7, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 7, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:7: AssertionError"}, "teardown": {"duration": 0.0002123549999999419, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001911629999999942, "outcome": "passed"}, "call": {"duration": 0.0003875129999999505, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 10, "message": "AssertionError: assert 'hel' == 'hell'\n  \n  - hell\n  ?    -\n  + hel"}, "traceback": [{"path": "run.py", "lineno": 10, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\nE       AssertionError: assert 'hel' == 'hell'\nE         \nE         - hell\nE         ?    -\nE         + hel\n\nrun.py:10: AssertionError"}, "teardown": {"duration": 0.00017821699999998053, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001680349999999553, "outcome": "passed"}, "call": {"duration": 0.0001648189999998717, "outcome": "passed"}, "teardown": {"duration": 0.0001340210000000397, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015634799999997284, "outcome": "passed"}, "call": {"duration": 0.0003493560000000784, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 16, "message": "AssertionError: assert 'bnn' == 'bnana'\n  \n  - bnana\n  ?   - -\n  + bnn"}, "traceback": [{"path": "run.py", "lineno": 16, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnn' == 'bnana'\nE         \nE         - bnana\nE         ?   - -\nE         + bnn\n\nrun.py:16: AssertionError"}, "teardown": {"duration": 0.0001693400000000178, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 17, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00015948999999992886, "outcome": "passed"}, "call": {"duration": 0.00015249599999989094, "outcome": "passed"}, "teardown": {"duration": 0.0001268519999999551, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 20, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016610400000005576, "outcome": "passed"}, "call": {"duration": 0.00013891900000007062, "outcome": "passed"}, "teardown": {"duration": 0.00012707400000011582, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 23, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00014278400000011793, "outcome": "passed"}, "call": {"duration": 0.00013757299999994643, "outcome": "passed"}, "teardown": {"duration": 0.00015725600000005002, "outcome": "passed"}}]}, {"created": 1733299824.3401346, "duration": 0.0626668930053711, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 7, "passed": 4, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_char_at_start", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_char_at_end", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_first_and_last_of_same_char", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 29}, {"nodeid": "run.py::test_single_char_string", "type": "Function", "lineno": 32}, {"nodeid": "run.py::test_single_char_string_not_present", "type": "Function", "lineno": 35}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00042682499999990853, "outcome": "passed"}, "call": {"duration": 0.0004265220000001513, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 7, "message": "AssertionError: assert 'he' == 'heloo'\n  \n  - heloo\n  + he"}, "traceback": [{"path": "run.py", "lineno": 7, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\nE       AssertionError: assert 'he' == 'heloo'\nE         \nE         - heloo\nE         + he\n\nrun.py:7: AssertionError"}, "teardown": {"duration": 0.00031090899999997035, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.000223977999999736, "outcome": "passed"}, "call": {"duration": 0.0004333980000001958, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 10, "message": "AssertionError: assert 'hel' == 'hell'\n  \n  - hell\n  ?    -\n  + hel"}, "traceback": [{"path": "run.py", "lineno": 10, "message": "AssertionError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\nE       AssertionError: assert 'hel' == 'hell'\nE         \nE         - hell\nE         ?    -\nE         + hel\n\nrun.py:10: AssertionError"}, "teardown": {"duration": 0.00019170800000001265, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00017713900000027039, "outcome": "passed"}, "call": {"duration": 0.00015823099999989765, "outcome": "passed"}, "teardown": {"duration": 0.00013379499999999211, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.000155656000000004, "outcome": "passed"}, "call": {"duration": 0.00035832600000018644, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 16, "message": "AssertionError: assert 'bnn' == 'bnana'\n  \n  - bnana\n  ?   - -\n  + bnn"}, "traceback": [{"path": "run.py", "lineno": 16, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnn' == 'bnana'\nE         \nE         - bnana\nE         ?   - -\nE         + bnn\n\nrun.py:16: AssertionError"}, "teardown": {"duration": 0.0001843759999999861, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_start", "lineno": 17, "outcome": "failed", "keywords": ["test_remove_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.0001674249999998878, "outcome": "passed"}, "call": {"duration": 0.00035174799999992956, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 19, "message": "AssertionError: assert 'ppl' == 'pple'\n  \n  - pple\n  ?    -\n  + ppl"}, "traceback": [{"path": "run.py", "lineno": 19, "message": "AssertionError"}], "longrepr": "def test_remove_char_at_start():\n>       assert remove_Occ(\"apple\", \"a\") == \"pple\"\nE       AssertionError: assert 'ppl' == 'pple'\nE         \nE         - pple\nE         ?    -\nE         + ppl\n\nrun.py:19: AssertionError"}, "teardown": {"duration": 0.0001705300000001131, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_end", "lineno": 20, "outcome": "failed", "keywords": ["test_remove_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.0001766929999997835, "outcome": "passed"}, "call": {"duration": 0.00034216799999997605, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 22, "message": "AssertionError: assert 'app' == 'apppl'\n  \n  - apppl\n  ?    --\n  + app"}, "traceback": [{"path": "run.py", "lineno": 22, "message": "AssertionError"}], "longrepr": "def test_remove_char_at_end():\n>       assert remove_Occ(\"apple\", \"e\") == \"apppl\"\nE       AssertionError: assert 'app' == 'apppl'\nE         \nE         - apppl\nE         ?    --\nE         + app\n\nrun.py:22: AssertionError"}, "teardown": {"duration": 0.00017453099999986676, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 23, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001727600000003271, "outcome": "passed"}, "call": {"duration": 0.00034804999999993314, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 25, "message": "AssertionError: assert 'mssssipp' == 'mssissippi'\n  \n  - mssissippi\n  ?    -     -\n  + mssssipp"}, "traceback": [{"path": "run.py", "lineno": 25, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssssipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?    -     -\nE         + mssssipp\n\nrun.py:25: AssertionError"}, "teardown": {"duration": 0.00016946700000008974, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_of_same_char", "lineno": 26, "outcome": "failed", "keywords": ["test_remove_first_and_last_of_same_char", "run.py", "test", ""], "setup": {"duration": 0.00016766300000004009, "outcome": "passed"}, "call": {"duration": 0.0003339159999997676, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 28, "message": "AssertionError: assert 'booeepe' == 'bookeeper'\n  \n  - bookeeper\n  ?    -    -\n  + booeepe"}, "traceback": [{"path": "run.py", "lineno": 28, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_of_same_char():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'booeepe' == 'bookeeper'\nE         \nE         - bookeeper\nE         ?    -    -\nE         + booeepe\n\nrun.py:28: AssertionError"}, "teardown": {"duration": 0.00016979100000025227, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 29, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016231300000013604, "outcome": "passed"}, "call": {"duration": 0.00015934299999997847, "outcome": "passed"}, "teardown": {"duration": 0.00012930500000019052, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string", "lineno": 32, "outcome": "passed", "keywords": ["test_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00014879500000031243, "outcome": "passed"}, "call": {"duration": 0.00014048000000022043, "outcome": "passed"}, "teardown": {"duration": 0.00013629999999986708, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string_not_present", "lineno": 35, "outcome": "passed", "keywords": ["test_single_char_string_not_present", "run.py", "test", ""], "setup": {"duration": 0.00014657199999978943, "outcome": "passed"}, "call": {"duration": 0.00013894400000014073, "outcome": "passed"}, "teardown": {"duration": 0.00016450999999984006, "outcome": "passed"}}]}, {"created": 1733299823.7543654, "duration": 0.05707287788391113, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_Occ_special_characters", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "type": "Function", "lineno": 29}, {"nodeid": "run.py::test_remove_Occ_unicode_characters", "type": "Function", "lineno": 32}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.000358219000000215, "outcome": "passed"}, "call": {"duration": 0.0004261020000000393, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 7, "message": "AssertionError: assert 'bnn' == 'bnana'\n  \n  - bnana\n  ?   - -\n  + bnn"}, "traceback": [{"path": "run.py", "lineno": 7, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnn' == 'bnana'\nE         \nE         - bnana\nE         ?   - -\nE         + bnn\n\nrun.py:7: AssertionError"}, "teardown": {"duration": 0.00028094600000017067, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00021816499999971484, "outcome": "passed"}, "call": {"duration": 0.0004055740000001862, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 10, "message": "AssertionError: assert 'bnn' == 'banan'\n  \n  - banan\n  ?  - -\n  + bnn"}, "traceback": [{"path": "run.py", "lineno": 10, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnn' == 'banan'\nE         \nE         - banan\nE         ?  - -\nE         + bnn\n\nrun.py:10: AssertionError"}, "teardown": {"duration": 0.00018350000000033617, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001744209999996471, "outcome": "passed"}, "call": {"duration": 0.00017129599999998746, "outcome": "passed"}, "teardown": {"duration": 0.0001334709999998296, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 14, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00015617399999978687, "outcome": "passed"}, "call": {"duration": 0.0001450329999999056, "outcome": "passed"}, "teardown": {"duration": 0.00013219399999986337, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 17, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015217900000008555, "outcome": "passed"}, "call": {"duration": 0.00014064100000021895, "outcome": "passed"}, "teardown": {"duration": 0.000127287000000198, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 20, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015086999999969208, "outcome": "passed"}, "call": {"duration": 0.0001405049999996244, "outcome": "passed"}, "teardown": {"duration": 0.00012632400000001098, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 23, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016139199999987142, "outcome": "passed"}, "call": {"duration": 0.00037756300000024723, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 25, "message": "AssertionError: assert 'mssssipp' == 'mssissippi'\n  \n  - mssissippi\n  ?    -     -\n  + mssssipp"}, "traceback": [{"path": "run.py", "lineno": 25, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssssipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?    -     -\nE         + mssssipp\n\nrun.py:25: AssertionError"}, "teardown": {"duration": 0.00017971900000013363, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_special_characters", "lineno": 26, "outcome": "failed", "keywords": ["test_remove_Occ_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017205500000017082, "outcome": "passed"}, "call": {"duration": 0.0003674039999999046, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 28, "message": "AssertionError: assert '##$' == '##$$#'\n  \n  - ##$$#\n  ?    --\n  + ##$"}, "traceback": [{"path": "run.py", "lineno": 28, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_special_characters():\n>       assert remove_Occ(\"#$#$$#\", \"$\") == \"##$$#\"\nE       AssertionError: assert '##$' == '##$$#'\nE         \nE         - ##$$#\nE         ?    --\nE         + ##$\n\nrun.py:28: AssertionError"}, "teardown": {"duration": 0.0001781940000000759, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "lineno": 29, "outcome": "failed", "keywords": ["test_remove_Occ_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.0001809830000003565, "outcome": "passed"}, "call": {"duration": 0.00033942399999986606, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 31, "message": "AssertionError: assert 'Bnn' == 'Bnana'\n  \n  - Bnana\n  ?   - -\n  + Bnn"}, "traceback": [{"path": "run.py", "lineno": 31, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_case_insensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnana\"\nE       AssertionError: assert 'Bnn' == 'Bnana'\nE         \nE         - Bnana\nE         ?   - -\nE         + Bnn\n\nrun.py:31: AssertionError"}, "teardown": {"duration": 0.00018888999999999712, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_unicode_characters", "lineno": 32, "outcome": "passed", "keywords": ["test_remove_Occ_unicode_characters", "run.py", "test", ""], "setup": {"duration": 0.00017237199999975417, "outcome": "passed"}, "call": {"duration": 0.00015569900000000914, "outcome": "passed"}, "teardown": {"duration": 0.0001929410000003351, "outcome": "passed"}}]}, {"created": 1733299823.5490386, "duration": 0.05028390884399414, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 5, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_Occ_first_and_last_same_char", "type": "Function", "lineno": 26}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003311080000001354, "outcome": "passed"}, "call": {"duration": 0.00048521399999978954, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 7, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 7, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:7: AssertionError"}, "teardown": {"duration": 0.00024732900000001834, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019831999999997407, "outcome": "passed"}, "call": {"duration": 0.0003995180000000431, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 10, "message": "AssertionError: assert 'hel' == 'hell'\n  \n  - hell\n  ?    -\n  + hel"}, "traceback": [{"path": "run.py", "lineno": 10, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\nE       AssertionError: assert 'hel' == 'hell'\nE         \nE         - hell\nE         ?    -\nE         + hel\n\nrun.py:10: AssertionError"}, "teardown": {"duration": 0.00018297099999964317, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001887009999999023, "outcome": "passed"}, "call": {"duration": 0.0001609390000001376, "outcome": "passed"}, "teardown": {"duration": 0.0001345260000000792, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016561299999962031, "outcome": "passed"}, "call": {"duration": 0.00038043899999973263, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 16, "message": "AssertionError: assert 'bnn' == 'bnana'\n  \n  - bnana\n  ?   - -\n  + bnn"}, "traceback": [{"path": "run.py", "lineno": 16, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnn' == 'bnana'\nE         \nE         - bnana\nE         ?   - -\nE         + bnn\n\nrun.py:16: AssertionError"}, "teardown": {"duration": 0.00020353699999997588, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 17, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017292400000012975, "outcome": "passed"}, "call": {"duration": 0.00015422199999992614, "outcome": "passed"}, "teardown": {"duration": 0.00013318199999989844, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 20, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00015921199999979763, "outcome": "passed"}, "call": {"duration": 0.00014616200000006074, "outcome": "passed"}, "teardown": {"duration": 0.00012779699999976302, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 23, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00016411100000013334, "outcome": "passed"}, "call": {"duration": 0.00014440899999978996, "outcome": "passed"}, "teardown": {"duration": 0.00012916700000031867, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_first_and_last_same_char", "lineno": 26, "outcome": "passed", "keywords": ["test_remove_Occ_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00014848899999986287, "outcome": "passed"}, "call": {"duration": 0.00014992699999982761, "outcome": "passed"}, "teardown": {"duration": 0.00016041399999977557, "outcome": "passed"}}]}, {"created": 1733299824.5808287, "duration": 0.05811762809753418, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 6, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_multiple_first_occurrences", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_multiple_last_occurrences", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_single_character", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_first_and_last_of_single_character", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_remove_empty_string", "type": "Function", "lineno": 29}, {"nodeid": "run.py::test_remove_first_of_empty_string", "type": "Function", "lineno": 32}, {"nodeid": "run.py::test_remove_last_of_empty_string", "type": "Function", "lineno": 35}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0004027460000002314, "outcome": "passed"}, "call": {"duration": 0.0004289029999999805, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 7, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 7, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:7: AssertionError"}, "teardown": {"duration": 0.0002075839999999829, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018312100000006382, "outcome": "passed"}, "call": {"duration": 0.0003760380000001895, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 10, "message": "AssertionError: assert 'hel' == 'hell'\n  \n  - hell\n  ?    -\n  + hel"}, "traceback": [{"path": "run.py", "lineno": 10, "message": "AssertionError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\nE       AssertionError: assert 'hel' == 'hell'\nE         \nE         - hell\nE         ?    -\nE         + hel\n\nrun.py:10: AssertionError"}, "teardown": {"duration": 0.00017385400000025086, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00017833900000008285, "outcome": "passed"}, "call": {"duration": 0.00015433100000006306, "outcome": "passed"}, "teardown": {"duration": 0.00013014100000008355, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015569800000037048, "outcome": "passed"}, "call": {"duration": 0.00035833600000012567, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 16, "message": "AssertionError: assert 'bnn' == 'bnana'\n  \n  - bnana\n  ?   - -\n  + bnn"}, "traceback": [{"path": "run.py", "lineno": 16, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnn' == 'bnana'\nE         \nE         - bnana\nE         ?   - -\nE         + bnn\n\nrun.py:16: AssertionError"}, "teardown": {"duration": 0.0001706879999998634, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_first_occurrences", "lineno": 17, "outcome": "failed", "keywords": ["test_remove_multiple_first_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016835299999984343, "outcome": "passed"}, "call": {"duration": 0.00035919500000014537, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 19, "message": "AssertionError: assert 'mssssipp' == 'mssissippi'\n  \n  - mssissippi\n  ?    -     -\n  + mssssipp"}, "traceback": [{"path": "run.py", "lineno": 19, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_first_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssssipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?    -     -\nE         + mssssipp\n\nrun.py:19: AssertionError"}, "teardown": {"duration": 0.0001735809999998672, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_last_occurrences", "lineno": 20, "outcome": "failed", "keywords": ["test_remove_multiple_last_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001675099999998153, "outcome": "passed"}, "call": {"duration": 0.0003305270000000249, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 22, "message": "AssertionError: assert 'miissipp' == 'mippi'\n  \n  - mippi\n  + miissipp"}, "traceback": [{"path": "run.py", "lineno": 22, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_last_occurrences():\n>       assert remove_Occ(\"mississippi\", \"s\") == \"mippi\"\nE       AssertionError: assert 'miissipp' == 'mippi'\nE         \nE         - mippi\nE         + miissipp\n\nrun.py:22: AssertionError"}, "teardown": {"duration": 0.00017435099999962844, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_single_character", "lineno": 23, "outcome": "passed", "keywords": ["test_remove_single_character", "run.py", "test", ""], "setup": {"duration": 0.0001667499999999933, "outcome": "passed"}, "call": {"duration": 0.00014864899999977865, "outcome": "passed"}, "teardown": {"duration": 0.00013566000000020395, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_of_single_character", "lineno": 26, "outcome": "passed", "keywords": ["test_remove_first_and_last_of_single_character", "run.py", "test", ""], "setup": {"duration": 0.00015283799999998848, "outcome": "passed"}, "call": {"duration": 0.00014513999999987703, "outcome": "passed"}, "teardown": {"duration": 0.0001287119999999753, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_empty_string", "lineno": 29, "outcome": "passed", "keywords": ["test_remove_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016008299999992204, "outcome": "passed"}, "call": {"duration": 0.00014440400000026443, "outcome": "passed"}, "teardown": {"duration": 0.0001267490000000926, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_of_empty_string", "lineno": 32, "outcome": "passed", "keywords": ["test_remove_first_of_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015723000000011922, "outcome": "passed"}, "call": {"duration": 0.00014197700000018187, "outcome": "passed"}, "teardown": {"duration": 0.00012676400000000143, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_of_empty_string", "lineno": 35, "outcome": "passed", "keywords": ["test_remove_last_of_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00014957100000012602, "outcome": "passed"}, "call": {"duration": 0.00014800900000011552, "outcome": "passed"}, "teardown": {"duration": 0.00015761600000008258, "outcome": "passed"}}]}, {"created": 1733299824.0634704, "duration": 0.05515933036804199, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 1, "passed": 4, "total": 5, "collected": 5}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test1", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test2", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test3", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test4", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test5", "type": "Function", "lineno": 18}]}], "tests": [{"nodeid": "run.py::test1", "lineno": 6, "outcome": "failed", "keywords": ["test1", "run.py", "test", ""], "setup": {"duration": 0.000469180000000069, "outcome": "passed"}, "call": {"duration": 0.0005650099999998659, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test1():\n>       assert remove_Occ(\"hello\",\"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0003305600000000908, "outcome": "passed"}}, {"nodeid": "run.py::test2", "lineno": 9, "outcome": "passed", "keywords": ["test2", "run.py", "test", ""], "setup": {"duration": 0.00031369100000011585, "outcome": "passed"}, "call": {"duration": 0.0002647510000000075, "outcome": "passed"}, "teardown": {"duration": 0.00023259100000005972, "outcome": "passed"}}, {"nodeid": "run.py::test3", "lineno": 12, "outcome": "passed", "keywords": ["test3", "run.py", "test", ""], "setup": {"duration": 0.00026854900000028437, "outcome": "passed"}, "call": {"duration": 0.00042464999999980435, "outcome": "passed"}, "teardown": {"duration": 0.00020021000000003397, "outcome": "passed"}}, {"nodeid": "run.py::test4", "lineno": 15, "outcome": "passed", "keywords": ["test4", "run.py", "test", ""], "setup": {"duration": 0.00023875999999978248, "outcome": "passed"}, "call": {"duration": 0.0002499500000001653, "outcome": "passed"}, "teardown": {"duration": 0.00020231000000014987, "outcome": "passed"}}, {"nodeid": "run.py::test5", "lineno": 18, "outcome": "passed", "keywords": ["test5", "run.py", "test", ""], "setup": {"duration": 0.00020601000000031178, "outcome": "passed"}, "call": {"duration": 0.00022750000000026915, "outcome": "passed"}, "teardown": {"duration": 0.0002407500000001228, "outcome": "passed"}}]}, {"created": 1733299824.005526, "duration": 0.05460953712463379, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 3, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_case_sensitivity", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002937279999999376, "outcome": "passed"}, "call": {"duration": 0.00045930700000029745, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00019177400000014444, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017637600000020015, "outcome": "passed"}, "call": {"duration": 0.00018859899999990049, "outcome": "passed"}, "teardown": {"duration": 0.00014099199999995093, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016025300000022114, "outcome": "passed"}, "call": {"duration": 0.00014766000000010493, "outcome": "passed"}, "teardown": {"duration": 0.0001558799999998861, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.0001509529999998982, "outcome": "passed"}, "call": {"duration": 0.0003392340000001326, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'a' == 'ale'\n  \n  - ale\n  + a"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"apple\", \"p\") == \"ale\"\nE       AssertionError: assert 'a' == 'ale'\nE         \nE         - ale\nE         + a\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017225900000017447, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016539699999995605, "outcome": "passed"}, "call": {"duration": 0.00015262000000015874, "outcome": "passed"}, "teardown": {"duration": 0.0001372039999996133, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001554740000000443, "outcome": "passed"}, "call": {"duration": 0.00034487900000002014, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00016834399999998695, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_case_sensitivity", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_case_sensitivity", "run.py", "test", ""], "setup": {"duration": 0.00016913500000015347, "outcome": "passed"}, "call": {"duration": 0.0002944250000003201, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'CaeSen' == 'CaseSensitve'\n  \n  - CaseSensitve\n  + CaeSen"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_case_sensitivity():\n>       assert remove_Occ(\"CaseSensitive\", \"s\") == \"CaseSensitve\"\nE       AssertionError: assert 'CaeSen' == 'CaseSensitve'\nE         \nE         - CaseSensitve\nE         + CaeSen\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017094200000000725, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016826200000030767, "outcome": "passed"}, "call": {"duration": 0.00034379400000039695, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'helloworld' == 'hello@orld'\n  \n  - hello@orld\n  ?      ^\n  + helloworld\n  ?      ^"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"hello@world\", \"@\") == \"hello@orld\"\nE       AssertionError: assert 'helloworld' == 'hello@orld'\nE         \nE         - hello@orld\nE         ?      ^\nE         + helloworld\nE         ?      ^\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017238399999985887, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016393600000030872, "outcome": "passed"}, "call": {"duration": 0.0003434949999996384, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert '!!hello!!' == 'hello!!!'\n  \n  - hello!!!\n  ?        -\n  + !!hello!!\n  ? ++"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_special_characters():\n>       assert remove_Occ(\"!!!hello!!!\", \"!\") == \"hello!!!\"\nE       AssertionError: assert '!!hello!!' == 'hello!!!'\nE         \nE         - hello!!!\nE         ?        -\nE         + !!hello!!\nE         ? ++\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00020029599999960013, "outcome": "passed"}}]}, {"created": 1733299823.7634768, "duration": 0.05738496780395508, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_first_and_last", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_single_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_case_insensitive", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_digit", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003475269999997366, "outcome": "passed"}, "call": {"duration": 0.000532118999999831, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00022470600000001895, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019983899999997945, "outcome": "passed"}, "call": {"duration": 0.00019615999999977873, "outcome": "passed"}, "teardown": {"duration": 0.00014378900000000527, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016560900000017753, "outcome": "passed"}, "call": {"duration": 0.00016034800000008786, "outcome": "passed"}, "teardown": {"duration": 0.0001335610000001708, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_first_and_last", "run.py", "test", ""], "setup": {"duration": 0.00017060899999998824, "outcome": "passed"}, "call": {"duration": 0.00039976199999980366, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00018334400000030726, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char", "lineno": 18, "outcome": "passed", "keywords": ["test_single_char", "run.py", "test", ""], "setup": {"duration": 0.00017409699999992867, "outcome": "passed"}, "call": {"duration": 0.00015426200000012713, "outcome": "passed"}, "teardown": {"duration": 0.00013462800000008102, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017482300000004614, "outcome": "passed"}, "call": {"duration": 0.0001481239999998607, "outcome": "passed"}, "teardown": {"duration": 0.00013251199999997354, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015174400000006472, "outcome": "passed"}, "call": {"duration": 0.00035476600000006187, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00018311200000020733, "outcome": "passed"}}, {"nodeid": "run.py::test_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017524099999999265, "outcome": "passed"}, "call": {"duration": 0.0003489909999996321, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '!#$hello' == '!$hello#'\n  \n  - !$hello#\n  ?        -\n  + !#$hello\n  ?  +"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_special_characters():\n>       assert remove_Occ(\"!@#$hello@#\", \"@\") == \"!$hello#\"\nE       AssertionError: assert '!#$hello' == '!$hello#'\nE         \nE         - !$hello#\nE         ?        -\nE         + !#$hello\nE         ?  +\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00018160900000019353, "outcome": "passed"}}, {"nodeid": "run.py::test_case_insensitive", "lineno": 30, "outcome": "failed", "keywords": ["test_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00017117999999971545, "outcome": "passed"}, "call": {"duration": 0.00037204199999996135, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'HeloWor' == 'HeoWorld'\n  \n  - HeoWorld\n  ?       --\n  + HeloWor\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_case_insensitive():\n>       assert remove_Occ(\"HelloWorld\", \"l\") == \"HeoWorld\"\nE       AssertionError: assert 'HeloWor' == 'HeoWorld'\nE         \nE         - HeoWorld\nE         ?       --\nE         + HeloWor\nE         ?   +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00018312100000006382, "outcome": "passed"}}, {"nodeid": "run.py::test_digit", "lineno": 33, "outcome": "passed", "keywords": ["test_digit", "run.py", "test", ""], "setup": {"duration": 0.0001756360000002566, "outcome": "passed"}, "call": {"duration": 0.0001647559999997661, "outcome": "passed"}, "teardown": {"duration": 0.00016833399999960363, "outcome": "passed"}}]}, {"created": 1733299825.6110952, "duration": 0.056055545806884766, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 7, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_multiple_removals", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_space_char", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_in_string", "run.py", "test", ""], "setup": {"duration": 0.0003786800000000756, "outcome": "passed"}, "call": {"duration": 0.000496929999999951, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heloo'\n  \n  - heloo\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_in_string():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\nE       AssertionError: assert 'he' == 'heloo'\nE         \nE         - heloo\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002998780000000867, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00020526399999987177, "outcome": "passed"}, "call": {"duration": 0.0001794530000001071, "outcome": "passed"}, "teardown": {"duration": 0.00013688300000014308, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00017695999999989276, "outcome": "passed"}, "call": {"duration": 0.0001546409999999554, "outcome": "passed"}, "teardown": {"duration": 0.000128000000000128, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015120699999982, "outcome": "passed"}, "call": {"duration": 0.00014738600000008262, "outcome": "passed"}, "teardown": {"duration": 0.00012665099999997764, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_with_repeated_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00014705199999998086, "outcome": "passed"}, "call": {"duration": 0.0001425269999999479, "outcome": "passed"}, "teardown": {"duration": 0.00013259600000004035, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00014716900000011357, "outcome": "passed"}, "call": {"duration": 0.000419948999999864, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'bookkeepe' == 'bookkeepke'\n  \n  - bookkeepke\n  ?         -\n  + bookkeepe"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_char_at_end():\n>       assert remove_Occ(\"bookkeeper\", \"r\") == \"bookkeepke\"\nE       AssertionError: assert 'bookkeepe' == 'bookkeepke'\nE         \nE         - bookkeepke\nE         ?         -\nE         + bookkeepe\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00019451400000014551, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_removals", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_removals", "run.py", "test", ""], "setup": {"duration": 0.00017942100000012395, "outcome": "passed"}, "call": {"duration": 0.00041459100000018623, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_removals():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00016841899999997523, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017026300000000383, "outcome": "passed"}, "call": {"duration": 0.00015556899999991103, "outcome": "passed"}, "teardown": {"duration": 0.00012802800000000225, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.0001532899999998616, "outcome": "passed"}, "call": {"duration": 0.00014156300000012223, "outcome": "passed"}, "teardown": {"duration": 0.00012878999999998975, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_space_char", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_with_space_char", "run.py", "test", ""], "setup": {"duration": 0.00014810300000012155, "outcome": "passed"}, "call": {"duration": 0.00014038000000016204, "outcome": "passed"}, "teardown": {"duration": 0.00017366899999982088, "outcome": "passed"}}]}, {"created": 1733299823.7271264, "duration": 0.04873776435852051, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 6, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_single_character", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_char_not_in_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_first_and_last_same", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003344630000001736, "outcome": "passed"}, "call": {"duration": 0.0005066409999998633, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020689200000001406, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019898399999984662, "outcome": "passed"}, "call": {"duration": 0.00016701499999971503, "outcome": "passed"}, "teardown": {"duration": 0.0001428599999999669, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016142200000013318, "outcome": "passed"}, "call": {"duration": 0.00014574000000022735, "outcome": "passed"}, "teardown": {"duration": 0.00012977999999996825, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015449200000006158, "outcome": "passed"}, "call": {"duration": 0.00036039600000004057, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017801300000019893, "outcome": "passed"}}, {"nodeid": "run.py::test_single_character", "lineno": 18, "outcome": "passed", "keywords": ["test_single_character", "run.py", "test", ""], "setup": {"duration": 0.0001718990000001419, "outcome": "passed"}, "call": {"duration": 0.00015305199999993135, "outcome": "passed"}, "teardown": {"duration": 0.00013590500000004724, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015519199999980415, "outcome": "passed"}, "call": {"duration": 0.0001479259999999094, "outcome": "passed"}, "teardown": {"duration": 0.000129997999999798, "outcome": "passed"}}, {"nodeid": "run.py::test_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015473699999990487, "outcome": "passed"}, "call": {"duration": 0.0001410360000000388, "outcome": "passed"}, "teardown": {"duration": 0.0001282850000001723, "outcome": "passed"}}, {"nodeid": "run.py::test_first_and_last_same", "lineno": 27, "outcome": "passed", "keywords": ["test_first_and_last_same", "run.py", "test", ""], "setup": {"duration": 0.00016156600000005739, "outcome": "passed"}, "call": {"duration": 0.00015899500000005062, "outcome": "passed"}, "teardown": {"duration": 0.00015841500000002284, "outcome": "passed"}}]}, {"created": 1733299823.1696582, "duration": 0.04707670211791992, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 5, "total": 7, "collected": 7}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 24}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00034258300000011843, "outcome": "passed"}, "call": {"duration": 0.0004932389999998676, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00021508999999997336, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019094699999988585, "outcome": "passed"}, "call": {"duration": 0.00039376800000012757, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.0001811679999998983, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001734959999999397, "outcome": "passed"}, "call": {"duration": 0.00015474499999990066, "outcome": "passed"}, "teardown": {"duration": 0.00014657699999998108, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.0001613689999999668, "outcome": "passed"}, "call": {"duration": 0.00014718099999999623, "outcome": "passed"}, "teardown": {"duration": 0.0001314730000001596, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015426499999993126, "outcome": "passed"}, "call": {"duration": 0.0001427540000000782, "outcome": "passed"}, "teardown": {"duration": 0.00034114400000007095, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00020155200000004925, "outcome": "passed"}, "call": {"duration": 0.00018128399999994826, "outcome": "passed"}, "teardown": {"duration": 0.0001381739999999354, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.0001616830000001901, "outcome": "passed"}, "call": {"duration": 0.00014812800000019166, "outcome": "passed"}, "teardown": {"duration": 0.00019524199999998437, "outcome": "passed"}}]}, {"created": 1733299824.3461635, "duration": 0.05214500427246094, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 6, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_is_first", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_char_is_last", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00034409299999982323, "outcome": "passed"}, "call": {"duration": 0.0005081960000001828, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00027095299999979616, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019759800000018757, "outcome": "passed"}, "call": {"duration": 0.00019184800000004998, "outcome": "passed"}, "teardown": {"duration": 0.00013968199999991882, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00015610999999982056, "outcome": "passed"}, "call": {"duration": 0.00014780699999983327, "outcome": "passed"}, "teardown": {"duration": 0.00014431299999984049, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015702799999983696, "outcome": "passed"}, "call": {"duration": 0.00014397900000018282, "outcome": "passed"}, "teardown": {"duration": 0.00012895400000001445, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015248799999989515, "outcome": "passed"}, "call": {"duration": 0.00015782500000005584, "outcome": "passed"}, "teardown": {"duration": 0.00012954399999998145, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001575150000001635, "outcome": "passed"}, "call": {"duration": 0.00014381899999982295, "outcome": "passed"}, "teardown": {"duration": 0.00012654000000011933, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_is_first", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_is_first", "run.py", "test", ""], "setup": {"duration": 0.00014503500000007108, "outcome": "passed"}, "call": {"duration": 0.000175340999999829, "outcome": "passed"}, "teardown": {"duration": 0.00012890700000012245, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_is_last", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_char_is_last", "run.py", "test", ""], "setup": {"duration": 0.0001470789999999944, "outcome": "passed"}, "call": {"duration": 0.00039146599999995146, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'appl' == 'app'\n  \n  - app\n  + appl\n  ?    +"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_char_is_last():\n>       assert remove_Occ(\"apple\", \"e\") == \"app\"\nE       AssertionError: assert 'appl' == 'app'\nE         \nE         - app\nE         + appl\nE         ?    +\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0001720920000001236, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00018215500000007268, "outcome": "passed"}, "call": {"duration": 0.0003472579999996839, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00021140300000022094, "outcome": "passed"}}]}, {"created": 1733299825.76011, "duration": 0.04845595359802246, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 5, "total": 7, "collected": 7}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 24}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00046210999999996005, "outcome": "passed"}, "call": {"duration": 0.0004908970000006008, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0003271150000001555, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00022544200000051973, "outcome": "passed"}, "call": {"duration": 0.00019689400000011403, "outcome": "passed"}, "teardown": {"duration": 0.00013662699999983374, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015890800000040173, "outcome": "passed"}, "call": {"duration": 0.00015063499999978802, "outcome": "passed"}, "teardown": {"duration": 0.00012873199999940965, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015124499999963348, "outcome": "passed"}, "call": {"duration": 0.0004285519999998044, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017734499999999542, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00017044899999962837, "outcome": "passed"}, "call": {"duration": 0.00015429100000030616, "outcome": "passed"}, "teardown": {"duration": 0.0001328929999999673, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016217699999998558, "outcome": "passed"}, "call": {"duration": 0.00014535700000006813, "outcome": "passed"}, "teardown": {"duration": 0.0001318600000006498, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00016982599999959547, "outcome": "passed"}, "call": {"duration": 0.00015367700000012974, "outcome": "passed"}, "teardown": {"duration": 0.00016766300000004009, "outcome": "passed"}}]}, {"created": 1733299823.9006681, "duration": 0.05685877799987793, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 6, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_char_at_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_char_at_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_first_and_last_of_same_char", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_single_char_string", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_single_char_string_not_present", "type": "Function", "lineno": 36}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0004179269999999846, "outcome": "passed"}, "call": {"duration": 0.00036325800000014397, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heloo'\n  \n  - heloo\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\nE       AssertionError: assert 'he' == 'heloo'\nE         \nE         - heloo\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00021345300000019662, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00021684899999963037, "outcome": "passed"}, "call": {"duration": 0.00017749000000000237, "outcome": "passed"}, "teardown": {"duration": 0.00014250800000015218, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.0001572789999997326, "outcome": "passed"}, "call": {"duration": 0.00016452200000038886, "outcome": "passed"}, "teardown": {"duration": 0.00013020500000004986, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00014987800000021423, "outcome": "passed"}, "call": {"duration": 0.00037143300000019863, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00018059900000011453, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_start", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00018547599999996223, "outcome": "passed"}, "call": {"duration": 0.00015201599999992155, "outcome": "passed"}, "teardown": {"duration": 0.00013212600000001018, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_end", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.0001534119999999639, "outcome": "passed"}, "call": {"duration": 0.00035164900000017596, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'appl' == 'apppl'\n  \n  - apppl\n  ?    -\n  + appl"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_char_at_end():\n>       assert remove_Occ(\"apple\", \"e\") == \"apppl\"\nE       AssertionError: assert 'appl' == 'apppl'\nE         \nE         - apppl\nE         ?    -\nE         + appl\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017893299999993673, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017459199999958486, "outcome": "passed"}, "call": {"duration": 0.00034396399999980787, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017656899999973774, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_of_same_char", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_first_and_last_of_same_char", "run.py", "test", ""], "setup": {"duration": 0.0001711200000000801, "outcome": "passed"}, "call": {"duration": 0.0003139050000000587, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'boo' == 'bookeeper'\n  \n  - bookeeper\n  + boo"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_of_same_char():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'boo' == 'bookeeper'\nE         \nE         - bookeeper\nE         + boo\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017798600000018538, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 30, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00018301500000017512, "outcome": "passed"}, "call": {"duration": 0.00015339799999969372, "outcome": "passed"}, "teardown": {"duration": 0.00013273599999985564, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string", "lineno": 33, "outcome": "passed", "keywords": ["test_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00016381100000018023, "outcome": "passed"}, "call": {"duration": 0.00015868000000018867, "outcome": "passed"}, "teardown": {"duration": 0.00013100000000010326, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string_not_present", "lineno": 36, "outcome": "passed", "keywords": ["test_single_char_string_not_present", "run.py", "test", ""], "setup": {"duration": 0.00015244499999989003, "outcome": "passed"}, "call": {"duration": 0.00014221899999977694, "outcome": "passed"}, "teardown": {"duration": 0.00016000299999996415, "outcome": "passed"}}]}, {"created": 1733299826.455556, "duration": 0.05707216262817383, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_unicode_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003297400000006334, "outcome": "passed"}, "call": {"duration": 0.00041797199999926704, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020868799999984589, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019973800000006037, "outcome": "passed"}, "call": {"duration": 0.0004108269999996139, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00018818599999992358, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001744520000004357, "outcome": "passed"}, "call": {"duration": 0.00015331100000004483, "outcome": "passed"}, "teardown": {"duration": 0.0001400639999999953, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00017970199999961523, "outcome": "passed"}, "call": {"duration": 0.00014599699999973126, "outcome": "passed"}, "teardown": {"duration": 0.00012979700000048666, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016235300000033703, "outcome": "passed"}, "call": {"duration": 0.00014464399999969402, "outcome": "passed"}, "teardown": {"duration": 0.00012612399999945012, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.0001476970000000577, "outcome": "passed"}, "call": {"duration": 0.00014742900000008774, "outcome": "passed"}, "teardown": {"duration": 0.00012565300000044743, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015136399999970962, "outcome": "passed"}, "call": {"duration": 0.00035859699999996053, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017458499999989385, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_special_characters", "run.py", "test", ""], "setup": {"duration": 0.000174610000000186, "outcome": "passed"}, "call": {"duration": 0.00033805099999995036, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '##$' == '##$$#'\n  \n  - ##$$#\n  ?    --\n  + ##$"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_special_characters():\n>       assert remove_Occ(\"#$#$$#\", \"$\") == \"##$$#\"\nE       AssertionError: assert '##$' == '##$$#'\nE         \nE         - ##$$#\nE         ?    --\nE         + ##$\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00018176800000002657, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00017083599999967447, "outcome": "passed"}, "call": {"duration": 0.00034138399999950053, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'Bnan' == 'Bnana'\n  \n  - Bnana\n  ?     -\n  + Bnan"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_case_insensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnana\"\nE       AssertionError: assert 'Bnan' == 'Bnana'\nE         \nE         - Bnana\nE         ?     -\nE         + Bnan\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017471499999999196, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_unicode_characters", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_unicode_characters", "run.py", "test", ""], "setup": {"duration": 0.00016951099999928942, "outcome": "passed"}, "call": {"duration": 0.00016477700000017137, "outcome": "passed"}, "teardown": {"duration": 0.00016953100000005605, "outcome": "passed"}}]}, {"created": 1733299824.4145947, "duration": 0.04655885696411133, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 6, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_first_and_last_same_char", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003025880000002701, "outcome": "passed"}, "call": {"duration": 0.0004657640000003127, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00021436000000019106, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018289700000018172, "outcome": "passed"}, "call": {"duration": 0.00016861100000031826, "outcome": "passed"}, "teardown": {"duration": 0.0001339739999997036, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001578880000003835, "outcome": "passed"}, "call": {"duration": 0.0001459739999996046, "outcome": "passed"}, "teardown": {"duration": 0.00012779999999956715, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016383100000005868, "outcome": "passed"}, "call": {"duration": 0.0003547499999996262, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00018243600000023008, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016430900000052873, "outcome": "passed"}, "call": {"duration": 0.000150395999999553, "outcome": "passed"}, "teardown": {"duration": 0.00012942599999998805, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00015378600000026665, "outcome": "passed"}, "call": {"duration": 0.0001423119999994782, "outcome": "passed"}, "teardown": {"duration": 0.00012608699999994144, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00014704100000084708, "outcome": "passed"}, "call": {"duration": 0.00016654800000015513, "outcome": "passed"}, "teardown": {"duration": 0.0001274760000002928, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_first_and_last_same_char", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.0001459700000001618, "outcome": "passed"}, "call": {"duration": 0.0001376899999998571, "outcome": "passed"}, "teardown": {"duration": 0.0001731940000002652, "outcome": "passed"}}]}, {"created": 1733299823.253792, "duration": 0.05851316452026367, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 7, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_multiple_first_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_multiple_last_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_single_character", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_first_and_last_of_single_character", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_empty_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_first_of_empty_string", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_last_of_empty_string", "type": "Function", "lineno": 36}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0009175660000000363, "outcome": "passed"}, "call": {"duration": 0.0003983399999998305, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020779000000015202, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017608299999993804, "outcome": "passed"}, "call": {"duration": 0.0001544170000000733, "outcome": "passed"}, "teardown": {"duration": 0.00013354300000001373, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00015728900000011592, "outcome": "passed"}, "call": {"duration": 0.00014228300000018734, "outcome": "passed"}, "teardown": {"duration": 0.0001291230000002308, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015693400000005298, "outcome": "passed"}, "call": {"duration": 0.00033811700000008216, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00032095099999995824, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_first_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_multiple_first_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00021853900000001758, "outcome": "passed"}, "call": {"duration": 0.00043799299999980335, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_first_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00018905800000013073, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_last_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_multiple_last_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017383399999992832, "outcome": "passed"}, "call": {"duration": 0.0003454869999997001, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'misis' == 'mippi'\n  \n  - mippi\n  + misis"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_last_occurrences():\n>       assert remove_Occ(\"mississippi\", \"s\") == \"mippi\"\nE       AssertionError: assert 'misis' == 'mippi'\nE         \nE         - mippi\nE         + misis\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017661200000018695, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_single_character", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_single_character", "run.py", "test", ""], "setup": {"duration": 0.00017195900000022135, "outcome": "passed"}, "call": {"duration": 0.00015251399999982596, "outcome": "passed"}, "teardown": {"duration": 0.00013410700000004994, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_of_single_character", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_first_and_last_of_single_character", "run.py", "test", ""], "setup": {"duration": 0.00016699899999972345, "outcome": "passed"}, "call": {"duration": 0.00014389200000008984, "outcome": "passed"}, "teardown": {"duration": 0.0001288139999999771, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_empty_string", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00014896500000016744, "outcome": "passed"}, "call": {"duration": 0.00015326699999995697, "outcome": "passed"}, "teardown": {"duration": 0.0001315859999997393, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_of_empty_string", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_first_of_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015212899999994534, "outcome": "passed"}, "call": {"duration": 0.00014071200000032036, "outcome": "passed"}, "teardown": {"duration": 0.00013733199999999002, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_of_empty_string", "lineno": 36, "outcome": "passed", "keywords": ["test_remove_last_of_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00014563300000025592, "outcome": "passed"}, "call": {"duration": 0.0001375580000000376, "outcome": "passed"}, "teardown": {"duration": 0.00016389700000019047, "outcome": "passed"}}]}, {"created": 1733299824.1450565, "duration": 0.04689383506774902, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 1, "total": 5, "collected": 5}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test1", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test2", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test3", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test4", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test5", "type": "Function", "lineno": 17}]}], "tests": [{"nodeid": "run.py::test1", "lineno": 5, "outcome": "failed", "keywords": ["test1", "run.py", "test", ""], "setup": {"duration": 0.0003663799999999995, "outcome": "passed"}, "call": {"duration": 0.00020930699999999192, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 7, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test1():\n>       assert remove_Occ(\"hello\",\"l\") == \"heo\"\n\nrun.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'helo', char = 'l'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0002073220000000653, "outcome": "passed"}}, {"nodeid": "run.py::test2", "lineno": 8, "outcome": "failed", "keywords": ["test2", "run.py", "test", ""], "setup": {"duration": 0.000179148999999601, "outcome": "passed"}, "call": {"duration": 0.00019650899999978932, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 10, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test2():\n>       assert remove_Occ(\"abcda\",\"a\") == \"bcd\"\n\nrun.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bcda', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017987000000019293, "outcome": "passed"}}, {"nodeid": "run.py::test3", "lineno": 11, "outcome": "failed", "keywords": ["test3", "run.py", "test", ""], "setup": {"duration": 0.0001860819999999208, "outcome": "passed"}, "call": {"duration": 0.00016889700000000119, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 13, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test3():\n>       assert remove_Occ(\"PHP\",\"P\") == \"H\"\n\nrun.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'HP', char = 'P'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017682199999979886, "outcome": "passed"}}, {"nodeid": "run.py::test4", "lineno": 14, "outcome": "failed", "keywords": ["test4", "run.py", "test", ""], "setup": {"duration": 0.00018817400000026296, "outcome": "passed"}, "call": {"duration": 0.00018766999999986211, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 16, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test4():\n>       assert remove_Occ(\"hellolloll\",\"l\") == \"helollol\"\n\nrun.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'helolloll', char = 'l'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017810699999998292, "outcome": "passed"}}, {"nodeid": "run.py::test5", "lineno": 17, "outcome": "passed", "keywords": ["test5", "run.py", "test", ""], "setup": {"duration": 0.0001894020000001717, "outcome": "passed"}, "call": {"duration": 0.0001565709999997722, "outcome": "passed"}, "teardown": {"duration": 0.00016519799999992202, "outcome": "passed"}}]}, {"created": 1733299823.4170573, "duration": 0.058481454849243164, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 7, "passed": 2, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_with_case_sensitivity", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "type": "Function", "lineno": 29}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003080130000001624, "outcome": "passed"}, "call": {"duration": 0.00026645300000005534, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 7, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\n\nrun.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'helo', char = 'l'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00024789800000002415, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 8, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00019466199999973455, "outcome": "passed"}, "call": {"duration": 0.00018599499999982783, "outcome": "passed"}, "teardown": {"duration": 0.00013826999999988487, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 11, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016440799999983824, "outcome": "passed"}, "call": {"duration": 0.00016586199999979456, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 13, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnan\"\n\nrun.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bnana', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0001741659999998646, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00018227199999998334, "outcome": "passed"}, "call": {"duration": 0.0001769529999999797, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 16, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"apple\", \"p\") == \"ale\"\n\nrun.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'aple', char = 'p'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00018331499999968415, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 17, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018310800000032046, "outcome": "passed"}, "call": {"duration": 0.00015325500000029635, "outcome": "passed"}, "teardown": {"duration": 0.00013128599999978618, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 20, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016028199999995607, "outcome": "passed"}, "call": {"duration": 0.00015683900000018625, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 22, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\n\nrun.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'mssissippi', char = 'i'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0001687979999998035, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_case_sensitivity", "lineno": 23, "outcome": "failed", "keywords": ["test_remove_Occ_with_case_sensitivity", "run.py", "test", ""], "setup": {"duration": 0.00016289200000008108, "outcome": "passed"}, "call": {"duration": 0.00016559700000007282, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 25, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_with_case_sensitivity():\n>       assert remove_Occ(\"CaseSensitive\", \"s\") == \"CaseSensitve\"\n\nrun.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'CaeSensitive', char = 's'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00018175099999995226, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 26, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016704799999978093, "outcome": "passed"}, "call": {"duration": 0.00016061499999997508, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 28, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"hello@world\", \"@\") == \"hello@orld\"\n\nrun.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'helloworld', char = '@'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00016298499999978233, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "lineno": 29, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016373899999999608, "outcome": "passed"}, "call": {"duration": 0.00016217699999998558, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 31, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_with_repeated_special_characters():\n>       assert remove_Occ(\"!!!hello!!!\", \"!\") == \"hello!!!\"\n\nrun.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '!!hello!!!', char = '!'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00020807300000003082, "outcome": "passed"}}]}, {"created": 1733299824.9897873, "duration": 0.06187129020690918, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 8, "passed": 2, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_first_and_last", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_single_char", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_special_characters", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_case_insensitive", "type": "Function", "lineno": 29}, {"nodeid": "run.py::test_digit", "type": "Function", "lineno": 32}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00029848600000015324, "outcome": "passed"}, "call": {"duration": 0.00020994199999968544, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 7, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\n\nrun.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'helo', char = 'l'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00021859000000024054, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001900289999996474, "outcome": "passed"}, "call": {"duration": 0.00018742800000026705, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 10, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\n\nrun.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'hell', char = 'o'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0001793150000004573, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 11, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017078199999964738, "outcome": "passed"}, "call": {"duration": 0.00015678399999963233, "outcome": "passed"}, "teardown": {"duration": 0.0001362250000003229, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_first_and_last", "run.py", "test", ""], "setup": {"duration": 0.0001565119999993314, "outcome": "passed"}, "call": {"duration": 0.00016498899999994876, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 16, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_first_and_last():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\n\nrun.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bnana', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0001824790000002352, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char", "lineno": 17, "outcome": "failed", "keywords": ["test_single_char", "run.py", "test", ""], "setup": {"duration": 0.00016822300000018942, "outcome": "passed"}, "call": {"duration": 0.0001628880000001942, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 19, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_single_char():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017655399999938481, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 20, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00021558200000004746, "outcome": "passed"}, "call": {"duration": 0.00015395999999956445, "outcome": "passed"}, "teardown": {"duration": 0.00013582099999975839, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 23, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016661300000020418, "outcome": "passed"}, "call": {"duration": 0.00016102900000003473, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 25, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\n\nrun.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'mssissippi', char = 'i'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017546100000043197, "outcome": "passed"}}, {"nodeid": "run.py::test_special_characters", "lineno": 26, "outcome": "failed", "keywords": ["test_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016539200000043053, "outcome": "passed"}, "call": {"duration": 0.00016226400000007857, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 28, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_special_characters():\n>       assert remove_Occ(\"!@#$hello@#\", \"@\") == \"!$hello#\"\n\nrun.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '!#$hello@#', char = '@'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017755800000074373, "outcome": "passed"}}, {"nodeid": "run.py::test_case_insensitive", "lineno": 29, "outcome": "failed", "keywords": ["test_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00017247400000020008, "outcome": "passed"}, "call": {"duration": 0.0001644329999992422, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 31, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_case_insensitive():\n>       assert remove_Occ(\"HelloWorld\", \"l\") == \"HeoWorld\"\n\nrun.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'HeloWorld', char = 'l'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00016850999999995508, "outcome": "passed"}}, {"nodeid": "run.py::test_digit", "lineno": 32, "outcome": "failed", "keywords": ["test_digit", "run.py", "test", ""], "setup": {"duration": 0.0001712259999999688, "outcome": "passed"}, "call": {"duration": 0.00016300699999938217, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 34, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_digit():\n>       assert remove_Occ(\"1234567890\", \"0\") == \"123456789\"\n\nrun.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '123456789', char = '0'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00020023400000024338, "outcome": "passed"}}]}, {"created": 1733299826.4297194, "duration": 0.06293034553527832, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 8, "passed": 2, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_with_multiple_removals", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "type": "Function", "lineno": 29}, {"nodeid": "run.py::test_remove_Occ_with_space_char", "type": "Function", "lineno": 32}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_in_string", "run.py", "test", ""], "setup": {"duration": 0.00029935200000030804, "outcome": "passed"}, "call": {"duration": 0.00021091699999997715, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 7, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_with_char_in_string():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\n\nrun.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'helo', char = 'l'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00025079100000002796, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00019473100000011456, "outcome": "passed"}, "call": {"duration": 0.0002208089999999885, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 10, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_with_char_at_start():\n>       assert remove_Occ(\"hello\", \"h\") == \"ello\"\n\nrun.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'ello', char = 'h'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00018431499999982393, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 11, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00017020800000011604, "outcome": "passed"}, "call": {"duration": 0.0001629369999998076, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 13, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_with_char_at_end():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\n\nrun.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'hell', char = 'o'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0001765229999999285, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 14, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.0001786400000001187, "outcome": "passed"}, "call": {"duration": 0.00015489199999985104, "outcome": "passed"}, "teardown": {"duration": 0.00013205900000023973, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "lineno": 17, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00015221399999987284, "outcome": "passed"}, "call": {"duration": 0.00016747399999994528, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 19, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_with_repeated_char_at_start():\n>       assert remove_Occ(\"bookkeeper\", \"b\") == \"ookkeeper\"\n\nrun.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'ookkeeper', char = 'b'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0001799399999997675, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "lineno": 20, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.0001829510000002088, "outcome": "passed"}, "call": {"duration": 0.00016421499999985656, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 22, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_with_repeated_char_at_end():\n>       assert remove_Occ(\"bookkeeper\", \"r\") == \"bookkeepke\"\n\nrun.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bookkeepe', char = 'r'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017662999999989992, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_removals", "lineno": 23, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_removals", "run.py", "test", ""], "setup": {"duration": 0.0001696830000001981, "outcome": "passed"}, "call": {"duration": 0.00016390299999979874, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 25, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_with_multiple_removals():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\n\nrun.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'mssissippi', char = 'i'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00019956099999962618, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 26, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017701599999986328, "outcome": "passed"}, "call": {"duration": 0.00015609800000015994, "outcome": "passed"}, "teardown": {"duration": 0.00013313700000017192, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "lineno": 29, "outcome": "failed", "keywords": ["test_remove_Occ_with_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00016199500000002587, "outcome": "passed"}, "call": {"duration": 0.00015880300000015168, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 31, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_with_single_char_string():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017608599999974217, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_space_char", "lineno": 32, "outcome": "failed", "keywords": ["test_remove_Occ_with_space_char", "run.py", "test", ""], "setup": {"duration": 0.00017252000000000933, "outcome": "passed"}, "call": {"duration": 0.00017003999999998243, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 34, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_with_space_char():\n>       assert remove_Occ(\"hello world\", \" \") == \"helloworld\"\n\nrun.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'helloworld', char = ' '\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00021028700000025324, "outcome": "passed"}}]}, {"created": 1733299823.8373523, "duration": 0.05177950859069824, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 3, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_single_character", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_char_not_in_string", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_first_and_last_same", "type": "Function", "lineno": 26}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00029166499999977447, "outcome": "passed"}, "call": {"duration": 0.00020525200000065524, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 7, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\n\nrun.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'helo', char = 'l'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0002198059999996005, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001890930000003621, "outcome": "passed"}, "call": {"duration": 0.00018645200000033668, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 10, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\n\nrun.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'hell', char = 'o'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017955700000005237, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 11, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017339800000026884, "outcome": "passed"}, "call": {"duration": 0.00017098300000029099, "outcome": "passed"}, "teardown": {"duration": 0.00013361199999994966, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 14, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017405000000003668, "outcome": "passed"}, "call": {"duration": 0.0001636569999998727, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 16, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\n\nrun.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bnana', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00016995100000016805, "outcome": "passed"}}, {"nodeid": "run.py::test_single_character", "lineno": 17, "outcome": "failed", "keywords": ["test_single_character", "run.py", "test", ""], "setup": {"duration": 0.0001636849999995249, "outcome": "passed"}, "call": {"duration": 0.00016774100000027659, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 19, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_single_character():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017105000000050552, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 20, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016769299999985776, "outcome": "passed"}, "call": {"duration": 0.00015014099999977049, "outcome": "passed"}, "teardown": {"duration": 0.00013017900000011906, "outcome": "passed"}}, {"nodeid": "run.py::test_char_not_in_string", "lineno": 23, "outcome": "passed", "keywords": ["test_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00016047799999974188, "outcome": "passed"}, "call": {"duration": 0.00014860199999944257, "outcome": "passed"}, "teardown": {"duration": 0.0001276880000000702, "outcome": "passed"}}, {"nodeid": "run.py::test_first_and_last_same", "lineno": 26, "outcome": "failed", "keywords": ["test_first_and_last_same", "run.py", "test", ""], "setup": {"duration": 0.00014959299999972586, "outcome": "passed"}, "call": {"duration": 0.00016596300000060182, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 28, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_first_and_last_same():\n>       assert remove_Occ(\"level\", \"l\") == \"eve\"\n\nrun.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'evel', char = 'l'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0002042740000005594, "outcome": "passed"}}]}, {"created": 1733299826.0962868, "duration": 0.051340579986572266, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 3, "total": 7, "collected": 7}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 23}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0004645020000006994, "outcome": "passed"}, "call": {"duration": 0.00023406000000036897, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 7, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\n\nrun.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bnana', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00024194300000068836, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001919030000001598, "outcome": "passed"}, "call": {"duration": 0.0001767120000000233, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 10, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\n\nrun.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bnana', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017743300000017115, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018025000000054803, "outcome": "passed"}, "call": {"duration": 0.00016693300000003575, "outcome": "passed"}, "teardown": {"duration": 0.00013293900000022063, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00016700700000082946, "outcome": "passed"}, "call": {"duration": 0.00016637000000052637, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 16, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_single_char():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.000178851999999452, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 17, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001754609999995438, "outcome": "passed"}, "call": {"duration": 0.00016054399999987368, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 19, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissipp\"\n\nrun.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'mssissippi', char = 'i'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017292600000029523, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 20, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016510300000049938, "outcome": "passed"}, "call": {"duration": 0.0001587419999999895, "outcome": "passed"}, "teardown": {"duration": 0.00013236800000004934, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 23, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015227599999967367, "outcome": "passed"}, "call": {"duration": 0.00015637700000059596, "outcome": "passed"}, "teardown": {"duration": 0.0001633309999995447, "outcome": "passed"}}]}, {"created": 1733299823.3410606, "duration": 0.05613970756530762, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 3, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_char_is_first", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_Occ_char_is_last", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "type": "Function", "lineno": 29}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00030992500000026624, "outcome": "passed"}, "call": {"duration": 0.00025072699999961756, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 7, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\n\nrun.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'helo', char = 'l'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0001878539999999873, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019129800000028396, "outcome": "passed"}, "call": {"duration": 0.00019098400000006066, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 10, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\n\nrun.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'hell', char = 'o'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017690599999964363, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00017268499999989473, "outcome": "passed"}, "call": {"duration": 0.00017563800000042207, "outcome": "passed"}, "teardown": {"duration": 0.00013802100000015471, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 14, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015587200000011237, "outcome": "passed"}, "call": {"duration": 0.00014270800000026895, "outcome": "passed"}, "teardown": {"duration": 0.00013158000000013104, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 17, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00014953400000017325, "outcome": "passed"}, "call": {"duration": 0.00013985600000010479, "outcome": "passed"}, "teardown": {"duration": 0.00012636800000009885, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 20, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001485960000002784, "outcome": "passed"}, "call": {"duration": 0.00015396499999997815, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 22, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnan\"\n\nrun.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bnana', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017643200000039272, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_is_first", "lineno": 23, "outcome": "failed", "keywords": ["test_remove_Occ_char_is_first", "run.py", "test", ""], "setup": {"duration": 0.00016953399999986019, "outcome": "passed"}, "call": {"duration": 0.00016677299999967587, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 25, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_char_is_first():\n>       assert remove_Occ(\"apple\", \"a\") == \"pple\"\n\nrun.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'pple', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017829799999979912, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_is_last", "lineno": 26, "outcome": "failed", "keywords": ["test_remove_Occ_char_is_last", "run.py", "test", ""], "setup": {"duration": 0.000169086000000096, "outcome": "passed"}, "call": {"duration": 0.00017870199999991954, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 28, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_char_is_last():\n>       assert remove_Occ(\"apple\", \"e\") == \"app\"\n\nrun.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'appl', char = 'e'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00018661799999986073, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "lineno": 29, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.0001678170000003476, "outcome": "passed"}, "call": {"duration": 0.00016607799999990291, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 31, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_multiple_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\n\nrun.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'mssissippi', char = 'i'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00020386700000019076, "outcome": "passed"}}]}, {"created": 1733299824.3987854, "duration": 0.04909157752990723, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 3, "total": 7, "collected": 7}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 23}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.000300940999999888, "outcome": "passed"}, "call": {"duration": 0.00018485200000029067, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 7, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\n\nrun.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'helo', char = 'l'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00018706599999962492, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001853460000003082, "outcome": "passed"}, "call": {"duration": 0.0001860040000005725, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 10, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\n\nrun.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'hell', char = 'o'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0001785690000000173, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017727300000025537, "outcome": "passed"}, "call": {"duration": 0.00015376300000013998, "outcome": "passed"}, "teardown": {"duration": 0.00013614399999983817, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001537020000004219, "outcome": "passed"}, "call": {"duration": 0.0001737300000002051, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 16, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\n\nrun.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bnana', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00018780199999923752, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 17, "outcome": "failed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.0001812279999997557, "outcome": "passed"}, "call": {"duration": 0.00016438200000035152, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 19, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_single_char():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017582399999938048, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 20, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00018131300000057138, "outcome": "passed"}, "call": {"duration": 0.00015459499999970205, "outcome": "passed"}, "teardown": {"duration": 0.0001444499999996296, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 23, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00016053000000049167, "outcome": "passed"}, "call": {"duration": 0.00014590500000011275, "outcome": "passed"}, "teardown": {"duration": 0.00015584299999993334, "outcome": "passed"}}]}, {"created": 1733299825.1284359, "duration": 0.0647895336151123, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 8, "passed": 3, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_char_at_start", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_char_at_end", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_first_and_last_of_same_char", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 29}, {"nodeid": "run.py::test_single_char_string", "type": "Function", "lineno": 32}, {"nodeid": "run.py::test_single_char_string_not_present", "type": "Function", "lineno": 35}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003501139999997349, "outcome": "passed"}, "call": {"duration": 0.00020249399999983098, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 7, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\n\nrun.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'helo', char = 'l'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00021124100000013968, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001757919999998414, "outcome": "passed"}, "call": {"duration": 0.00016998899999975947, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 10, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\n\nrun.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'hell', char = 'o'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017675399999994568, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00017256600000026268, "outcome": "passed"}, "call": {"duration": 0.00015792199999964396, "outcome": "passed"}, "teardown": {"duration": 0.00013307700000009248, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016360999999998072, "outcome": "passed"}, "call": {"duration": 0.0001551669999999561, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 16, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\n\nrun.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bnana', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017427100000011464, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_start", "lineno": 17, "outcome": "failed", "keywords": ["test_remove_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00016593700000022693, "outcome": "passed"}, "call": {"duration": 0.00016385200000001987, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 19, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_char_at_start():\n>       assert remove_Occ(\"apple\", \"a\") == \"pple\"\n\nrun.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'pple', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017676600000005038, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_end", "lineno": 20, "outcome": "failed", "keywords": ["test_remove_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.0001691120000000268, "outcome": "passed"}, "call": {"duration": 0.00016864899999990968, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 22, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_char_at_end():\n>       assert remove_Occ(\"apple\", \"e\") == \"apppl\"\n\nrun.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'appl', char = 'e'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0001767220000004066, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 23, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016414800000008611, "outcome": "passed"}, "call": {"duration": 0.0001687180000002897, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 25, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\n\nrun.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'mssissippi', char = 'i'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017223900000029602, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_of_same_char", "lineno": 26, "outcome": "failed", "keywords": ["test_remove_first_and_last_of_same_char", "run.py", "test", ""], "setup": {"duration": 0.0001675030000001243, "outcome": "passed"}, "call": {"duration": 0.00017860799999969146, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 28, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_first_and_last_of_same_char():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\n\nrun.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bookeeper', char = 'k'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00029350199999989, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 29, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00022411800000021742, "outcome": "passed"}, "call": {"duration": 0.0001735549999999364, "outcome": "passed"}, "teardown": {"duration": 0.00013761900000019978, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string", "lineno": 32, "outcome": "failed", "keywords": ["test_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00016968500000036357, "outcome": "passed"}, "call": {"duration": 0.00016658099999977694, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 34, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_single_char_string():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00018812900000009236, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string_not_present", "lineno": 35, "outcome": "passed", "keywords": ["test_single_char_string_not_present", "run.py", "test", ""], "setup": {"duration": 0.00017270900000010414, "outcome": "passed"}, "call": {"duration": 0.00016601800000026756, "outcome": "passed"}, "teardown": {"duration": 0.00017348100000003086, "outcome": "passed"}}]}, {"created": 1733299825.8546226, "duration": 0.06042647361755371, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 4, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_Occ_special_characters", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "type": "Function", "lineno": 29}, {"nodeid": "run.py::test_remove_Occ_unicode_characters", "type": "Function", "lineno": 32}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003584690000000279, "outcome": "passed"}, "call": {"duration": 0.00021804899999988692, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 7, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\n\nrun.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bnana', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.000260152000000069, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00021388299999980376, "outcome": "passed"}, "call": {"duration": 0.00021012400000053333, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 10, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\n\nrun.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bnana', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00018726799999946309, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017511400000014277, "outcome": "passed"}, "call": {"duration": 0.00015371100000027837, "outcome": "passed"}, "teardown": {"duration": 0.000137215999999718, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00017424500000018384, "outcome": "passed"}, "call": {"duration": 0.0001616509999999849, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 16, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_single_char():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017798000000013303, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 17, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017423400000016187, "outcome": "passed"}, "call": {"duration": 0.0001603280000006535, "outcome": "passed"}, "teardown": {"duration": 0.0001361779999999868, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 20, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00016772900000017188, "outcome": "passed"}, "call": {"duration": 0.00014696700000005336, "outcome": "passed"}, "teardown": {"duration": 0.00012844900000086312, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 23, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016645000000004018, "outcome": "passed"}, "call": {"duration": 0.00016649099999987982, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 25, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\n\nrun.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'mssissippi', char = 'i'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.000181184000000556, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_special_characters", "lineno": 26, "outcome": "failed", "keywords": ["test_remove_Occ_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00018046499999968546, "outcome": "passed"}, "call": {"duration": 0.00016709299999995153, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 28, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_special_characters():\n>       assert remove_Occ(\"#$#$$#\", \"$\") == \"##$$#\"\n\nrun.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '##$$#', char = '$'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0002787499999996612, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "lineno": 29, "outcome": "failed", "keywords": ["test_remove_Occ_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00016764500000032712, "outcome": "passed"}, "call": {"duration": 0.0001749189999999956, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 31, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_case_insensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnana\"\n\nrun.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'Bnana', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00018637600000026566, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_unicode_characters", "lineno": 32, "outcome": "passed", "keywords": ["test_remove_Occ_unicode_characters", "run.py", "test", ""], "setup": {"duration": 0.00017143499999949796, "outcome": "passed"}, "call": {"duration": 0.00015237100000042858, "outcome": "passed"}, "teardown": {"duration": 0.00017151100000045716, "outcome": "passed"}}]}, {"created": 1733299824.9698236, "duration": 0.05317044258117676, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 3, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_Occ_first_and_last_same_char", "type": "Function", "lineno": 26}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00032698900000038833, "outcome": "passed"}, "call": {"duration": 0.00019813000000024061, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 7, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\n\nrun.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'helo', char = 'l'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0002017800000002623, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018092700000060802, "outcome": "passed"}, "call": {"duration": 0.00018996900000001204, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 10, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\n\nrun.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'hell', char = 'o'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017943599999981075, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017571999999965726, "outcome": "passed"}, "call": {"duration": 0.00015513499999997293, "outcome": "passed"}, "teardown": {"duration": 0.00013234399999983992, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016531899999971955, "outcome": "passed"}, "call": {"duration": 0.00015974300000021202, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 16, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\n\nrun.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bnana', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017477599999971005, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 17, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016765500000026634, "outcome": "passed"}, "call": {"duration": 0.0001494360000000583, "outcome": "passed"}, "teardown": {"duration": 0.00013766999999997864, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 20, "outcome": "failed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00015525299999996633, "outcome": "passed"}, "call": {"duration": 0.0001558939999997122, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 22, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_single_char():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00018073399999973816, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 23, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.000170476000000086, "outcome": "passed"}, "call": {"duration": 0.0001568330000001339, "outcome": "passed"}, "teardown": {"duration": 0.00013551700000036249, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_first_and_last_same_char", "lineno": 26, "outcome": "failed", "keywords": ["test_remove_Occ_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00015433999999991954, "outcome": "passed"}, "call": {"duration": 0.00016969999999982832, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 28, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_first_and_last_same_char():\n>       assert remove_Occ(\"abba\", \"b\") == \"a\"\n\nrun.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'aba', char = 'b'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0002052790000002247, "outcome": "passed"}}]}, {"created": 1733299824.3040013, "duration": 0.062425851821899414, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 7, "passed": 4, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_multiple_first_occurrences", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_multiple_last_occurrences", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_single_character", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_first_and_last_of_single_character", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_remove_empty_string", "type": "Function", "lineno": 29}, {"nodeid": "run.py::test_remove_first_of_empty_string", "type": "Function", "lineno": 32}, {"nodeid": "run.py::test_remove_last_of_empty_string", "type": "Function", "lineno": 35}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00040776300000011645, "outcome": "passed"}, "call": {"duration": 0.00019677700000020337, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 7, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\n\nrun.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'helo', char = 'l'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00024151800000016266, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00020379799999981074, "outcome": "passed"}, "call": {"duration": 0.00018672800000008039, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 10, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\n\nrun.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'hell', char = 'o'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00019219700000006057, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00017226400000014408, "outcome": "passed"}, "call": {"duration": 0.00015269599999978567, "outcome": "passed"}, "teardown": {"duration": 0.00013020500000004986, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015535300000024677, "outcome": "passed"}, "call": {"duration": 0.00015615499999999116, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 16, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\n\nrun.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bnana', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0001755649999997111, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_first_occurrences", "lineno": 17, "outcome": "failed", "keywords": ["test_remove_multiple_first_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016924900000026, "outcome": "passed"}, "call": {"duration": 0.00017212199999994127, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 19, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_multiple_first_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\n\nrun.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'mssissippi', char = 'i'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00018495500000037524, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_last_occurrences", "lineno": 20, "outcome": "failed", "keywords": ["test_remove_multiple_last_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016771700000006717, "outcome": "passed"}, "call": {"duration": 0.00016470499999998722, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 22, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_multiple_last_occurrences():\n>       assert remove_Occ(\"mississippi\", \"s\") == \"mippi\"\n\nrun.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'misissippi', char = 's'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017314300000004224, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_single_character", "lineno": 23, "outcome": "failed", "keywords": ["test_remove_single_character", "run.py", "test", ""], "setup": {"duration": 0.00017829700000016047, "outcome": "passed"}, "call": {"duration": 0.00016520299999989163, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 25, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_single_character():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017416199999997772, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_of_single_character", "lineno": 26, "outcome": "failed", "keywords": ["test_remove_first_and_last_of_single_character", "run.py", "test", ""], "setup": {"duration": 0.0001659929999999754, "outcome": "passed"}, "call": {"duration": 0.0001709340000002335, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 28, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_first_and_last_of_single_character():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017464099999964233, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_empty_string", "lineno": 29, "outcome": "passed", "keywords": ["test_remove_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001702990000000959, "outcome": "passed"}, "call": {"duration": 0.00015119899999982422, "outcome": "passed"}, "teardown": {"duration": 0.00013379099999966115, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_of_empty_string", "lineno": 32, "outcome": "passed", "keywords": ["test_remove_first_of_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015966400000033687, "outcome": "passed"}, "call": {"duration": 0.00014321700000019533, "outcome": "passed"}, "teardown": {"duration": 0.00012627600000003625, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_of_empty_string", "lineno": 35, "outcome": "passed", "keywords": ["test_remove_last_of_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00014800499999978456, "outcome": "passed"}, "call": {"duration": 0.00016131699999988314, "outcome": "passed"}, "teardown": {"duration": 0.00015940399999969657, "outcome": "passed"}}]}, {"created": 1733299824.5499547, "duration": 0.04117465019226074, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 1, "passed": 4, "total": 5, "collected": 5}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test1", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test2", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test3", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test4", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test5", "type": "Function", "lineno": 17}]}], "tests": [{"nodeid": "run.py::test1", "lineno": 5, "outcome": "failed", "keywords": ["test1", "run.py", "test", ""], "setup": {"duration": 0.00032615900000010356, "outcome": "passed"}, "call": {"duration": 0.0004302760000003403, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 7, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 7, "message": "AssertionError"}], "longrepr": "def test1():\n>       assert remove_Occ(\"hello\",\"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:7: AssertionError"}, "teardown": {"duration": 0.00019610899999999987, "outcome": "passed"}}, {"nodeid": "run.py::test2", "lineno": 8, "outcome": "passed", "keywords": ["test2", "run.py", "test", ""], "setup": {"duration": 0.00018072199999963345, "outcome": "passed"}, "call": {"duration": 0.0001777029999998625, "outcome": "passed"}, "teardown": {"duration": 0.00013624500000020134, "outcome": "passed"}}, {"nodeid": "run.py::test3", "lineno": 11, "outcome": "passed", "keywords": ["test3", "run.py", "test", ""], "setup": {"duration": 0.00015920400000002388, "outcome": "passed"}, "call": {"duration": 0.00017293599999979037, "outcome": "passed"}, "teardown": {"duration": 0.00013046599999988473, "outcome": "passed"}}, {"nodeid": "run.py::test4", "lineno": 14, "outcome": "passed", "keywords": ["test4", "run.py", "test", ""], "setup": {"duration": 0.0001487799999999595, "outcome": "passed"}, "call": {"duration": 0.00014008700000012198, "outcome": "passed"}, "teardown": {"duration": 0.0001383650000001957, "outcome": "passed"}}, {"nodeid": "run.py::test5", "lineno": 17, "outcome": "passed", "keywords": ["test5", "run.py", "test", ""], "setup": {"duration": 0.00015133400000033603, "outcome": "passed"}, "call": {"duration": 0.00014582900000004173, "outcome": "passed"}, "teardown": {"duration": 0.0001589470000000759, "outcome": "passed"}}]}, {"created": 1733299824.116184, "duration": 0.05758929252624512, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 3, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_with_case_sensitivity", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "type": "Function", "lineno": 29}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003366379999998337, "outcome": "passed"}, "call": {"duration": 0.000506500999999826, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 7, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 7, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:7: AssertionError"}, "teardown": {"duration": 0.00020319699999982177, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 8, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00020768899999978885, "outcome": "passed"}, "call": {"duration": 0.00017634100000041286, "outcome": "passed"}, "teardown": {"duration": 0.00013735400000003395, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015343500000009058, "outcome": "passed"}, "call": {"duration": 0.00014753999999994605, "outcome": "passed"}, "teardown": {"duration": 0.00014688899999981686, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00015025800000012524, "outcome": "passed"}, "call": {"duration": 0.00033512300000015927, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 16, "message": "AssertionError: assert 'a' == 'ale'\n  \n  - ale\n  + a"}, "traceback": [{"path": "run.py", "lineno": 16, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"apple\", \"p\") == \"ale\"\nE       AssertionError: assert 'a' == 'ale'\nE         \nE         - ale\nE         + a\n\nrun.py:16: AssertionError"}, "teardown": {"duration": 0.0001920040000000789, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 17, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017166600000040333, "outcome": "passed"}, "call": {"duration": 0.00015538500000022992, "outcome": "passed"}, "teardown": {"duration": 0.00015016199999973168, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 20, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015947899999968485, "outcome": "passed"}, "call": {"duration": 0.0003597930000003302, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 22, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 22, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:22: AssertionError"}, "teardown": {"duration": 0.0001730709999998581, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_case_sensitivity", "lineno": 23, "outcome": "failed", "keywords": ["test_remove_Occ_with_case_sensitivity", "run.py", "test", ""], "setup": {"duration": 0.00016603900000022875, "outcome": "passed"}, "call": {"duration": 0.00032025299999993706, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 25, "message": "AssertionError: assert 'CaeSen' == 'CaseSensitve'\n  \n  - CaseSensitve\n  + CaeSen"}, "traceback": [{"path": "run.py", "lineno": 25, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_case_sensitivity():\n>       assert remove_Occ(\"CaseSensitive\", \"s\") == \"CaseSensitve\"\nE       AssertionError: assert 'CaeSen' == 'CaseSensitve'\nE         \nE         - CaseSensitve\nE         + CaeSen\n\nrun.py:25: AssertionError"}, "teardown": {"duration": 0.000175807999999833, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 26, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016664100000030047, "outcome": "passed"}, "call": {"duration": 0.0003718219999999661, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 28, "message": "AssertionError: assert 'helloworld' == 'hello@orld'\n  \n  - hello@orld\n  ?      ^\n  + helloworld\n  ?      ^"}, "traceback": [{"path": "run.py", "lineno": 28, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"hello@world\", \"@\") == \"hello@orld\"\nE       AssertionError: assert 'helloworld' == 'hello@orld'\nE         \nE         - hello@orld\nE         ?      ^\nE         + helloworld\nE         ?      ^\n\nrun.py:28: AssertionError"}, "teardown": {"duration": 0.0002092639999999868, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "lineno": 29, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001884479999998412, "outcome": "passed"}, "call": {"duration": 0.0003868699999998171, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 31, "message": "AssertionError: assert '!!hello!!' == 'hello!!!'\n  \n  - hello!!!\n  ?        -\n  + !!hello!!\n  ? ++"}, "traceback": [{"path": "run.py", "lineno": 31, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_special_characters():\n>       assert remove_Occ(\"!!!hello!!!\", \"!\") == \"hello!!!\"\nE       AssertionError: assert '!!hello!!' == 'hello!!!'\nE         \nE         - hello!!!\nE         ?        -\nE         + !!hello!!\nE         ? ++\n\nrun.py:31: AssertionError"}, "teardown": {"duration": 0.00021874799999999084, "outcome": "passed"}}]}, {"created": 1733299824.420906, "duration": 0.057684898376464844, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_first_and_last", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_single_char", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_special_characters", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_case_insensitive", "type": "Function", "lineno": 29}, {"nodeid": "run.py::test_digit", "type": "Function", "lineno": 32}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0005337199999999598, "outcome": "passed"}, "call": {"duration": 0.0006573940000000889, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 7, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 7, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:7: AssertionError"}, "teardown": {"duration": 0.00024422200000007166, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 8, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00020999899999996074, "outcome": "passed"}, "call": {"duration": 0.00017241199999995516, "outcome": "passed"}, "teardown": {"duration": 0.0001373689999999428, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 11, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015876500000011617, "outcome": "passed"}, "call": {"duration": 0.00015823300000006313, "outcome": "passed"}, "teardown": {"duration": 0.00013260400000003614, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_first_and_last", "run.py", "test", ""], "setup": {"duration": 0.00015372400000002173, "outcome": "passed"}, "call": {"duration": 0.0003811999999996374, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 16, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 16, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:16: AssertionError"}, "teardown": {"duration": 0.00017929299999996928, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char", "lineno": 17, "outcome": "passed", "keywords": ["test_single_char", "run.py", "test", ""], "setup": {"duration": 0.0001731609999997552, "outcome": "passed"}, "call": {"duration": 0.00015258999999989697, "outcome": "passed"}, "teardown": {"duration": 0.00013332099999985303, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 20, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001580460000001338, "outcome": "passed"}, "call": {"duration": 0.000144181000000021, "outcome": "passed"}, "teardown": {"duration": 0.00012646500000013106, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 23, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00014760800000024332, "outcome": "passed"}, "call": {"duration": 0.00034280499999983505, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 25, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 25, "message": "AssertionError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:25: AssertionError"}, "teardown": {"duration": 0.00017586400000002556, "outcome": "passed"}}, {"nodeid": "run.py::test_special_characters", "lineno": 26, "outcome": "failed", "keywords": ["test_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001692800000001604, "outcome": "passed"}, "call": {"duration": 0.00034185899999972236, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 28, "message": "AssertionError: assert '!#$hello' == '!$hello#'\n  \n  - !$hello#\n  ?        -\n  + !#$hello\n  ?  +"}, "traceback": [{"path": "run.py", "lineno": 28, "message": "AssertionError"}], "longrepr": "def test_special_characters():\n>       assert remove_Occ(\"!@#$hello@#\", \"@\") == \"!$hello#\"\nE       AssertionError: assert '!#$hello' == '!$hello#'\nE         \nE         - !$hello#\nE         ?        -\nE         + !#$hello\nE         ?  +\n\nrun.py:28: AssertionError"}, "teardown": {"duration": 0.0001744749999996742, "outcome": "passed"}}, {"nodeid": "run.py::test_case_insensitive", "lineno": 29, "outcome": "failed", "keywords": ["test_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00016607400000001604, "outcome": "passed"}, "call": {"duration": 0.0003489359999999664, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 31, "message": "AssertionError: assert 'HeloWor' == 'HeoWorld'\n  \n  - HeoWorld\n  ?       --\n  + HeloWor\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 31, "message": "AssertionError"}], "longrepr": "def test_case_insensitive():\n>       assert remove_Occ(\"HelloWorld\", \"l\") == \"HeoWorld\"\nE       AssertionError: assert 'HeloWor' == 'HeoWorld'\nE         \nE         - HeoWorld\nE         ?       --\nE         + HeloWor\nE         ?   +\n\nrun.py:31: AssertionError"}, "teardown": {"duration": 0.00017361300000029445, "outcome": "passed"}}, {"nodeid": "run.py::test_digit", "lineno": 32, "outcome": "passed", "keywords": ["test_digit", "run.py", "test", ""], "setup": {"duration": 0.00017935700000037968, "outcome": "passed"}, "call": {"duration": 0.00015245999999979887, "outcome": "passed"}, "teardown": {"duration": 0.0001644450000002351, "outcome": "passed"}}]}, {"created": 1733299824.8197446, "duration": 0.05242776870727539, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 7, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_with_multiple_removals", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "type": "Function", "lineno": 29}, {"nodeid": "run.py::test_remove_Occ_with_space_char", "type": "Function", "lineno": 32}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_in_string", "run.py", "test", ""], "setup": {"duration": 0.0003142560000002348, "outcome": "passed"}, "call": {"duration": 0.0004715020000003456, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 7, "message": "AssertionError: assert 'he' == 'heloo'\n  \n  - heloo\n  + he"}, "traceback": [{"path": "run.py", "lineno": 7, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_in_string():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\nE       AssertionError: assert 'he' == 'heloo'\nE         \nE         - heloo\nE         + he\n\nrun.py:7: AssertionError"}, "teardown": {"duration": 0.0002307639999998834, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 8, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00019856900000014832, "outcome": "passed"}, "call": {"duration": 0.00018192600000022097, "outcome": "passed"}, "teardown": {"duration": 0.00013611100000021636, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00016097600000009038, "outcome": "passed"}, "call": {"duration": 0.00015048300000009007, "outcome": "passed"}, "teardown": {"duration": 0.0001356800000000824, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 14, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.0001567320000002148, "outcome": "passed"}, "call": {"duration": 0.00014544000000027424, "outcome": "passed"}, "teardown": {"duration": 0.00013885300000016088, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "lineno": 17, "outcome": "passed", "keywords": ["test_remove_Occ_with_repeated_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.0001530700000000884, "outcome": "passed"}, "call": {"duration": 0.00014699499999970556, "outcome": "passed"}, "teardown": {"duration": 0.00013189700000015847, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "lineno": 20, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00018108400000027558, "outcome": "passed"}, "call": {"duration": 0.00039038500000021514, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 22, "message": "AssertionError: assert 'bookkeepe' == 'bookkeepke'\n  \n  - bookkeepke\n  ?         -\n  + bookkeepe"}, "traceback": [{"path": "run.py", "lineno": 22, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_char_at_end():\n>       assert remove_Occ(\"bookkeeper\", \"r\") == \"bookkeepke\"\nE       AssertionError: assert 'bookkeepe' == 'bookkeepke'\nE         \nE         - bookkeepke\nE         ?         -\nE         + bookkeepe\n\nrun.py:22: AssertionError"}, "teardown": {"duration": 0.00017719200000021473, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_removals", "lineno": 23, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_removals", "run.py", "test", ""], "setup": {"duration": 0.00016862900000003123, "outcome": "passed"}, "call": {"duration": 0.00036073299999994646, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 25, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 25, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_removals():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:25: AssertionError"}, "teardown": {"duration": 0.0001769339999997399, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 26, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017575599999997138, "outcome": "passed"}, "call": {"duration": 0.00015190299999989776, "outcome": "passed"}, "teardown": {"duration": 0.00013362199999988889, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "lineno": 29, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.0001661579999998608, "outcome": "passed"}, "call": {"duration": 0.00014979500000000812, "outcome": "passed"}, "teardown": {"duration": 0.00012892400000019677, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_space_char", "lineno": 32, "outcome": "passed", "keywords": ["test_remove_Occ_with_space_char", "run.py", "test", ""], "setup": {"duration": 0.0001537560000000049, "outcome": "passed"}, "call": {"duration": 0.00016217400000018145, "outcome": "passed"}, "teardown": {"duration": 0.00016473299999963942, "outcome": "passed"}}]}, {"created": 1733299824.880803, "duration": 0.0683743953704834, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 6, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_single_character", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_char_not_in_string", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_first_and_last_same", "type": "Function", "lineno": 26}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0005750799999999501, "outcome": "passed"}, "call": {"duration": 0.0006463400000003006, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 7, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 7, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:7: AssertionError"}, "teardown": {"duration": 0.00031305000000037, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 8, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0004422599999998056, "outcome": "passed"}, "call": {"duration": 0.00025284999999986013, "outcome": "passed"}, "teardown": {"duration": 0.00024102000000025825, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 11, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002551799999999105, "outcome": "passed"}, "call": {"duration": 0.00025748000000014315, "outcome": "passed"}, "teardown": {"duration": 0.0002028199999997149, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 14, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0004853500000003841, "outcome": "passed"}, "call": {"duration": 0.0004473100000002006, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 16, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 16, "message": "AssertionError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:16: AssertionError"}, "teardown": {"duration": 0.00024147999999968306, "outcome": "passed"}}, {"nodeid": "run.py::test_single_character", "lineno": 17, "outcome": "passed", "keywords": ["test_single_character", "run.py", "test", ""], "setup": {"duration": 0.00025626000000000815, "outcome": "passed"}, "call": {"duration": 0.00023588999999990534, "outcome": "passed"}, "teardown": {"duration": 0.00022943000000008595, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 20, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00025282000000004246, "outcome": "passed"}, "call": {"duration": 0.00024118000000017403, "outcome": "passed"}, "teardown": {"duration": 0.00028463999999983614, "outcome": "passed"}}, {"nodeid": "run.py::test_char_not_in_string", "lineno": 23, "outcome": "passed", "keywords": ["test_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00024889100000002884, "outcome": "passed"}, "call": {"duration": 0.00023358000000017753, "outcome": "passed"}, "teardown": {"duration": 0.000249640000000273, "outcome": "passed"}}, {"nodeid": "run.py::test_first_and_last_same", "lineno": 26, "outcome": "passed", "keywords": ["test_first_and_last_same", "run.py", "test", ""], "setup": {"duration": 0.0002649000000003454, "outcome": "passed"}, "call": {"duration": 0.00026187099999974706, "outcome": "passed"}, "teardown": {"duration": 0.00027580900000012676, "outcome": "passed"}}]}, {"created": 1733299824.6022463, "duration": 0.04852461814880371, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 5, "total": 7, "collected": 7}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 23}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00035692500000017446, "outcome": "passed"}, "call": {"duration": 0.00046634100000009227, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 7, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 7, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:7: AssertionError"}, "teardown": {"duration": 0.000242248000000167, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00021231699999990639, "outcome": "passed"}, "call": {"duration": 0.0004108880000002202, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 10, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 10, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:10: AssertionError"}, "teardown": {"duration": 0.0001810249999998348, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017347499999953442, "outcome": "passed"}, "call": {"duration": 0.00016509399999975471, "outcome": "passed"}, "teardown": {"duration": 0.0001336790000001642, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 14, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.0001550970000003815, "outcome": "passed"}, "call": {"duration": 0.0001574040000003052, "outcome": "passed"}, "teardown": {"duration": 0.00014698800000001455, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 17, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001546130000003032, "outcome": "passed"}, "call": {"duration": 0.00014308300000021035, "outcome": "passed"}, "teardown": {"duration": 0.0001306799999998276, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 20, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015309300000065917, "outcome": "passed"}, "call": {"duration": 0.00014082200000054002, "outcome": "passed"}, "teardown": {"duration": 0.00012591499999992095, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 23, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00017132400000008374, "outcome": "passed"}, "call": {"duration": 0.00014223400000012987, "outcome": "passed"}, "teardown": {"duration": 0.0001597240000004163, "outcome": "passed"}}]}, {"created": 1733299824.8696635, "duration": 0.048941612243652344, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 6, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_char_is_first", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_Occ_char_is_last", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "type": "Function", "lineno": 29}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00029563399999998907, "outcome": "passed"}, "call": {"duration": 0.0004421159999998814, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 7, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 7, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:7: AssertionError"}, "teardown": {"duration": 0.00019336400000025122, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 8, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017763399999992657, "outcome": "passed"}, "call": {"duration": 0.00017416099999989498, "outcome": "passed"}, "teardown": {"duration": 0.0001369540000002445, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00015959399999987411, "outcome": "passed"}, "call": {"duration": 0.00017512799999996886, "outcome": "passed"}, "teardown": {"duration": 0.00013201200000034774, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 14, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015074399999992494, "outcome": "passed"}, "call": {"duration": 0.0001398349999996995, "outcome": "passed"}, "teardown": {"duration": 0.00013939699999987454, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 17, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00014665299999983006, "outcome": "passed"}, "call": {"duration": 0.00014456699999998435, "outcome": "passed"}, "teardown": {"duration": 0.00012846300000024513, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 20, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001536550000000858, "outcome": "passed"}, "call": {"duration": 0.000143410000000177, "outcome": "passed"}, "teardown": {"duration": 0.00012794399999993544, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_is_first", "lineno": 23, "outcome": "passed", "keywords": ["test_remove_Occ_char_is_first", "run.py", "test", ""], "setup": {"duration": 0.00014552999999972727, "outcome": "passed"}, "call": {"duration": 0.00014310699999997567, "outcome": "passed"}, "teardown": {"duration": 0.00012591100000003408, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_is_last", "lineno": 26, "outcome": "failed", "keywords": ["test_remove_Occ_char_is_last", "run.py", "test", ""], "setup": {"duration": 0.00014384199999994962, "outcome": "passed"}, "call": {"duration": 0.00035751000000017186, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 28, "message": "AssertionError: assert 'appl' == 'app'\n  \n  - app\n  + appl\n  ?    +"}, "traceback": [{"path": "run.py", "lineno": 28, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_char_is_last():\n>       assert remove_Occ(\"apple\", \"e\") == \"app\"\nE       AssertionError: assert 'appl' == 'app'\nE         \nE         - app\nE         + appl\nE         ?    +\n\nrun.py:28: AssertionError"}, "teardown": {"duration": 0.00017567700000009623, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "lineno": 29, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00017131400000014452, "outcome": "passed"}, "call": {"duration": 0.0003414210000003415, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 31, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 31, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:31: AssertionError"}, "teardown": {"duration": 0.0002086150000000231, "outcome": "passed"}}]}, {"created": 1733299826.2604423, "duration": 0.04523420333862305, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 5, "total": 7, "collected": 7}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 23}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003505860000001526, "outcome": "passed"}, "call": {"duration": 0.00038574899999987977, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 7, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 7, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:7: AssertionError"}, "teardown": {"duration": 0.0001973269999999694, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 8, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017800000000001148, "outcome": "passed"}, "call": {"duration": 0.00017710799999992588, "outcome": "passed"}, "teardown": {"duration": 0.0001411070000001402, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015714599999983037, "outcome": "passed"}, "call": {"duration": 0.0001529659999999211, "outcome": "passed"}, "teardown": {"duration": 0.00012939600000017037, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00014828099999997235, "outcome": "passed"}, "call": {"duration": 0.00036232099999988776, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 16, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 16, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:16: AssertionError"}, "teardown": {"duration": 0.00017445099999990887, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 17, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.0001680479999999207, "outcome": "passed"}, "call": {"duration": 0.00015751799999996763, "outcome": "passed"}, "teardown": {"duration": 0.00013571099999998282, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 20, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016142999999990693, "outcome": "passed"}, "call": {"duration": 0.00015404600000001878, "outcome": "passed"}, "teardown": {"duration": 0.00013050000000003337, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 23, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00014733700000002514, "outcome": "passed"}, "call": {"duration": 0.00014020099999978441, "outcome": "passed"}, "teardown": {"duration": 0.00018498499999974882, "outcome": "passed"}}]}, {"created": 1733299824.9063268, "duration": 0.058220863342285156, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 6, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_char_at_start", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_char_at_end", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_first_and_last_of_same_char", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 29}, {"nodeid": "run.py::test_single_char_string", "type": "Function", "lineno": 32}, {"nodeid": "run.py::test_single_char_string_not_present", "type": "Function", "lineno": 35}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003535279999997698, "outcome": "passed"}, "call": {"duration": 0.00037731799999995985, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 7, "message": "AssertionError: assert 'he' == 'heloo'\n  \n  - heloo\n  + he"}, "traceback": [{"path": "run.py", "lineno": 7, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\nE       AssertionError: assert 'he' == 'heloo'\nE         \nE         - heloo\nE         + he\n\nrun.py:7: AssertionError"}, "teardown": {"duration": 0.0003027300000000288, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 8, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00022256200000025927, "outcome": "passed"}, "call": {"duration": 0.00019282399999998034, "outcome": "passed"}, "teardown": {"duration": 0.000137372000000191, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00015885700000017877, "outcome": "passed"}, "call": {"duration": 0.00015388300000029886, "outcome": "passed"}, "teardown": {"duration": 0.00013010500000021352, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001510050000002039, "outcome": "passed"}, "call": {"duration": 0.0004234589999998484, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 16, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 16, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:16: AssertionError"}, "teardown": {"duration": 0.00017916399999995392, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_start", "lineno": 17, "outcome": "passed", "keywords": ["test_remove_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00017172299999979046, "outcome": "passed"}, "call": {"duration": 0.0001576380000001265, "outcome": "passed"}, "teardown": {"duration": 0.00013326100000021768, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_end", "lineno": 20, "outcome": "failed", "keywords": ["test_remove_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00016865799999976616, "outcome": "passed"}, "call": {"duration": 0.0003677869999996197, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 22, "message": "AssertionError: assert 'appl' == 'apppl'\n  \n  - apppl\n  ?    -\n  + appl"}, "traceback": [{"path": "run.py", "lineno": 22, "message": "AssertionError"}], "longrepr": "def test_remove_char_at_end():\n>       assert remove_Occ(\"apple\", \"e\") == \"apppl\"\nE       AssertionError: assert 'appl' == 'apppl'\nE         \nE         - apppl\nE         ?    -\nE         + appl\n\nrun.py:22: AssertionError"}, "teardown": {"duration": 0.0001768890000000134, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 23, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016811100000024837, "outcome": "passed"}, "call": {"duration": 0.0003526100000001975, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 25, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 25, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:25: AssertionError"}, "teardown": {"duration": 0.00017457299999978915, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_of_same_char", "lineno": 26, "outcome": "failed", "keywords": ["test_remove_first_and_last_of_same_char", "run.py", "test", ""], "setup": {"duration": 0.00017734499999999542, "outcome": "passed"}, "call": {"duration": 0.00030249000000015513, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 28, "message": "AssertionError: assert 'boo' == 'bookeeper'\n  \n  - bookeeper\n  + boo"}, "traceback": [{"path": "run.py", "lineno": 28, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_of_same_char():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'boo' == 'bookeeper'\nE         \nE         - bookeeper\nE         + boo\n\nrun.py:28: AssertionError"}, "teardown": {"duration": 0.00017771200000016307, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 29, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00018340000000005574, "outcome": "passed"}, "call": {"duration": 0.00015631700000007243, "outcome": "passed"}, "teardown": {"duration": 0.00013368199999996833, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string", "lineno": 32, "outcome": "passed", "keywords": ["test_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.0001533390000001411, "outcome": "passed"}, "call": {"duration": 0.00015191299999983698, "outcome": "passed"}, "teardown": {"duration": 0.0001274310000001222, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string_not_present", "lineno": 35, "outcome": "passed", "keywords": ["test_single_char_string_not_present", "run.py", "test", ""], "setup": {"duration": 0.00014959799999969547, "outcome": "passed"}, "call": {"duration": 0.00013878899999975047, "outcome": "passed"}, "teardown": {"duration": 0.00017207199999980105, "outcome": "passed"}}]}, {"created": 1733299824.4620528, "duration": 0.05559873580932617, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_Occ_special_characters", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "type": "Function", "lineno": 29}, {"nodeid": "run.py::test_remove_Occ_unicode_characters", "type": "Function", "lineno": 32}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00034491000000036465, "outcome": "passed"}, "call": {"duration": 0.0004310240000000576, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 7, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 7, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:7: AssertionError"}, "teardown": {"duration": 0.00022228199999974052, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001977969999997775, "outcome": "passed"}, "call": {"duration": 0.0003941470000001779, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 10, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 10, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:10: AssertionError"}, "teardown": {"duration": 0.0001788000000000345, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017596800000019286, "outcome": "passed"}, "call": {"duration": 0.00015331100000004483, "outcome": "passed"}, "teardown": {"duration": 0.00013521299999963432, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 14, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00016497000000015305, "outcome": "passed"}, "call": {"duration": 0.00014560300000043824, "outcome": "passed"}, "teardown": {"duration": 0.00012517600000006013, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 17, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00014734899999968576, "outcome": "passed"}, "call": {"duration": 0.00014988499999990523, "outcome": "passed"}, "teardown": {"duration": 0.00012704000000018922, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 20, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00014444699999982547, "outcome": "passed"}, "call": {"duration": 0.00013631599999985866, "outcome": "passed"}, "teardown": {"duration": 0.00013219300000022471, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 23, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015279699999970475, "outcome": "passed"}, "call": {"duration": 0.0003397670000002684, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 25, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 25, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:25: AssertionError"}, "teardown": {"duration": 0.0001721059999999497, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_special_characters", "lineno": 26, "outcome": "failed", "keywords": ["test_remove_Occ_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001677930000001382, "outcome": "passed"}, "call": {"duration": 0.00034045999999987586, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 28, "message": "AssertionError: assert '##$' == '##$$#'\n  \n  - ##$$#\n  ?    --\n  + ##$"}, "traceback": [{"path": "run.py", "lineno": 28, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_special_characters():\n>       assert remove_Occ(\"#$#$$#\", \"$\") == \"##$$#\"\nE       AssertionError: assert '##$' == '##$$#'\nE         \nE         - ##$$#\nE         ?    --\nE         + ##$\n\nrun.py:28: AssertionError"}, "teardown": {"duration": 0.00017816899999978375, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "lineno": 29, "outcome": "failed", "keywords": ["test_remove_Occ_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.0001685980000001308, "outcome": "passed"}, "call": {"duration": 0.0003381230000001345, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 31, "message": "AssertionError: assert 'Bnan' == 'Bnana'\n  \n  - Bnana\n  ?     -\n  + Bnan"}, "traceback": [{"path": "run.py", "lineno": 31, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_case_insensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnana\"\nE       AssertionError: assert 'Bnan' == 'Bnana'\nE         \nE         - Bnana\nE         ?     -\nE         + Bnan\n\nrun.py:31: AssertionError"}, "teardown": {"duration": 0.00017654299999980694, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_unicode_characters", "lineno": 32, "outcome": "passed", "keywords": ["test_remove_Occ_unicode_characters", "run.py", "test", ""], "setup": {"duration": 0.00017743599999997528, "outcome": "passed"}, "call": {"duration": 0.00015139099999972316, "outcome": "passed"}, "teardown": {"duration": 0.0001626610000000639, "outcome": "passed"}}]}, {"created": 1733299825.5843632, "duration": 0.04791903495788574, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 6, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_Occ_first_and_last_same_char", "type": "Function", "lineno": 26}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00033256700000006134, "outcome": "passed"}, "call": {"duration": 0.00047735100000068087, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 7, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 7, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:7: AssertionError"}, "teardown": {"duration": 0.00023781100000075384, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 8, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018948899999937652, "outcome": "passed"}, "call": {"duration": 0.0001942239999994655, "outcome": "passed"}, "teardown": {"duration": 0.00014858000000028682, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016126299999985605, "outcome": "passed"}, "call": {"duration": 0.00014388199999970652, "outcome": "passed"}, "teardown": {"duration": 0.0001422179999996942, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017288799999981563, "outcome": "passed"}, "call": {"duration": 0.0003644930000001878, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 16, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 16, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:16: AssertionError"}, "teardown": {"duration": 0.00018139900000058162, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 17, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017099899999983847, "outcome": "passed"}, "call": {"duration": 0.00015524600000027533, "outcome": "passed"}, "teardown": {"duration": 0.00013333299999995774, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 20, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00016258699999927018, "outcome": "passed"}, "call": {"duration": 0.00015617100000042683, "outcome": "passed"}, "teardown": {"duration": 0.0001312630000001036, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 23, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015047100000042946, "outcome": "passed"}, "call": {"duration": 0.00013997799999998506, "outcome": "passed"}, "teardown": {"duration": 0.00014143400000055095, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_first_and_last_same_char", "lineno": 26, "outcome": "passed", "keywords": ["test_remove_Occ_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00014734500000024298, "outcome": "passed"}, "call": {"duration": 0.00013989699999950034, "outcome": "passed"}, "teardown": {"duration": 0.00015848399999995877, "outcome": "passed"}}]}, {"created": 1733299824.9505475, "duration": 0.05563497543334961, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 7, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_multiple_first_occurrences", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_multiple_last_occurrences", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_single_character", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_first_and_last_of_single_character", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_remove_empty_string", "type": "Function", "lineno": 29}, {"nodeid": "run.py::test_remove_first_of_empty_string", "type": "Function", "lineno": 32}, {"nodeid": "run.py::test_remove_last_of_empty_string", "type": "Function", "lineno": 35}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0004012179999994814, "outcome": "passed"}, "call": {"duration": 0.0004149380000004754, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 7, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 7, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:7: AssertionError"}, "teardown": {"duration": 0.0002836460000006369, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 8, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019670999999998884, "outcome": "passed"}, "call": {"duration": 0.00018099399999993437, "outcome": "passed"}, "teardown": {"duration": 0.00014555999999998903, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00015809900000007815, "outcome": "passed"}, "call": {"duration": 0.00014454599999957907, "outcome": "passed"}, "teardown": {"duration": 0.0001414280000000545, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015201200000003467, "outcome": "passed"}, "call": {"duration": 0.0003856600000000654, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 16, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 16, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:16: AssertionError"}, "teardown": {"duration": 0.00018214399999916253, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_first_occurrences", "lineno": 17, "outcome": "failed", "keywords": ["test_remove_multiple_first_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017511099999989455, "outcome": "passed"}, "call": {"duration": 0.00035311600000031973, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 19, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 19, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_first_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:19: AssertionError"}, "teardown": {"duration": 0.00018535800000041291, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_last_occurrences", "lineno": 20, "outcome": "failed", "keywords": ["test_remove_multiple_last_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017007300000049241, "outcome": "passed"}, "call": {"duration": 0.0003101220000001348, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 22, "message": "AssertionError: assert 'misis' == 'mippi'\n  \n  - mippi\n  + misis"}, "traceback": [{"path": "run.py", "lineno": 22, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_last_occurrences():\n>       assert remove_Occ(\"mississippi\", \"s\") == \"mippi\"\nE       AssertionError: assert 'misis' == 'mippi'\nE         \nE         - mippi\nE         + misis\n\nrun.py:22: AssertionError"}, "teardown": {"duration": 0.00017610599999962062, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_single_character", "lineno": 23, "outcome": "passed", "keywords": ["test_remove_single_character", "run.py", "test", ""], "setup": {"duration": 0.00016908799999981738, "outcome": "passed"}, "call": {"duration": 0.0001603059999997214, "outcome": "passed"}, "teardown": {"duration": 0.0001342239999999606, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_of_single_character", "lineno": 26, "outcome": "passed", "keywords": ["test_remove_first_and_last_of_single_character", "run.py", "test", ""], "setup": {"duration": 0.00015176099999969495, "outcome": "passed"}, "call": {"duration": 0.00014119500000031593, "outcome": "passed"}, "teardown": {"duration": 0.00013859500000013014, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_empty_string", "lineno": 29, "outcome": "passed", "keywords": ["test_remove_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015865299999973104, "outcome": "passed"}, "call": {"duration": 0.00015698099999994497, "outcome": "passed"}, "teardown": {"duration": 0.00012932699999979036, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_of_empty_string", "lineno": 32, "outcome": "passed", "keywords": ["test_remove_first_of_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001529680000000866, "outcome": "passed"}, "call": {"duration": 0.00013925900000000269, "outcome": "passed"}, "teardown": {"duration": 0.00012697500000058426, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_of_empty_string", "lineno": 35, "outcome": "passed", "keywords": ["test_remove_last_of_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001619129999994584, "outcome": "passed"}, "call": {"duration": 0.00014436699999986757, "outcome": "passed"}, "teardown": {"duration": 0.00016137799999960123, "outcome": "passed"}}]}, {"created": 1733299825.031046, "duration": 0.04225325584411621, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 1, "passed": 4, "total": 5, "collected": 5}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test1", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test2", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test3", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test4", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test5", "type": "Function", "lineno": 18}]}], "tests": [{"nodeid": "run.py::test1", "lineno": 6, "outcome": "failed", "keywords": ["test1", "run.py", "test", ""], "setup": {"duration": 0.0003393279999999166, "outcome": "passed"}, "call": {"duration": 0.00048365700000019274, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test1():\n>       assert remove_Occ(\"hello\",\"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020891800000022442, "outcome": "passed"}}, {"nodeid": "run.py::test2", "lineno": 9, "outcome": "passed", "keywords": ["test2", "run.py", "test", ""], "setup": {"duration": 0.00019324600000025782, "outcome": "passed"}, "call": {"duration": 0.00017565700000066187, "outcome": "passed"}, "teardown": {"duration": 0.00013776000000031985, "outcome": "passed"}}, {"nodeid": "run.py::test3", "lineno": 12, "outcome": "passed", "keywords": ["test3", "run.py", "test", ""], "setup": {"duration": 0.0001568309999999684, "outcome": "passed"}, "call": {"duration": 0.00014669000000022692, "outcome": "passed"}, "teardown": {"duration": 0.00013269100000012912, "outcome": "passed"}}, {"nodeid": "run.py::test4", "lineno": 15, "outcome": "passed", "keywords": ["test4", "run.py", "test", ""], "setup": {"duration": 0.00014906000000003417, "outcome": "passed"}, "call": {"duration": 0.00014207400000021408, "outcome": "passed"}, "teardown": {"duration": 0.00012587000000063853, "outcome": "passed"}}, {"nodeid": "run.py::test5", "lineno": 18, "outcome": "passed", "keywords": ["test5", "run.py", "test", ""], "setup": {"duration": 0.00015161700000021483, "outcome": "passed"}, "call": {"duration": 0.0001609079999997931, "outcome": "passed"}, "teardown": {"duration": 0.00016277699999989181, "outcome": "passed"}}]}, {"created": 1733299825.1640506, "duration": 0.055768728256225586, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 3, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_case_sensitivity", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00031260600000049266, "outcome": "passed"}, "call": {"duration": 0.0004590670000004238, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00023312800000052647, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001963689999993079, "outcome": "passed"}, "call": {"duration": 0.00017536599999967706, "outcome": "passed"}, "teardown": {"duration": 0.0001504720000005122, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016109099999983556, "outcome": "passed"}, "call": {"duration": 0.0001543929999998639, "outcome": "passed"}, "teardown": {"duration": 0.0001342759999998222, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.0001581329999993386, "outcome": "passed"}, "call": {"duration": 0.0003338030000001879, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'a' == 'ale'\n  \n  - ale\n  + a"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"apple\", \"p\") == \"ale\"\nE       AssertionError: assert 'a' == 'ale'\nE         \nE         - ale\nE         + a\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.0001762919999999113, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016997200000012924, "outcome": "passed"}, "call": {"duration": 0.00015398599999993934, "outcome": "passed"}, "teardown": {"duration": 0.00013809300000033886, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001563000000004422, "outcome": "passed"}, "call": {"duration": 0.0003430489999995956, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.0001660819999997898, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_case_sensitivity", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_case_sensitivity", "run.py", "test", ""], "setup": {"duration": 0.0001637269999994473, "outcome": "passed"}, "call": {"duration": 0.0003133019999994602, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'CaeSen' == 'CaseSensitve'\n  \n  - CaseSensitve\n  + CaeSen"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_case_sensitivity():\n>       assert remove_Occ(\"CaseSensitive\", \"s\") == \"CaseSensitve\"\nE       AssertionError: assert 'CaeSen' == 'CaseSensitve'\nE         \nE         - CaseSensitve\nE         + CaeSen\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00016908699999973464, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017515399999989967, "outcome": "passed"}, "call": {"duration": 0.0003488889999996303, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'helloworld' == 'hello@orld'\n  \n  - hello@orld\n  ?      ^\n  + helloworld\n  ?      ^"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"hello@world\", \"@\") == \"hello@orld\"\nE       AssertionError: assert 'helloworld' == 'hello@orld'\nE         \nE         - hello@orld\nE         ?      ^\nE         + helloworld\nE         ?      ^\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00018107100000008813, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016601600000054617, "outcome": "passed"}, "call": {"duration": 0.0003321789999999325, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert '!!hello!!' == 'hello!!!'\n  \n  - hello!!!\n  ?        -\n  + !!hello!!\n  ? ++"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_special_characters():\n>       assert remove_Occ(\"!!!hello!!!\", \"!\") == \"hello!!!\"\nE       AssertionError: assert '!!hello!!' == 'hello!!!'\nE         \nE         - hello!!!\nE         ?        -\nE         + !!hello!!\nE         ? ++\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00020011099999983628, "outcome": "passed"}}]}, {"created": 1733299825.1344461, "duration": 0.05463767051696777, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_first_and_last", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_single_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_case_insensitive", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_digit", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.000306558999999762, "outcome": "passed"}, "call": {"duration": 0.0004549600000003373, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020870700000008569, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001841399999999993, "outcome": "passed"}, "call": {"duration": 0.00017888600000004473, "outcome": "passed"}, "teardown": {"duration": 0.00013662299999994687, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015369400000020406, "outcome": "passed"}, "call": {"duration": 0.00015036899999998354, "outcome": "passed"}, "teardown": {"duration": 0.00012601400000011864, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_first_and_last", "run.py", "test", ""], "setup": {"duration": 0.00014703599999998929, "outcome": "passed"}, "call": {"duration": 0.0003330470000002528, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017676600000005038, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char", "lineno": 18, "outcome": "passed", "keywords": ["test_single_char", "run.py", "test", ""], "setup": {"duration": 0.00017907000000016993, "outcome": "passed"}, "call": {"duration": 0.00015634599999980736, "outcome": "passed"}, "teardown": {"duration": 0.00014612500000010797, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015517699999989532, "outcome": "passed"}, "call": {"duration": 0.00016597300000009696, "outcome": "passed"}, "teardown": {"duration": 0.00012798699999994056, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001460880000001552, "outcome": "passed"}, "call": {"duration": 0.0003410580000000607, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017273500000003494, "outcome": "passed"}}, {"nodeid": "run.py::test_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016473699999997038, "outcome": "passed"}, "call": {"duration": 0.00034456300000007545, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '!#$hello' == '!$hello#'\n  \n  - !$hello#\n  ?        -\n  + !#$hello\n  ?  +"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_special_characters():\n>       assert remove_Occ(\"!@#$hello@#\", \"@\") == \"!$hello#\"\nE       AssertionError: assert '!#$hello' == '!$hello#'\nE         \nE         - !$hello#\nE         ?        -\nE         + !#$hello\nE         ?  +\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017315299999998146, "outcome": "passed"}}, {"nodeid": "run.py::test_case_insensitive", "lineno": 30, "outcome": "failed", "keywords": ["test_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00016788599999983944, "outcome": "passed"}, "call": {"duration": 0.0003435710000001535, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'HeloWor' == 'HeoWorld'\n  \n  - HeoWorld\n  ?       --\n  + HeloWor\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_case_insensitive():\n>       assert remove_Occ(\"HelloWorld\", \"l\") == \"HeoWorld\"\nE       AssertionError: assert 'HeloWor' == 'HeoWorld'\nE         \nE         - HeoWorld\nE         ?       --\nE         + HeloWor\nE         ?   +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00018469600000026176, "outcome": "passed"}}, {"nodeid": "run.py::test_digit", "lineno": 33, "outcome": "passed", "keywords": ["test_digit", "run.py", "test", ""], "setup": {"duration": 0.00017270400000013453, "outcome": "passed"}, "call": {"duration": 0.00015161699999977074, "outcome": "passed"}, "teardown": {"duration": 0.00016133000000007058, "outcome": "passed"}}]}, {"created": 1733299826.7416139, "duration": 0.0520632266998291, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 7, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_multiple_removals", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_space_char", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_in_string", "run.py", "test", ""], "setup": {"duration": 0.0003248859999995801, "outcome": "passed"}, "call": {"duration": 0.0004493180000002539, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heloo'\n  \n  - heloo\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_in_string():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\nE       AssertionError: assert 'he' == 'heloo'\nE         \nE         - heloo\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00018914999999974924, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00017844000000000193, "outcome": "passed"}, "call": {"duration": 0.00019847899999980712, "outcome": "passed"}, "teardown": {"duration": 0.00014199199999964662, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00015332500000031501, "outcome": "passed"}, "call": {"duration": 0.00015255200000030555, "outcome": "passed"}, "teardown": {"duration": 0.00013111600000037527, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015056099999988248, "outcome": "passed"}, "call": {"duration": 0.00013908100000037393, "outcome": "passed"}, "teardown": {"duration": 0.0001379659999996008, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_with_repeated_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00015510800000040348, "outcome": "passed"}, "call": {"duration": 0.0001481500000002356, "outcome": "passed"}, "teardown": {"duration": 0.00013282399999958727, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00015942899999998872, "outcome": "passed"}, "call": {"duration": 0.000354482999999739, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'bookkeepe' == 'bookkeepke'\n  \n  - bookkeepke\n  ?         -\n  + bookkeepe"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_char_at_end():\n>       assert remove_Occ(\"bookkeeper\", \"r\") == \"bookkeepke\"\nE       AssertionError: assert 'bookkeepe' == 'bookkeepke'\nE         \nE         - bookkeepke\nE         ?         -\nE         + bookkeepe\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017533699999994212, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_removals", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_removals", "run.py", "test", ""], "setup": {"duration": 0.00016795199999997124, "outcome": "passed"}, "call": {"duration": 0.0003545950000001241, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_removals():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017249000000063575, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017680599999980728, "outcome": "passed"}, "call": {"duration": 0.00015176599999922047, "outcome": "passed"}, "teardown": {"duration": 0.00013269899999990287, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00016157499999991387, "outcome": "passed"}, "call": {"duration": 0.00015725200000016315, "outcome": "passed"}, "teardown": {"duration": 0.00013057300000074434, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_space_char", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_with_space_char", "run.py", "test", ""], "setup": {"duration": 0.0001496320000002882, "outcome": "passed"}, "call": {"duration": 0.00014301500000080125, "outcome": "passed"}, "teardown": {"duration": 0.0001672429999999281, "outcome": "passed"}}]}, {"created": 1733299824.6968493, "duration": 0.04790449142456055, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 6, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_single_character", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_char_not_in_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_first_and_last_same", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00031425700000031753, "outcome": "passed"}, "call": {"duration": 0.00048383699999998697, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002424699999998836, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00020683099999985188, "outcome": "passed"}, "call": {"duration": 0.00019416599999999562, "outcome": "passed"}, "teardown": {"duration": 0.00014603199999996264, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016235799999986256, "outcome": "passed"}, "call": {"duration": 0.00015952700000010367, "outcome": "passed"}, "teardown": {"duration": 0.00013082800000052686, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015231599999943057, "outcome": "passed"}, "call": {"duration": 0.0004004330000002554, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00018293999999929866, "outcome": "passed"}}, {"nodeid": "run.py::test_single_character", "lineno": 18, "outcome": "passed", "keywords": ["test_single_character", "run.py", "test", ""], "setup": {"duration": 0.00017641099999998744, "outcome": "passed"}, "call": {"duration": 0.00015506400000031562, "outcome": "passed"}, "teardown": {"duration": 0.00013978900000033434, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017467399999926414, "outcome": "passed"}, "call": {"duration": 0.00015061900000024053, "outcome": "passed"}, "teardown": {"duration": 0.00013110200000010508, "outcome": "passed"}}, {"nodeid": "run.py::test_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015194100000037736, "outcome": "passed"}, "call": {"duration": 0.00015520100000010473, "outcome": "passed"}, "teardown": {"duration": 0.0001293159999997684, "outcome": "passed"}}, {"nodeid": "run.py::test_first_and_last_same", "lineno": 27, "outcome": "passed", "keywords": ["test_first_and_last_same", "run.py", "test", ""], "setup": {"duration": 0.00016780700000040838, "outcome": "passed"}, "call": {"duration": 0.0001428180000004886, "outcome": "passed"}, "teardown": {"duration": 0.00016983699999961743, "outcome": "passed"}}]}, {"created": 1733299825.8101199, "duration": 0.04645395278930664, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 5, "total": 7, "collected": 7}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 24}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003187669999999976, "outcome": "passed"}, "call": {"duration": 0.00042752599999973384, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020739700000005357, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018143000000003795, "outcome": "passed"}, "call": {"duration": 0.00037498199999985715, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00018903899999989093, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001735480000002454, "outcome": "passed"}, "call": {"duration": 0.00015395500000003892, "outcome": "passed"}, "teardown": {"duration": 0.0001483389999998863, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.0001658369999999465, "outcome": "passed"}, "call": {"duration": 0.00014701600000011084, "outcome": "passed"}, "teardown": {"duration": 0.0001316170000000838, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001598060000000956, "outcome": "passed"}, "call": {"duration": 0.00014234899999987505, "outcome": "passed"}, "teardown": {"duration": 0.00012843999999967437, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00014828900000019019, "outcome": "passed"}, "call": {"duration": 0.0001471660000000874, "outcome": "passed"}, "teardown": {"duration": 0.00012813499999975164, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00014362099999987166, "outcome": "passed"}, "call": {"duration": 0.0001566140000002214, "outcome": "passed"}, "teardown": {"duration": 0.00016594300000027928, "outcome": "passed"}}]}, {"created": 1733299826.282843, "duration": 0.05135750770568848, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 6, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_is_first", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_char_is_last", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0004395069999998391, "outcome": "passed"}, "call": {"duration": 0.0005645379999998923, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00022340300000012192, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019025900000002594, "outcome": "passed"}, "call": {"duration": 0.00018208299999988853, "outcome": "passed"}, "teardown": {"duration": 0.00014026799999999895, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.0001613159999998004, "outcome": "passed"}, "call": {"duration": 0.00016740899999989622, "outcome": "passed"}, "teardown": {"duration": 0.0001352529999998353, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.000154943000000074, "outcome": "passed"}, "call": {"duration": 0.00014363600000022458, "outcome": "passed"}, "teardown": {"duration": 0.00013934100000012606, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00016701500000015912, "outcome": "passed"}, "call": {"duration": 0.0001402010000002285, "outcome": "passed"}, "teardown": {"duration": 0.00012729000000000212, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015159300000000542, "outcome": "passed"}, "call": {"duration": 0.0001405329999997207, "outcome": "passed"}, "teardown": {"duration": 0.0001278059999996195, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_is_first", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_is_first", "run.py", "test", ""], "setup": {"duration": 0.00015484600000004178, "outcome": "passed"}, "call": {"duration": 0.00016620900000008376, "outcome": "passed"}, "teardown": {"duration": 0.00012957700000004735, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_is_last", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_char_is_last", "run.py", "test", ""], "setup": {"duration": 0.00015097500000038622, "outcome": "passed"}, "call": {"duration": 0.00036527800000030197, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'appl' == 'app'\n  \n  - app\n  + appl\n  ?    +"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_char_is_last():\n>       assert remove_Occ(\"apple\", \"e\") == \"app\"\nE       AssertionError: assert 'appl' == 'app'\nE         \nE         - app\nE         + appl\nE         ?    +\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017968899999987187, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00017448299999989203, "outcome": "passed"}, "call": {"duration": 0.0003467580000000581, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.0002146700000000834, "outcome": "passed"}}]}, {"created": 1733299828.7953196, "duration": 0.04523897171020508, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 5, "total": 7, "collected": 7}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 24}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00030338200000024074, "outcome": "passed"}, "call": {"duration": 0.0004102680000004355, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00019513599999942954, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017652000000012436, "outcome": "passed"}, "call": {"duration": 0.00017166900000020746, "outcome": "passed"}, "teardown": {"duration": 0.00013697400000012294, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015588200000049568, "outcome": "passed"}, "call": {"duration": 0.00014762200000006942, "outcome": "passed"}, "teardown": {"duration": 0.00014287499999987574, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015633200000042535, "outcome": "passed"}, "call": {"duration": 0.00035151700000035646, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017752100000034687, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00016880699999965998, "outcome": "passed"}, "call": {"duration": 0.0001626730000001686, "outcome": "passed"}, "teardown": {"duration": 0.00015138299999950533, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015607400000039462, "outcome": "passed"}, "call": {"duration": 0.00015986200000028816, "outcome": "passed"}, "teardown": {"duration": 0.00014482399999948825, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015241799999987649, "outcome": "passed"}, "call": {"duration": 0.00014404099999953957, "outcome": "passed"}, "teardown": {"duration": 0.00017569799999961333, "outcome": "passed"}}]}, {"created": 1733299826.1918921, "duration": 0.05797982215881348, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 6, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_char_at_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_char_at_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_first_and_last_of_same_char", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_single_char_string", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_single_char_string_not_present", "type": "Function", "lineno": 36}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00041019699999989, "outcome": "passed"}, "call": {"duration": 0.00039735699999976504, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heloo'\n  \n  - heloo\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\nE       AssertionError: assert 'he' == 'heloo'\nE         \nE         - heloo\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00019721699999974973, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017624999999998892, "outcome": "passed"}, "call": {"duration": 0.00017604999999987214, "outcome": "passed"}, "teardown": {"duration": 0.00013701600000004532, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.000162627999999998, "outcome": "passed"}, "call": {"duration": 0.0001590440000001081, "outcome": "passed"}, "teardown": {"duration": 0.0001315410000000128, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00014792900000015763, "outcome": "passed"}, "call": {"duration": 0.0003848080000001808, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017534699999988135, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_start", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00018111700000034148, "outcome": "passed"}, "call": {"duration": 0.00015157300000012697, "outcome": "passed"}, "teardown": {"duration": 0.00013988300000011833, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_end", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.0001562669999999322, "outcome": "passed"}, "call": {"duration": 0.00033757400000000715, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'appl' == 'apppl'\n  \n  - apppl\n  ?    -\n  + appl"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_char_at_end():\n>       assert remove_Occ(\"apple\", \"e\") == \"apppl\"\nE       AssertionError: assert 'appl' == 'apppl'\nE         \nE         - apppl\nE         ?    -\nE         + appl\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017398100000010075, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016783499999961649, "outcome": "passed"}, "call": {"duration": 0.0003317119999999285, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.0001751359999997426, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_of_same_char", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_first_and_last_of_same_char", "run.py", "test", ""], "setup": {"duration": 0.0001656479999998517, "outcome": "passed"}, "call": {"duration": 0.0003162119999999824, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'boo' == 'bookeeper'\n  \n  - bookeeper\n  + boo"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_of_same_char():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'boo' == 'bookeeper'\nE         \nE         - bookeeper\nE         + boo\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017530499999995897, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 30, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001663609999997817, "outcome": "passed"}, "call": {"duration": 0.0001461019999999813, "outcome": "passed"}, "teardown": {"duration": 0.0001324450000002031, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string", "lineno": 33, "outcome": "passed", "keywords": ["test_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.0001513710000002888, "outcome": "passed"}, "call": {"duration": 0.00014081300000023944, "outcome": "passed"}, "teardown": {"duration": 0.00013557899999971923, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string_not_present", "lineno": 36, "outcome": "passed", "keywords": ["test_single_char_string_not_present", "run.py", "test", ""], "setup": {"duration": 0.00015173500000020823, "outcome": "passed"}, "call": {"duration": 0.0001396839999996402, "outcome": "passed"}, "teardown": {"duration": 0.00016008299999992204, "outcome": "passed"}}]}, {"created": 1733299824.672423, "duration": 0.057734012603759766, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_unicode_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00037967000000005413, "outcome": "passed"}, "call": {"duration": 0.00046895199999985593, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00023560000000033554, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00021273900000018386, "outcome": "passed"}, "call": {"duration": 0.0004135590000000633, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.0001865489999999248, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017400900000019703, "outcome": "passed"}, "call": {"duration": 0.0001672949999997897, "outcome": "passed"}, "teardown": {"duration": 0.00015449400000022706, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00016140399999997612, "outcome": "passed"}, "call": {"duration": 0.00014682699999957194, "outcome": "passed"}, "teardown": {"duration": 0.0001336479999998197, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015112700000008417, "outcome": "passed"}, "call": {"duration": 0.00014128100000032617, "outcome": "passed"}, "teardown": {"duration": 0.00012814200000033082, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015083400000026614, "outcome": "passed"}, "call": {"duration": 0.00013968199999991882, "outcome": "passed"}, "teardown": {"duration": 0.00012663700000015155, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015875999999970247, "outcome": "passed"}, "call": {"duration": 0.00035513599999958956, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00018459899999978546, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017032899999991358, "outcome": "passed"}, "call": {"duration": 0.0003336970000002992, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '##$' == '##$$#'\n  \n  - ##$$#\n  ?    --\n  + ##$"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_special_characters():\n>       assert remove_Occ(\"#$#$$#\", \"$\") == \"##$$#\"\nE       AssertionError: assert '##$' == '##$$#'\nE         \nE         - ##$$#\nE         ?    --\nE         + ##$\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00019065799999973265, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.0001765329999998677, "outcome": "passed"}, "call": {"duration": 0.00033854100000008103, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'Bnan' == 'Bnana'\n  \n  - Bnana\n  ?     -\n  + Bnan"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_case_insensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnana\"\nE       AssertionError: assert 'Bnan' == 'Bnana'\nE         \nE         - Bnana\nE         ?     -\nE         + Bnan\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017605099999995488, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_unicode_characters", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_unicode_characters", "run.py", "test", ""], "setup": {"duration": 0.00016906400000005206, "outcome": "passed"}, "call": {"duration": 0.00017619799999968322, "outcome": "passed"}, "teardown": {"duration": 0.0001710749999999095, "outcome": "passed"}}]}, {"created": 1733299825.0082896, "duration": 0.04729771614074707, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 6, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_first_and_last_same_char", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003190389999998544, "outcome": "passed"}, "call": {"duration": 0.00048546900000001614, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020201699999988776, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018238999999997674, "outcome": "passed"}, "call": {"duration": 0.0001892929999995907, "outcome": "passed"}, "teardown": {"duration": 0.00014288999999978458, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015831799999999063, "outcome": "passed"}, "call": {"duration": 0.00014546400000003956, "outcome": "passed"}, "teardown": {"duration": 0.0001682719999998028, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016130300000005704, "outcome": "passed"}, "call": {"duration": 0.00036148099999966377, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017496999999977447, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016732499999960737, "outcome": "passed"}, "call": {"duration": 0.00015315299999985044, "outcome": "passed"}, "teardown": {"duration": 0.00013233299999981796, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.0001548109999998104, "outcome": "passed"}, "call": {"duration": 0.0001418499999998879, "outcome": "passed"}, "teardown": {"duration": 0.00012918800000027986, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015285700000022828, "outcome": "passed"}, "call": {"duration": 0.0001442830000000228, "outcome": "passed"}, "teardown": {"duration": 0.0001361539999997774, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_first_and_last_same_char", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00015288599999996322, "outcome": "passed"}, "call": {"duration": 0.00014004699999992098, "outcome": "passed"}, "teardown": {"duration": 0.00015341599999985078, "outcome": "passed"}}]}, {"created": 1733299825.4845712, "duration": 0.05629563331604004, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 7, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_multiple_first_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_multiple_last_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_single_character", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_first_and_last_of_single_character", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_empty_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_first_of_empty_string", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_last_of_empty_string", "type": "Function", "lineno": 36}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0004032999999998843, "outcome": "passed"}, "call": {"duration": 0.00044857100000017525, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00031680499999975353, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00022652300000025605, "outcome": "passed"}, "call": {"duration": 0.00019456299999998095, "outcome": "passed"}, "teardown": {"duration": 0.00014327799999991342, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00015982799999969544, "outcome": "passed"}, "call": {"duration": 0.00014877399999990715, "outcome": "passed"}, "teardown": {"duration": 0.00013589299999994253, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001606530000000106, "outcome": "passed"}, "call": {"duration": 0.00040136400000001515, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00018078400000032246, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_first_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_multiple_first_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016744199999996212, "outcome": "passed"}, "call": {"duration": 0.00036533200000032906, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_first_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00017467900000012193, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_last_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_multiple_last_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016891900000004512, "outcome": "passed"}, "call": {"duration": 0.00031087599999990445, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'misis' == 'mippi'\n  \n  - mippi\n  + misis"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_last_occurrences():\n>       assert remove_Occ(\"mississippi\", \"s\") == \"mippi\"\nE       AssertionError: assert 'misis' == 'mippi'\nE         \nE         - mippi\nE         + misis\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00016923600000007255, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_single_character", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_single_character", "run.py", "test", ""], "setup": {"duration": 0.00016730100000028614, "outcome": "passed"}, "call": {"duration": 0.0001503229999997302, "outcome": "passed"}, "teardown": {"duration": 0.0001357840000002497, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_of_single_character", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_first_and_last_of_single_character", "run.py", "test", ""], "setup": {"duration": 0.0001554790000000139, "outcome": "passed"}, "call": {"duration": 0.00014359999999991047, "outcome": "passed"}, "teardown": {"duration": 0.00012753099999995854, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_empty_string", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001566610000001134, "outcome": "passed"}, "call": {"duration": 0.00015624399999980554, "outcome": "passed"}, "teardown": {"duration": 0.00012863300000010014, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_of_empty_string", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_first_of_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015799299999974536, "outcome": "passed"}, "call": {"duration": 0.00015621399999998786, "outcome": "passed"}, "teardown": {"duration": 0.00012701700000006255, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_of_empty_string", "lineno": 36, "outcome": "passed", "keywords": ["test_remove_last_of_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00014714799999993033, "outcome": "passed"}, "call": {"duration": 0.00015020699999990228, "outcome": "passed"}, "teardown": {"duration": 0.00016597300000009696, "outcome": "passed"}}]}, {"created": 1733299825.227897, "duration": 0.04241538047790527, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 1, "passed": 4, "total": 5, "collected": 5}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test1", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test2", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test3", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test4", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test5", "type": "Function", "lineno": 18}]}], "tests": [{"nodeid": "run.py::test1", "lineno": 6, "outcome": "failed", "keywords": ["test1", "run.py", "test", ""], "setup": {"duration": 0.00033914200000007, "outcome": "passed"}, "call": {"duration": 0.0005041800000000762, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test1():\n>       assert remove_Occ(\"hello\",\"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00019748699999988517, "outcome": "passed"}}, {"nodeid": "run.py::test2", "lineno": 9, "outcome": "passed", "keywords": ["test2", "run.py", "test", ""], "setup": {"duration": 0.0001838019999995666, "outcome": "passed"}, "call": {"duration": 0.0001915770000002759, "outcome": "passed"}, "teardown": {"duration": 0.00014892600000004919, "outcome": "passed"}}, {"nodeid": "run.py::test3", "lineno": 12, "outcome": "passed", "keywords": ["test3", "run.py", "test", ""], "setup": {"duration": 0.00015992799999997587, "outcome": "passed"}, "call": {"duration": 0.00015547299999996156, "outcome": "passed"}, "teardown": {"duration": 0.00013054400000012123, "outcome": "passed"}}, {"nodeid": "run.py::test4", "lineno": 15, "outcome": "passed", "keywords": ["test4", "run.py", "test", ""], "setup": {"duration": 0.0001502429999997723, "outcome": "passed"}, "call": {"duration": 0.0001424919999997165, "outcome": "passed"}, "teardown": {"duration": 0.00013445600000006053, "outcome": "passed"}}, {"nodeid": "run.py::test5", "lineno": 18, "outcome": "passed", "keywords": ["test5", "run.py", "test", ""], "setup": {"duration": 0.00014908599999996497, "outcome": "passed"}, "call": {"duration": 0.0001369400000004184, "outcome": "passed"}, "teardown": {"duration": 0.000155066000000037, "outcome": "passed"}}]}, {"created": 1733299825.4886217, "duration": 0.0878458023071289, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 3, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_case_sensitivity", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0006798020000000626, "outcome": "passed"}, "call": {"duration": 0.0008620490000001979, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0005078570000001115, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00033079499999999484, "outcome": "passed"}, "call": {"duration": 0.0002997170000003102, "outcome": "passed"}, "teardown": {"duration": 0.00020542099999998342, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002561789999999675, "outcome": "passed"}, "call": {"duration": 0.00023499799999981974, "outcome": "passed"}, "teardown": {"duration": 0.000256263999999895, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.0002619079999996998, "outcome": "passed"}, "call": {"duration": 0.0005641079999998411, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'a' == 'ale'\n  \n  - ale\n  + a"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"apple\", \"p\") == \"ale\"\nE       AssertionError: assert 'a' == 'ale'\nE         \nE         - ale\nE         + a\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.0002673109999999923, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002652289999995894, "outcome": "passed"}, "call": {"duration": 0.0002402590000003535, "outcome": "passed"}, "teardown": {"duration": 0.00023381899999996847, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0002830680000003305, "outcome": "passed"}, "call": {"duration": 0.000557321000000055, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.0002583050000000142, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_case_sensitivity", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_case_sensitivity", "run.py", "test", ""], "setup": {"duration": 0.00026722999999995167, "outcome": "passed"}, "call": {"duration": 0.0004833190000002041, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'CaeSen' == 'CaseSensitve'\n  \n  - CaseSensitve\n  + CaeSen"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_case_sensitivity():\n>       assert remove_Occ(\"CaseSensitive\", \"s\") == \"CaseSensitve\"\nE       AssertionError: assert 'CaeSen' == 'CaseSensitve'\nE         \nE         - CaseSensitve\nE         + CaeSen\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.0002938179999998347, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0002638209999998864, "outcome": "passed"}, "call": {"duration": 0.0006207080000000254, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'helloworld' == 'hello@orld'\n  \n  - hello@orld\n  ?      ^\n  + helloworld\n  ?      ^"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"hello@world\", \"@\") == \"hello@orld\"\nE       AssertionError: assert 'helloworld' == 'hello@orld'\nE         \nE         - hello@orld\nE         ?      ^\nE         + helloworld\nE         ?      ^\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00030017299999984814, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0002630090000002028, "outcome": "passed"}, "call": {"duration": 0.0005378019999997541, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert '!!hello!!' == 'hello!!!'\n  \n  - hello!!!\n  ?        -\n  + !!hello!!\n  ? ++"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_special_characters():\n>       assert remove_Occ(\"!!!hello!!!\", \"!\") == \"hello!!!\"\nE       AssertionError: assert '!!hello!!' == 'hello!!!'\nE         \nE         - hello!!!\nE         ?        -\nE         + !!hello!!\nE         ? ++\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00032514200000033355, "outcome": "passed"}}]}, {"created": 1733299826.2854695, "duration": 0.05487060546875, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_first_and_last", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_single_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_case_insensitive", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_digit", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003318670000000967, "outcome": "passed"}, "call": {"duration": 0.0005101549999999566, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002016510000000249, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001894490000000637, "outcome": "passed"}, "call": {"duration": 0.00016444999999998267, "outcome": "passed"}, "teardown": {"duration": 0.00013624900000008822, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016294900000013435, "outcome": "passed"}, "call": {"duration": 0.00014857599999995585, "outcome": "passed"}, "teardown": {"duration": 0.00012876000000017207, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_first_and_last", "run.py", "test", ""], "setup": {"duration": 0.0001524010000000242, "outcome": "passed"}, "call": {"duration": 0.00035007099999995184, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00018817200000009748, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char", "lineno": 18, "outcome": "passed", "keywords": ["test_single_char", "run.py", "test", ""], "setup": {"duration": 0.00017324500000004406, "outcome": "passed"}, "call": {"duration": 0.00016079900000010028, "outcome": "passed"}, "teardown": {"duration": 0.00013965499999990527, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016076999999992125, "outcome": "passed"}, "call": {"duration": 0.00014717499999994388, "outcome": "passed"}, "teardown": {"duration": 0.00012845200000000112, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016091900000003712, "outcome": "passed"}, "call": {"duration": 0.000338435999999831, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.0001888920000001626, "outcome": "passed"}}, {"nodeid": "run.py::test_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017229699999998793, "outcome": "passed"}, "call": {"duration": 0.0003482759999999807, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '!#$hello' == '!$hello#'\n  \n  - !$hello#\n  ?        -\n  + !#$hello\n  ?  +"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_special_characters():\n>       assert remove_Occ(\"!@#$hello@#\", \"@\") == \"!$hello#\"\nE       AssertionError: assert '!#$hello' == '!$hello#'\nE         \nE         - !$hello#\nE         ?        -\nE         + !#$hello\nE         ?  +\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0001790669999999217, "outcome": "passed"}}, {"nodeid": "run.py::test_case_insensitive", "lineno": 30, "outcome": "failed", "keywords": ["test_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00017097599999993385, "outcome": "passed"}, "call": {"duration": 0.0003607729999999254, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'HeloWor' == 'HeoWorld'\n  \n  - HeoWorld\n  ?       --\n  + HeloWor\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_case_insensitive():\n>       assert remove_Occ(\"HelloWorld\", \"l\") == \"HeoWorld\"\nE       AssertionError: assert 'HeloWor' == 'HeoWorld'\nE         \nE         - HeoWorld\nE         ?       --\nE         + HeloWor\nE         ?   +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00018071799999996863, "outcome": "passed"}}, {"nodeid": "run.py::test_digit", "lineno": 33, "outcome": "passed", "keywords": ["test_digit", "run.py", "test", ""], "setup": {"duration": 0.00017718200000005346, "outcome": "passed"}, "call": {"duration": 0.00015838999999995274, "outcome": "passed"}, "teardown": {"duration": 0.00017739199999988742, "outcome": "passed"}}]}, {"created": 1733299825.0415428, "duration": 0.05146908760070801, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 7, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_multiple_removals", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_space_char", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_in_string", "run.py", "test", ""], "setup": {"duration": 0.0003112430000000721, "outcome": "passed"}, "call": {"duration": 0.00042325099999995786, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heloo'\n  \n  - heloo\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_in_string():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\nE       AssertionError: assert 'he' == 'heloo'\nE         \nE         - heloo\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020040500000018113, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00018772600000005468, "outcome": "passed"}, "call": {"duration": 0.0001929099999999906, "outcome": "passed"}, "teardown": {"duration": 0.00014040700000039763, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00017446499999973497, "outcome": "passed"}, "call": {"duration": 0.00015127899999978212, "outcome": "passed"}, "teardown": {"duration": 0.00013143900000001096, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015293800000026891, "outcome": "passed"}, "call": {"duration": 0.00015355499999980537, "outcome": "passed"}, "teardown": {"duration": 0.0001266449999999253, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_with_repeated_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.0001454200000003958, "outcome": "passed"}, "call": {"duration": 0.00014635100000015555, "outcome": "passed"}, "teardown": {"duration": 0.00013950399999984597, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00014600899999983596, "outcome": "passed"}, "call": {"duration": 0.00035499899999980045, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'bookkeepe' == 'bookkeepke'\n  \n  - bookkeepke\n  ?         -\n  + bookkeepe"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_char_at_end():\n>       assert remove_Occ(\"bookkeeper\", \"r\") == \"bookkeepke\"\nE       AssertionError: assert 'bookkeepe' == 'bookkeepke'\nE         \nE         - bookkeepke\nE         ?         -\nE         + bookkeepe\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00016881800000012603, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_removals", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_removals", "run.py", "test", ""], "setup": {"duration": 0.00016977800000006482, "outcome": "passed"}, "call": {"duration": 0.0003471589999999303, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_removals():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00016436999999980273, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00018115399999985016, "outcome": "passed"}, "call": {"duration": 0.00014941799999990124, "outcome": "passed"}, "teardown": {"duration": 0.00013178999999974295, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.0001521069999999014, "outcome": "passed"}, "call": {"duration": 0.0001442469999997087, "outcome": "passed"}, "teardown": {"duration": 0.00012702000000031077, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_space_char", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_with_space_char", "run.py", "test", ""], "setup": {"duration": 0.0001476760000000965, "outcome": "passed"}, "call": {"duration": 0.0001401959999998148, "outcome": "passed"}, "teardown": {"duration": 0.00015463999999987266, "outcome": "passed"}}]}, {"created": 1733299827.4033437, "duration": 0.04758477210998535, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 6, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_single_character", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_char_not_in_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_first_and_last_same", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00033211200000016206, "outcome": "passed"}, "call": {"duration": 0.0005543290000000756, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002070440000001561, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001758960000000087, "outcome": "passed"}, "call": {"duration": 0.00018426900000001467, "outcome": "passed"}, "teardown": {"duration": 0.00014711500000008648, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001563280000000944, "outcome": "passed"}, "call": {"duration": 0.00014650499999979694, "outcome": "passed"}, "teardown": {"duration": 0.0001294110000000792, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015414399999991168, "outcome": "passed"}, "call": {"duration": 0.0003348460000001108, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00018747100000005013, "outcome": "passed"}}, {"nodeid": "run.py::test_single_character", "lineno": 18, "outcome": "passed", "keywords": ["test_single_character", "run.py", "test", ""], "setup": {"duration": 0.0001849949999999101, "outcome": "passed"}, "call": {"duration": 0.0001693069999999519, "outcome": "passed"}, "teardown": {"duration": 0.00013427799999998768, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015708899999999915, "outcome": "passed"}, "call": {"duration": 0.00016804400000003383, "outcome": "passed"}, "teardown": {"duration": 0.00013492100000012108, "outcome": "passed"}}, {"nodeid": "run.py::test_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00016795399999991467, "outcome": "passed"}, "call": {"duration": 0.00016072700000013818, "outcome": "passed"}, "teardown": {"duration": 0.00012674300000004024, "outcome": "passed"}}, {"nodeid": "run.py::test_first_and_last_same", "lineno": 27, "outcome": "passed", "keywords": ["test_first_and_last_same", "run.py", "test", ""], "setup": {"duration": 0.00015543700000009153, "outcome": "passed"}, "call": {"duration": 0.00016279099999993996, "outcome": "passed"}, "teardown": {"duration": 0.00015909799999991314, "outcome": "passed"}}]}, {"created": 1733299825.409591, "duration": 0.045050621032714844, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 5, "total": 7, "collected": 7}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 24}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003453640000001812, "outcome": "passed"}, "call": {"duration": 0.0003871280000002919, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0001985089999996248, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018121999999998195, "outcome": "passed"}, "call": {"duration": 0.0003682679999998939, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00017599800000001053, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017216900000027735, "outcome": "passed"}, "call": {"duration": 0.00017031500000008748, "outcome": "passed"}, "teardown": {"duration": 0.00013568200000024788, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.000189769999999978, "outcome": "passed"}, "call": {"duration": 0.00015103999999999118, "outcome": "passed"}, "teardown": {"duration": 0.00013663000000008196, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016466099999989936, "outcome": "passed"}, "call": {"duration": 0.00014782999999995994, "outcome": "passed"}, "teardown": {"duration": 0.00012899900000018505, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00014766700000024002, "outcome": "passed"}, "call": {"duration": 0.0001481619999998962, "outcome": "passed"}, "teardown": {"duration": 0.00012724599999991426, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00014789000000003938, "outcome": "passed"}, "call": {"duration": 0.0001426640000001811, "outcome": "passed"}, "teardown": {"duration": 0.00016675999999993252, "outcome": "passed"}}]}, {"created": 1733299825.6626768, "duration": 0.06739377975463867, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 6, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_is_first", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_char_is_last", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0004382400000002562, "outcome": "passed"}, "call": {"duration": 0.0007743300000004893, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0004923100000002734, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00029345999999996764, "outcome": "passed"}, "call": {"duration": 0.00026212999999941644, "outcome": "passed"}, "teardown": {"duration": 0.00021489000000052272, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00022476999999998526, "outcome": "passed"}, "call": {"duration": 0.00020810000000004436, "outcome": "passed"}, "teardown": {"duration": 0.00016813000000048817, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00020936000000038035, "outcome": "passed"}, "call": {"duration": 0.00019770999999924044, "outcome": "passed"}, "teardown": {"duration": 0.00021084000000026748, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00023925999999985237, "outcome": "passed"}, "call": {"duration": 0.0002497400000001093, "outcome": "passed"}, "teardown": {"duration": 0.00023983999999988015, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00025553999999949895, "outcome": "passed"}, "call": {"duration": 0.00020099099999981718, "outcome": "passed"}, "teardown": {"duration": 0.0002244399999993263, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_is_first", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_is_first", "run.py", "test", ""], "setup": {"duration": 0.00021298900000044085, "outcome": "passed"}, "call": {"duration": 0.00019624000000018071, "outcome": "passed"}, "teardown": {"duration": 0.00018153999999981352, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_is_last", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_char_is_last", "run.py", "test", ""], "setup": {"duration": 0.00019627999999993762, "outcome": "passed"}, "call": {"duration": 0.000384250000000641, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'appl' == 'app'\n  \n  - app\n  + appl\n  ?    +"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_char_is_last():\n>       assert remove_Occ(\"apple\", \"e\") == \"app\"\nE       AssertionError: assert 'appl' == 'app'\nE         \nE         - app\nE         + appl\nE         ?    +\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00024493000000003207, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00025197999999981846, "outcome": "passed"}, "call": {"duration": 0.0004178599999997701, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.0002775000000001526, "outcome": "passed"}}]}, {"created": 1733299827.3013012, "duration": 0.06558656692504883, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 5, "total": 7, "collected": 7}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 24}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0005122200000000632, "outcome": "passed"}, "call": {"duration": 0.000580679999999667, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0003190999999995725, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002746599999996491, "outcome": "passed"}, "call": {"duration": 0.0002941999999999112, "outcome": "passed"}, "teardown": {"duration": 0.00019981999999973965, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00025134000000015533, "outcome": "passed"}, "call": {"duration": 0.0002558700000001579, "outcome": "passed"}, "teardown": {"duration": 0.00021618999999972743, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0003557299999998875, "outcome": "passed"}, "call": {"duration": 0.0005151300000001413, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00025196999999987924, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00025337000000025256, "outcome": "passed"}, "call": {"duration": 0.00019547999999947052, "outcome": "passed"}, "teardown": {"duration": 0.00020994999999945918, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00039337000000028155, "outcome": "passed"}, "call": {"duration": 0.00020092000000015986, "outcome": "passed"}, "teardown": {"duration": 0.00021779999999971267, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00020251000000026664, "outcome": "passed"}, "call": {"duration": 0.0002116799999996033, "outcome": "passed"}, "teardown": {"duration": 0.00028707999999966205, "outcome": "passed"}}]}, {"created": 1733299826.293209, "duration": 0.061455726623535156, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 6, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_char_at_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_char_at_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_first_and_last_of_same_char", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_single_char_string", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_single_char_string_not_present", "type": "Function", "lineno": 36}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003877010000001846, "outcome": "passed"}, "call": {"duration": 0.00037005499999942515, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heloo'\n  \n  - heloo\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\nE       AssertionError: assert 'he' == 'heloo'\nE         \nE         - heloo\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00034763800000003897, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00021687000000003565, "outcome": "passed"}, "call": {"duration": 0.00017598700000043266, "outcome": "passed"}, "teardown": {"duration": 0.00014802100000022023, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.0001587819999997464, "outcome": "passed"}, "call": {"duration": 0.00014765600000021806, "outcome": "passed"}, "teardown": {"duration": 0.00012874600000056802, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001582610000001594, "outcome": "passed"}, "call": {"duration": 0.00040624299999958424, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00018310300000035085, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_start", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00018197600000036118, "outcome": "passed"}, "call": {"duration": 0.00015321500000009536, "outcome": "passed"}, "teardown": {"duration": 0.0001343579999995015, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_end", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.0001631920000004783, "outcome": "passed"}, "call": {"duration": 0.0003546700000001124, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'appl' == 'apppl'\n  \n  - apppl\n  ?    -\n  + appl"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_char_at_end():\n>       assert remove_Occ(\"apple\", \"e\") == \"apppl\"\nE       AssertionError: assert 'appl' == 'apppl'\nE         \nE         - apppl\nE         ?    -\nE         + appl\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.0001697800000002303, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016847399999964097, "outcome": "passed"}, "call": {"duration": 0.0003297770000001421, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017309599999926206, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_of_same_char", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_first_and_last_of_same_char", "run.py", "test", ""], "setup": {"duration": 0.00016572999999997506, "outcome": "passed"}, "call": {"duration": 0.000305074999999988, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'boo' == 'bookeeper'\n  \n  - bookeeper\n  + boo"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_of_same_char():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'boo' == 'bookeeper'\nE         \nE         - bookeeper\nE         + boo\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017814499999957434, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 30, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001712170000001123, "outcome": "passed"}, "call": {"duration": 0.0001651650000003002, "outcome": "passed"}, "teardown": {"duration": 0.00013489699999968963, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string", "lineno": 33, "outcome": "passed", "keywords": ["test_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00015361999999985443, "outcome": "passed"}, "call": {"duration": 0.00014173499999969863, "outcome": "passed"}, "teardown": {"duration": 0.00013638199999999046, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string_not_present", "lineno": 36, "outcome": "passed", "keywords": ["test_single_char_string_not_present", "run.py", "test", ""], "setup": {"duration": 0.0001501199999998093, "outcome": "passed"}, "call": {"duration": 0.00013904999999958534, "outcome": "passed"}, "teardown": {"duration": 0.00016136999999982748, "outcome": "passed"}}]}, {"created": 1733299825.716864, "duration": 0.05549812316894531, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_unicode_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00030601500000004833, "outcome": "passed"}, "call": {"duration": 0.00042859300000008815, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020594800000006686, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018835999999966546, "outcome": "passed"}, "call": {"duration": 0.0003757620000000017, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00017513800000035218, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018052800000001312, "outcome": "passed"}, "call": {"duration": 0.00015422400000009162, "outcome": "passed"}, "teardown": {"duration": 0.00013210399999996625, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.0001629020000000203, "outcome": "passed"}, "call": {"duration": 0.00015577399999999741, "outcome": "passed"}, "teardown": {"duration": 0.00012932700000023445, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00014953099999992503, "outcome": "passed"}, "call": {"duration": 0.00014006499999963395, "outcome": "passed"}, "teardown": {"duration": 0.00013602099999987516, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00014662900000006474, "outcome": "passed"}, "call": {"duration": 0.0001393419999997647, "outcome": "passed"}, "teardown": {"duration": 0.00012461300000010667, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015919000000019778, "outcome": "passed"}, "call": {"duration": 0.0003331719999999372, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00018119199999988567, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016531899999971955, "outcome": "passed"}, "call": {"duration": 0.0003262539999999703, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '##$' == '##$$#'\n  \n  - ##$$#\n  ?    --\n  + ##$"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_special_characters():\n>       assert remove_Occ(\"#$#$$#\", \"$\") == \"##$$#\"\nE       AssertionError: assert '##$' == '##$$#'\nE         \nE         - ##$$#\nE         ?    --\nE         + ##$\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00018507100000020316, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.0001680150000002989, "outcome": "passed"}, "call": {"duration": 0.00033085199999982606, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'Bnan' == 'Bnana'\n  \n  - Bnana\n  ?     -\n  + Bnan"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_case_insensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnana\"\nE       AssertionError: assert 'Bnan' == 'Bnana'\nE         \nE         - Bnana\nE         ?     -\nE         + Bnan\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017850799999985512, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_unicode_characters", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_unicode_characters", "run.py", "test", ""], "setup": {"duration": 0.00018473100000004905, "outcome": "passed"}, "call": {"duration": 0.00018816200000015826, "outcome": "passed"}, "teardown": {"duration": 0.00016467500000016955, "outcome": "passed"}}]}, {"created": 1733299826.1631086, "duration": 0.04808545112609863, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 6, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_first_and_last_same_char", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00033789500000036554, "outcome": "passed"}, "call": {"duration": 0.000491341000000034, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00022137599999982882, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018671499999989294, "outcome": "passed"}, "call": {"duration": 0.00017935099999988324, "outcome": "passed"}, "teardown": {"duration": 0.00015127799999969938, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016737699999946898, "outcome": "passed"}, "call": {"duration": 0.00015129600000030052, "outcome": "passed"}, "teardown": {"duration": 0.00013423700000014804, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016676100000001526, "outcome": "passed"}, "call": {"duration": 0.0003621730000000767, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017935800000046243, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001682909999995985, "outcome": "passed"}, "call": {"duration": 0.00015422800000042258, "outcome": "passed"}, "teardown": {"duration": 0.00013661600000069996, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00015423199999986537, "outcome": "passed"}, "call": {"duration": 0.0001424800000000559, "outcome": "passed"}, "teardown": {"duration": 0.00013640500000011713, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015408299999997155, "outcome": "passed"}, "call": {"duration": 0.000145577999999702, "outcome": "passed"}, "teardown": {"duration": 0.0001301800000002018, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_first_and_last_same_char", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00016286999999959306, "outcome": "passed"}, "call": {"duration": 0.00014268199999989406, "outcome": "passed"}, "teardown": {"duration": 0.0001599969999999118, "outcome": "passed"}}]}, {"created": 1733299825.5219111, "duration": 0.057333946228027344, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 7, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_multiple_first_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_multiple_last_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_single_character", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_first_and_last_of_single_character", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_empty_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_first_of_empty_string", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_last_of_empty_string", "type": "Function", "lineno": 36}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0004491329999991578, "outcome": "passed"}, "call": {"duration": 0.0004685169999998351, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00031213799999996183, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00021509599999980367, "outcome": "passed"}, "call": {"duration": 0.00021239900000047385, "outcome": "passed"}, "teardown": {"duration": 0.0001419870000001211, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00016352899999994008, "outcome": "passed"}, "call": {"duration": 0.0001513140000000135, "outcome": "passed"}, "teardown": {"duration": 0.00013769400000018805, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015515399999976864, "outcome": "passed"}, "call": {"duration": 0.000437754999999207, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.0001851640000003485, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_first_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_multiple_first_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017269899999927674, "outcome": "passed"}, "call": {"duration": 0.0003618810000007855, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_first_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00018291700000006017, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_last_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_multiple_last_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017269499999983395, "outcome": "passed"}, "call": {"duration": 0.00033926600000011575, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'misis' == 'mippi'\n  \n  - mippi\n  + misis"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_last_occurrences():\n>       assert remove_Occ(\"mississippi\", \"s\") == \"mippi\"\nE       AssertionError: assert 'misis' == 'mippi'\nE         \nE         - mippi\nE         + misis\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017596500000038873, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_single_character", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_single_character", "run.py", "test", ""], "setup": {"duration": 0.00018169699999948108, "outcome": "passed"}, "call": {"duration": 0.0001515809999999007, "outcome": "passed"}, "teardown": {"duration": 0.0001341750000003472, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_of_single_character", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_first_and_last_of_single_character", "run.py", "test", ""], "setup": {"duration": 0.00015201899999972568, "outcome": "passed"}, "call": {"duration": 0.0001468659999996902, "outcome": "passed"}, "teardown": {"duration": 0.00012855099999953268, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_empty_string", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015058600000017464, "outcome": "passed"}, "call": {"duration": 0.00014304300000045345, "outcome": "passed"}, "teardown": {"duration": 0.00013270999999992483, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_of_empty_string", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_first_of_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015009199999926892, "outcome": "passed"}, "call": {"duration": 0.00014251399999931635, "outcome": "passed"}, "teardown": {"duration": 0.0001272989999998586, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_of_empty_string", "lineno": 36, "outcome": "passed", "keywords": ["test_remove_last_of_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015332400000023227, "outcome": "passed"}, "call": {"duration": 0.0001438129999993265, "outcome": "passed"}, "teardown": {"duration": 0.00017370499999991296, "outcome": "passed"}}]}, {"created": 1733299825.6706107, "duration": 0.047699928283691406, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 1, "total": 5, "collected": 5}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test1", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test2", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test3", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test4", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test5", "type": "Function", "lineno": 17}]}], "tests": [{"nodeid": "run.py::test1", "lineno": 5, "outcome": "failed", "keywords": ["test1", "run.py", "test", ""], "setup": {"duration": 0.0003326370000005241, "outcome": "passed"}, "call": {"duration": 0.000247579999999914, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 7, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test1():\n>       assert remove_Occ(\"hello\",\"l\") == \"heo\"\n\nrun.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'helo', char = 'l'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0002513280000000506, "outcome": "passed"}}, {"nodeid": "run.py::test2", "lineno": 8, "outcome": "failed", "keywords": ["test2", "run.py", "test", ""], "setup": {"duration": 0.0002040919999997115, "outcome": "passed"}, "call": {"duration": 0.0001973009999991504, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 10, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test2():\n>       assert remove_Occ(\"abcda\",\"a\") == \"bcd\"\n\nrun.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bcda', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0001788989999997881, "outcome": "passed"}}, {"nodeid": "run.py::test3", "lineno": 11, "outcome": "failed", "keywords": ["test3", "run.py", "test", ""], "setup": {"duration": 0.00017129600000043155, "outcome": "passed"}, "call": {"duration": 0.00019992600000051652, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 13, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test3():\n>       assert remove_Occ(\"PHP\",\"P\") == \"H\"\n\nrun.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'HP', char = 'P'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017765700000005324, "outcome": "passed"}}, {"nodeid": "run.py::test4", "lineno": 14, "outcome": "failed", "keywords": ["test4", "run.py", "test", ""], "setup": {"duration": 0.00017385599999997225, "outcome": "passed"}, "call": {"duration": 0.000191924000000121, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 16, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test4():\n>       assert remove_Occ(\"hellolloll\",\"l\") == \"helollol\"\n\nrun.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'helolloll', char = 'l'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017928100000030867, "outcome": "passed"}}, {"nodeid": "run.py::test5", "lineno": 17, "outcome": "passed", "keywords": ["test5", "run.py", "test", ""], "setup": {"duration": 0.00017048700000010797, "outcome": "passed"}, "call": {"duration": 0.0001571660000001529, "outcome": "passed"}, "teardown": {"duration": 0.00017685300000014337, "outcome": "passed"}}]}, {"created": 1733299826.3861086, "duration": 0.059163808822631836, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 7, "passed": 2, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_with_case_sensitivity", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "type": "Function", "lineno": 29}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003614579999995371, "outcome": "passed"}, "call": {"duration": 0.0002750919999998658, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 7, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\n\nrun.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'helo', char = 'l'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00025972900000059695, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 8, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001893640000005803, "outcome": "passed"}, "call": {"duration": 0.0001845829999993498, "outcome": "passed"}, "teardown": {"duration": 0.00014311700000035898, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 11, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016606400000007682, "outcome": "passed"}, "call": {"duration": 0.0001667779999996455, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 13, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnan\"\n\nrun.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bnana', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00018390600000017798, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00017068699999978065, "outcome": "passed"}, "call": {"duration": 0.00016388500000008577, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 16, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"apple\", \"p\") == \"ale\"\n\nrun.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'aple', char = 'p'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017529799999937978, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 17, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016618300000015296, "outcome": "passed"}, "call": {"duration": 0.00018284099999998915, "outcome": "passed"}, "teardown": {"duration": 0.00013537500000015967, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 20, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001575080000000284, "outcome": "passed"}, "call": {"duration": 0.0001567809999993841, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 22, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\n\nrun.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'mssissippi', char = 'i'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0001691069999996131, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_case_sensitivity", "lineno": 23, "outcome": "failed", "keywords": ["test_remove_Occ_with_case_sensitivity", "run.py", "test", ""], "setup": {"duration": 0.00016601300000029795, "outcome": "passed"}, "call": {"duration": 0.00016046900000077358, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 25, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_with_case_sensitivity():\n>       assert remove_Occ(\"CaseSensitive\", \"s\") == \"CaseSensitve\"\n\nrun.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'CaeSensitive', char = 's'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00019013000000001057, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 26, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001755160000005418, "outcome": "passed"}, "call": {"duration": 0.00016382799999981046, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 28, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"hello@world\", \"@\") == \"hello@orld\"\n\nrun.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'helloworld', char = '@'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0001717970000001401, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "lineno": 29, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016720500000033667, "outcome": "passed"}, "call": {"duration": 0.00016850500000042956, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 31, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_with_repeated_special_characters():\n>       assert remove_Occ(\"!!!hello!!!\", \"!\") == \"hello!!!\"\n\nrun.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '!!hello!!!', char = '!'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00019892800000054223, "outcome": "passed"}}]}, {"created": 1733299826.1148612, "duration": 0.06122708320617676, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 8, "passed": 2, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_first_and_last", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_single_char", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_special_characters", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_case_insensitive", "type": "Function", "lineno": 29}, {"nodeid": "run.py::test_digit", "type": "Function", "lineno": 32}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00030616899999991176, "outcome": "passed"}, "call": {"duration": 0.00019531600000011196, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 7, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\n\nrun.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'helo', char = 'l'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0002205189999999746, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019194900000041315, "outcome": "passed"}, "call": {"duration": 0.00018914500000022372, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 10, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\n\nrun.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'hell', char = 'o'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0001775449999996681, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 11, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018261700000010705, "outcome": "passed"}, "call": {"duration": 0.00015433599999958858, "outcome": "passed"}, "teardown": {"duration": 0.00013253599999973886, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_first_and_last", "run.py", "test", ""], "setup": {"duration": 0.00015250000000044395, "outcome": "passed"}, "call": {"duration": 0.00016810799999955606, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 16, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_first_and_last():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\n\nrun.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bnana', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00018656000000039086, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char", "lineno": 17, "outcome": "failed", "keywords": ["test_single_char", "run.py", "test", ""], "setup": {"duration": 0.00017060900000043233, "outcome": "passed"}, "call": {"duration": 0.00016473200000000077, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 19, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_single_char():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017907299999997406, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 20, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001833749999997636, "outcome": "passed"}, "call": {"duration": 0.0001518659999995009, "outcome": "passed"}, "teardown": {"duration": 0.0001361449999999209, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 23, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015882499999975153, "outcome": "passed"}, "call": {"duration": 0.0001617289999993332, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 25, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\n\nrun.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'mssissippi', char = 'i'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017731000000065222, "outcome": "passed"}}, {"nodeid": "run.py::test_special_characters", "lineno": 26, "outcome": "failed", "keywords": ["test_special_characters", "run.py", "test", ""], "setup": {"duration": 0.000170319999999613, "outcome": "passed"}, "call": {"duration": 0.00016469599999968665, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 28, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_special_characters():\n>       assert remove_Occ(\"!@#$hello@#\", \"@\") == \"!$hello#\"\n\nrun.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '!#$hello@#', char = '@'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017918400000027646, "outcome": "passed"}}, {"nodeid": "run.py::test_case_insensitive", "lineno": 29, "outcome": "failed", "keywords": ["test_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00017571199999988352, "outcome": "passed"}, "call": {"duration": 0.00017637900000000428, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 31, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_case_insensitive():\n>       assert remove_Occ(\"HelloWorld\", \"l\") == \"HeoWorld\"\n\nrun.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'HeloWorld', char = 'l'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0001906759999998897, "outcome": "passed"}}, {"nodeid": "run.py::test_digit", "lineno": 32, "outcome": "failed", "keywords": ["test_digit", "run.py", "test", ""], "setup": {"duration": 0.0001773160000002605, "outcome": "passed"}, "call": {"duration": 0.00016971700000034673, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 34, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_digit():\n>       assert remove_Occ(\"1234567890\", \"0\") == \"123456789\"\n\nrun.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '123456789', char = '0'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00020761800000013153, "outcome": "passed"}}]}, {"created": 1733299826.321208, "duration": 0.06158947944641113, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 8, "passed": 2, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_with_multiple_removals", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "type": "Function", "lineno": 29}, {"nodeid": "run.py::test_remove_Occ_with_space_char", "type": "Function", "lineno": 32}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_in_string", "run.py", "test", ""], "setup": {"duration": 0.0003119879999999853, "outcome": "passed"}, "call": {"duration": 0.0002030990000001509, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 7, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_with_char_in_string():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\n\nrun.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'helo', char = 'l'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00018725999999968934, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.0001758610000006655, "outcome": "passed"}, "call": {"duration": 0.00019981600000029687, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 10, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_with_char_at_start():\n>       assert remove_Occ(\"hello\", \"h\") == \"ello\"\n\nrun.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'ello', char = 'h'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0001730880000003765, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 11, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00016422399999971304, "outcome": "passed"}, "call": {"duration": 0.0001702070000000333, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 13, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_with_char_at_end():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\n\nrun.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'hell', char = 'o'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00018428899999989312, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 14, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.0001664580000007021, "outcome": "passed"}, "call": {"duration": 0.00014834500000038275, "outcome": "passed"}, "teardown": {"duration": 0.00012928099999953702, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "lineno": 17, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00015450600000033177, "outcome": "passed"}, "call": {"duration": 0.0001545020000000008, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 19, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_with_repeated_char_at_start():\n>       assert remove_Occ(\"bookkeeper\", \"b\") == \"ookkeeper\"\n\nrun.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'ookkeeper', char = 'b'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00018738499999937375, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "lineno": 20, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00017140499999968029, "outcome": "passed"}, "call": {"duration": 0.00016389000000049947, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 22, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_with_repeated_char_at_end():\n>       assert remove_Occ(\"bookkeeper\", \"r\") == \"bookkeepke\"\n\nrun.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bookkeepe', char = 'r'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017739299999952607, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_removals", "lineno": 23, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_removals", "run.py", "test", ""], "setup": {"duration": 0.00016603100000001092, "outcome": "passed"}, "call": {"duration": 0.00016666099999973483, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 25, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_with_multiple_removals():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\n\nrun.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'mssissippi', char = 'i'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00018400200000012745, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 26, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017034800000015338, "outcome": "passed"}, "call": {"duration": 0.00015224800000002148, "outcome": "passed"}, "teardown": {"duration": 0.0001446650000005434, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "lineno": 29, "outcome": "failed", "keywords": ["test_remove_Occ_with_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.0001603770000002669, "outcome": "passed"}, "call": {"duration": 0.00015755799999972453, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 31, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_with_single_char_string():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017431299999959293, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_space_char", "lineno": 32, "outcome": "failed", "keywords": ["test_remove_Occ_with_space_char", "run.py", "test", ""], "setup": {"duration": 0.00017708100000035643, "outcome": "passed"}, "call": {"duration": 0.000163814999999623, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 34, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_with_space_char():\n>       assert remove_Occ(\"hello world\", \" \") == \"helloworld\"\n\nrun.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'helloworld', char = ' '\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00021025699999999148, "outcome": "passed"}}]}, {"created": 1733299826.4847803, "duration": 0.07049322128295898, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 3, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_single_character", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_char_not_in_string", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_first_and_last_same", "type": "Function", "lineno": 26}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0005005200000001153, "outcome": "passed"}, "call": {"duration": 0.0003026799999998886, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 7, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\n\nrun.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'helo', char = 'l'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0002556399999997794, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00023418000000052785, "outcome": "passed"}, "call": {"duration": 0.0002397299999996605, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 10, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\n\nrun.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'hell', char = 'o'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00022734000000035337, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 11, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002134099999997474, "outcome": "passed"}, "call": {"duration": 0.00021838999999967967, "outcome": "passed"}, "teardown": {"duration": 0.00017074999999966423, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 14, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0004285089999997993, "outcome": "passed"}, "call": {"duration": 0.00033798000000029305, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 16, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\n\nrun.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bnana', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00020179000000020153, "outcome": "passed"}}, {"nodeid": "run.py::test_single_character", "lineno": 17, "outcome": "failed", "keywords": ["test_single_character", "run.py", "test", ""], "setup": {"duration": 0.00024093000000036113, "outcome": "passed"}, "call": {"duration": 0.00030175000000021157, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 19, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_single_character():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00020640999999965715, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 20, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00022932999999980552, "outcome": "passed"}, "call": {"duration": 0.00021802999999920303, "outcome": "passed"}, "teardown": {"duration": 0.00016945999999951056, "outcome": "passed"}}, {"nodeid": "run.py::test_char_not_in_string", "lineno": 23, "outcome": "passed", "keywords": ["test_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00022156999999989324, "outcome": "passed"}, "call": {"duration": 0.00018058000000031882, "outcome": "passed"}, "teardown": {"duration": 0.00016753999999963298, "outcome": "passed"}}, {"nodeid": "run.py::test_first_and_last_same", "lineno": 26, "outcome": "failed", "keywords": ["test_first_and_last_same", "run.py", "test", ""], "setup": {"duration": 0.0002696300000000207, "outcome": "passed"}, "call": {"duration": 0.000234149999999822, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 28, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_first_and_last_same():\n>       assert remove_Occ(\"level\", \"l\") == \"eve\"\n\nrun.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'evel', char = 'l'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0002763100000002794, "outcome": "passed"}}]}, {"created": 1733299826.3255894, "duration": 0.0516057014465332, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 3, "total": 7, "collected": 7}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 23}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00029620000000019076, "outcome": "passed"}, "call": {"duration": 0.00019911100000058468, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 7, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\n\nrun.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bnana', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00028951999999993205, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00021309499999944137, "outcome": "passed"}, "call": {"duration": 0.00022199699999969624, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 10, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\n\nrun.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bnana', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00019680300000057827, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018458400000032071, "outcome": "passed"}, "call": {"duration": 0.00015944799999978443, "outcome": "passed"}, "teardown": {"duration": 0.00015097600000046896, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00016333100000043288, "outcome": "passed"}, "call": {"duration": 0.00016777500000042522, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 16, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_single_char():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017800599999961975, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 17, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017178700000020086, "outcome": "passed"}, "call": {"duration": 0.00017064900000018923, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 19, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissipp\"\n\nrun.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'mssissippi', char = 'i'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.000192947999999582, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 20, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0002215119999995352, "outcome": "passed"}, "call": {"duration": 0.0001578640000001741, "outcome": "passed"}, "teardown": {"duration": 0.00013370000000012539, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 23, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015738199999937308, "outcome": "passed"}, "call": {"duration": 0.00016150599999953386, "outcome": "passed"}, "teardown": {"duration": 0.00016449400000073666, "outcome": "passed"}}]}, {"created": 1733299825.2643716, "duration": 0.05664658546447754, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 3, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_char_is_first", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_Occ_char_is_last", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "type": "Function", "lineno": 29}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003014979999997891, "outcome": "passed"}, "call": {"duration": 0.0002591090000008123, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 7, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\n\nrun.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'helo', char = 'l'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00019794399999994994, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001828819999998288, "outcome": "passed"}, "call": {"duration": 0.00018287200000077775, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 10, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\n\nrun.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'hell', char = 'o'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017288200000020737, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00017671099999994055, "outcome": "passed"}, "call": {"duration": 0.00017140599999976303, "outcome": "passed"}, "teardown": {"duration": 0.0001320319999997821, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 14, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015071900000052096, "outcome": "passed"}, "call": {"duration": 0.00015247599999934636, "outcome": "passed"}, "teardown": {"duration": 0.00012756200000030304, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 17, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015328100000022715, "outcome": "passed"}, "call": {"duration": 0.00014348900000005216, "outcome": "passed"}, "teardown": {"duration": 0.00013907899999932027, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 20, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00014877699999971128, "outcome": "passed"}, "call": {"duration": 0.00015377799999960473, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 22, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnan\"\n\nrun.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bnana', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017542299999995237, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_is_first", "lineno": 23, "outcome": "failed", "keywords": ["test_remove_Occ_char_is_first", "run.py", "test", ""], "setup": {"duration": 0.00016765999999979186, "outcome": "passed"}, "call": {"duration": 0.00018495100000048836, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 25, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_char_is_first():\n>       assert remove_Occ(\"apple\", \"a\") == \"pple\"\n\nrun.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'pple', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017454999999966248, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_is_last", "lineno": 26, "outcome": "failed", "keywords": ["test_remove_Occ_char_is_last", "run.py", "test", ""], "setup": {"duration": 0.00016630599999967188, "outcome": "passed"}, "call": {"duration": 0.00016967499999953617, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 28, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_char_is_last():\n>       assert remove_Occ(\"apple\", \"e\") == \"app\"\n\nrun.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'appl', char = 'e'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017637100000023054, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "lineno": 29, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00016734799999973404, "outcome": "passed"}, "call": {"duration": 0.0001652539999996705, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 31, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_multiple_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\n\nrun.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'mssissippi', char = 'i'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0002031429999993506, "outcome": "passed"}}]}, {"created": 1733299825.9549713, "duration": 0.048871755599975586, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 3, "total": 7, "collected": 7}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 23}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00029417100000017626, "outcome": "passed"}, "call": {"duration": 0.0002127800000000235, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 7, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\n\nrun.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'helo', char = 'l'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0002107929999999314, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001787389999998723, "outcome": "passed"}, "call": {"duration": 0.00018151700000057502, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 10, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\n\nrun.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'hell', char = 'o'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0001848239999997503, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018926599999957716, "outcome": "passed"}, "call": {"duration": 0.00019243699999993424, "outcome": "passed"}, "teardown": {"duration": 0.00015701000000056808, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001884580000002245, "outcome": "passed"}, "call": {"duration": 0.00016582599999992453, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 16, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\n\nrun.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bnana', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017523599999957895, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 17, "outcome": "failed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00016860599999990455, "outcome": "passed"}, "call": {"duration": 0.00016329199999987054, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 19, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_single_char():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0001765489999998593, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 20, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017987299999955297, "outcome": "passed"}, "call": {"duration": 0.00017075600000016067, "outcome": "passed"}, "teardown": {"duration": 0.0001348260000000323, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 23, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.0001626400000001027, "outcome": "passed"}, "call": {"duration": 0.00016279899999993575, "outcome": "passed"}, "teardown": {"duration": 0.0001572720000000416, "outcome": "passed"}}]}, {"created": 1733299825.8485222, "duration": 0.06643939018249512, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 8, "passed": 3, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_char_at_start", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_char_at_end", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_first_and_last_of_same_char", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 29}, {"nodeid": "run.py::test_single_char_string", "type": "Function", "lineno": 32}, {"nodeid": "run.py::test_single_char_string_not_present", "type": "Function", "lineno": 35}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.000437647000000041, "outcome": "passed"}, "call": {"duration": 0.0002119460000000739, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 7, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\n\nrun.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'helo', char = 'l'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0002446750000000275, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019284199999991536, "outcome": "passed"}, "call": {"duration": 0.00018647099999991035, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 10, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\n\nrun.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'hell', char = 'o'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00018957699999999633, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00017935300000004872, "outcome": "passed"}, "call": {"duration": 0.0001619769999998688, "outcome": "passed"}, "teardown": {"duration": 0.0001337959999998528, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015483900000012873, "outcome": "passed"}, "call": {"duration": 0.0001592089999999935, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 16, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\n\nrun.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bnana', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017645399999999256, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_start", "lineno": 17, "outcome": "failed", "keywords": ["test_remove_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00016931600000003044, "outcome": "passed"}, "call": {"duration": 0.00017592500000018774, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 19, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_char_at_start():\n>       assert remove_Occ(\"apple\", \"a\") == \"pple\"\n\nrun.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'pple', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017675500000002842, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_end", "lineno": 20, "outcome": "failed", "keywords": ["test_remove_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00017520700000006606, "outcome": "passed"}, "call": {"duration": 0.00016567700000003072, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 22, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_char_at_end():\n>       assert remove_Occ(\"apple\", \"e\") == \"apppl\"\n\nrun.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'appl', char = 'e'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0001740809999999371, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 23, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016599400000005815, "outcome": "passed"}, "call": {"duration": 0.00016218800000000755, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 25, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\n\nrun.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'mssissippi', char = 'i'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0001743290000000286, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_of_same_char", "lineno": 26, "outcome": "failed", "keywords": ["test_remove_first_and_last_of_same_char", "run.py", "test", ""], "setup": {"duration": 0.0001714669999999252, "outcome": "passed"}, "call": {"duration": 0.0001654289999999392, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 28, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_first_and_last_of_same_char():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\n\nrun.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bookeeper', char = 'k'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017404500000006706, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 29, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001682980000001777, "outcome": "passed"}, "call": {"duration": 0.00016566100000003914, "outcome": "passed"}, "teardown": {"duration": 0.00016570999999987457, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string", "lineno": 32, "outcome": "failed", "keywords": ["test_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.0001611249999999842, "outcome": "passed"}, "call": {"duration": 0.00017714199999985247, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 34, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_single_char_string():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017431199999995428, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string_not_present", "lineno": 35, "outcome": "passed", "keywords": ["test_single_char_string_not_present", "run.py", "test", ""], "setup": {"duration": 0.00016979899999980397, "outcome": "passed"}, "call": {"duration": 0.00015166300000002408, "outcome": "passed"}, "teardown": {"duration": 0.00016497200000009649, "outcome": "passed"}}]}, {"created": 1733299827.032757, "duration": 0.06439614295959473, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 4, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_Occ_special_characters", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "type": "Function", "lineno": 29}, {"nodeid": "run.py::test_remove_Occ_unicode_characters", "type": "Function", "lineno": 32}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003867930000005515, "outcome": "passed"}, "call": {"duration": 0.00023474400000011997, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 7, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\n\nrun.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bnana', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00024171300000030982, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00021945399999978576, "outcome": "passed"}, "call": {"duration": 0.00021076300000011372, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 10, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\n\nrun.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bnana', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00018916400000001943, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018457000000005053, "outcome": "passed"}, "call": {"duration": 0.0001779790000000503, "outcome": "passed"}, "teardown": {"duration": 0.00013692700000067504, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.0001607670000005612, "outcome": "passed"}, "call": {"duration": 0.00017676499999996764, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 16, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_single_char():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0001869220000001448, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 17, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017070599999957636, "outcome": "passed"}, "call": {"duration": 0.00015351300000077117, "outcome": "passed"}, "teardown": {"duration": 0.0001313309999995127, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 20, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015607499999958918, "outcome": "passed"}, "call": {"duration": 0.00014111300000063665, "outcome": "passed"}, "teardown": {"duration": 0.00012876300000019825, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 23, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016078400000019144, "outcome": "passed"}, "call": {"duration": 0.000156129999999699, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 25, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\n\nrun.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'mssissippi', char = 'i'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0001911310000002331, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_special_characters", "lineno": 26, "outcome": "failed", "keywords": ["test_remove_Occ_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001718940000001723, "outcome": "passed"}, "call": {"duration": 0.00016510000000025116, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 28, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_special_characters():\n>       assert remove_Occ(\"#$#$$#\", \"$\") == \"##$$#\"\n\nrun.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '##$$#', char = '$'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017921200000081683, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "lineno": 29, "outcome": "failed", "keywords": ["test_remove_Occ_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00016895300000019375, "outcome": "passed"}, "call": {"duration": 0.0001706530000005202, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 31, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_case_insensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnana\"\n\nrun.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'Bnana', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00018952300000041333, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_unicode_characters", "lineno": 32, "outcome": "passed", "keywords": ["test_remove_Occ_unicode_characters", "run.py", "test", ""], "setup": {"duration": 0.00017033099999963497, "outcome": "passed"}, "call": {"duration": 0.0001518069999999483, "outcome": "passed"}, "teardown": {"duration": 0.00017690200000064493, "outcome": "passed"}}]}, {"created": 1733299825.5479317, "duration": 0.054023027420043945, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 3, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_Occ_first_and_last_same_char", "type": "Function", "lineno": 26}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00028976800000002356, "outcome": "passed"}, "call": {"duration": 0.000549770000000116, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 7, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\n\nrun.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'helo', char = 'l'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0002911440000001875, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00022839199999946658, "outcome": "passed"}, "call": {"duration": 0.0002074519999997193, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 10, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\n\nrun.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'hell', char = 'o'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00018653299999993322, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017526500000020206, "outcome": "passed"}, "call": {"duration": 0.0001643099999997233, "outcome": "passed"}, "teardown": {"duration": 0.0001332920000001181, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00019444700000015303, "outcome": "passed"}, "call": {"duration": 0.00016145000000022947, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 16, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\n\nrun.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bnana', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00018234499999980613, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 17, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017092600000001568, "outcome": "passed"}, "call": {"duration": 0.00016568299999963898, "outcome": "passed"}, "teardown": {"duration": 0.00013797400000026272, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 20, "outcome": "failed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00015608100000008562, "outcome": "passed"}, "call": {"duration": 0.00015841799999982697, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 22, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_single_char():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017533800000002486, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 23, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.0001814050000001899, "outcome": "passed"}, "call": {"duration": 0.00015139799999985826, "outcome": "passed"}, "teardown": {"duration": 0.00013253800000079252, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_first_and_last_same_char", "lineno": 26, "outcome": "failed", "keywords": ["test_remove_Occ_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00015445399999958198, "outcome": "passed"}, "call": {"duration": 0.00017082799999990073, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 28, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_Occ_first_and_last_same_char():\n>       assert remove_Occ(\"abba\", \"b\") == \"a\"\n\nrun.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'aba', char = 'b'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00022207899999937553, "outcome": "passed"}}]}, {"created": 1733299826.6214404, "duration": 0.06094765663146973, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 7, "passed": 4, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 5}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 8}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 11}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 14}, {"nodeid": "run.py::test_remove_multiple_first_occurrences", "type": "Function", "lineno": 17}, {"nodeid": "run.py::test_remove_multiple_last_occurrences", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_single_character", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_first_and_last_of_single_character", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_remove_empty_string", "type": "Function", "lineno": 29}, {"nodeid": "run.py::test_remove_first_of_empty_string", "type": "Function", "lineno": 32}, {"nodeid": "run.py::test_remove_last_of_empty_string", "type": "Function", "lineno": 35}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 5, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0004015419999996439, "outcome": "passed"}, "call": {"duration": 0.00021788300000036287, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 7, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\n\nrun.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'helo', char = 'l'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00020127600000030554, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 8, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019272900000011361, "outcome": "passed"}, "call": {"duration": 0.0001849629999997049, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 10, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\n\nrun.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'hell', char = 'o'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00018894300000038555, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 11, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00017633499999991642, "outcome": "passed"}, "call": {"duration": 0.00015888300000010958, "outcome": "passed"}, "teardown": {"duration": 0.00014446999999950805, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 14, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015705299999968503, "outcome": "passed"}, "call": {"duration": 0.0001562829999999238, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 16, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\n\nrun.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'bnana', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.0001778660000004706, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_first_occurrences", "lineno": 17, "outcome": "failed", "keywords": ["test_remove_multiple_first_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016888599999997922, "outcome": "passed"}, "call": {"duration": 0.00016773100000033736, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 19, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_multiple_first_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\n\nrun.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'mssissippi', char = 'i'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00018011800000028444, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_last_occurrences", "lineno": 20, "outcome": "failed", "keywords": ["test_remove_multiple_last_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001880869999997259, "outcome": "passed"}, "call": {"duration": 0.00016690800000063177, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 22, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_multiple_last_occurrences():\n>       assert remove_Occ(\"mississippi\", \"s\") == \"mippi\"\n\nrun.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = 'misissippi', char = 's'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017569400000017055, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_single_character", "lineno": 23, "outcome": "failed", "keywords": ["test_remove_single_character", "run.py", "test", ""], "setup": {"duration": 0.00016564999999957308, "outcome": "passed"}, "call": {"duration": 0.00016307699999984493, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 25, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_single_character():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017352900000044968, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_of_single_character", "lineno": 26, "outcome": "failed", "keywords": ["test_remove_first_and_last_of_single_character", "run.py", "test", ""], "setup": {"duration": 0.00016988399999995352, "outcome": "passed"}, "call": {"duration": 0.00016190799999993288, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 4, "message": "AttributeError: 'str' object has no attribute 'rreplace'"}, "traceback": [{"path": "run.py", "lineno": 28, "message": ""}, {"path": "run.py", "lineno": 4, "message": "AttributeError"}], "longrepr": "def test_remove_first_and_last_of_single_character():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char in s:\n            s = s.replace(char, \"\", 1)  # Remove first occurrence\n>           s = s.rreplace(char, \"\", 1)  # Remove last occurrence\nE           AttributeError: 'str' object has no attribute 'rreplace'\n\nrun.py:4: AttributeError"}, "teardown": {"duration": 0.00017846500000029408, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_empty_string", "lineno": 29, "outcome": "passed", "keywords": ["test_remove_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017964799999958814, "outcome": "passed"}, "call": {"duration": 0.00015152299999954266, "outcome": "passed"}, "teardown": {"duration": 0.00013262400000080277, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_of_empty_string", "lineno": 32, "outcome": "passed", "keywords": ["test_remove_first_of_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016177000000006103, "outcome": "passed"}, "call": {"duration": 0.00015093000000021561, "outcome": "passed"}, "teardown": {"duration": 0.0001288179999994199, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_of_empty_string", "lineno": 35, "outcome": "passed", "keywords": ["test_remove_last_of_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015174699999942476, "outcome": "passed"}, "call": {"duration": 0.00014211799999941377, "outcome": "passed"}, "teardown": {"duration": 0.00015903400000016887, "outcome": "passed"}}]}, {"created": 1733299826.1213112, "duration": 0.043216705322265625, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 1, "passed": 4, "total": 5, "collected": 5}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test1", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test2", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test3", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test4", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test5", "type": "Function", "lineno": 18}]}], "tests": [{"nodeid": "run.py::test1", "lineno": 6, "outcome": "failed", "keywords": ["test1", "run.py", "test", ""], "setup": {"duration": 0.00035468100000013436, "outcome": "passed"}, "call": {"duration": 0.0004903149999995193, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test1():\n>       assert remove_Occ(\"hello\",\"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.000218453999999646, "outcome": "passed"}}, {"nodeid": "run.py::test2", "lineno": 9, "outcome": "passed", "keywords": ["test2", "run.py", "test", ""], "setup": {"duration": 0.00019493799999992234, "outcome": "passed"}, "call": {"duration": 0.0001882079999999675, "outcome": "passed"}, "teardown": {"duration": 0.00014114200000037158, "outcome": "passed"}}, {"nodeid": "run.py::test3", "lineno": 12, "outcome": "passed", "keywords": ["test3", "run.py", "test", ""], "setup": {"duration": 0.00016660100000009948, "outcome": "passed"}, "call": {"duration": 0.00015131699999937354, "outcome": "passed"}, "teardown": {"duration": 0.00013130399999994324, "outcome": "passed"}}, {"nodeid": "run.py::test4", "lineno": 15, "outcome": "passed", "keywords": ["test4", "run.py", "test", ""], "setup": {"duration": 0.000172583000000337, "outcome": "passed"}, "call": {"duration": 0.0001483650000002612, "outcome": "passed"}, "teardown": {"duration": 0.00012983599999927264, "outcome": "passed"}}, {"nodeid": "run.py::test5", "lineno": 18, "outcome": "passed", "keywords": ["test5", "run.py", "test", ""], "setup": {"duration": 0.00015049900000008165, "outcome": "passed"}, "call": {"duration": 0.00016195300000010349, "outcome": "passed"}, "teardown": {"duration": 0.00016223300000017815, "outcome": "passed"}}]}, {"created": 1733299826.8392622, "duration": 0.0548098087310791, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 3, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_case_sensitivity", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003157350000000392, "outcome": "passed"}, "call": {"duration": 0.0004869240000000552, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0001992269999999685, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001801760000001984, "outcome": "passed"}, "call": {"duration": 0.00017130800000009216, "outcome": "passed"}, "teardown": {"duration": 0.00013467999999994262, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015798499999997162, "outcome": "passed"}, "call": {"duration": 0.00014586499999991176, "outcome": "passed"}, "teardown": {"duration": 0.00012979599999995983, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00015042099999984515, "outcome": "passed"}, "call": {"duration": 0.00034282399999963076, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'a' == 'ale'\n  \n  - ale\n  + a"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"apple\", \"p\") == \"ale\"\nE       AssertionError: assert 'a' == 'ale'\nE         \nE         - ale\nE         + a\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.0001877589999996765, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017024600000015155, "outcome": "passed"}, "call": {"duration": 0.00015491800000022593, "outcome": "passed"}, "teardown": {"duration": 0.00013712099999985128, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016204400000008334, "outcome": "passed"}, "call": {"duration": 0.0003376579999998519, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017550000000010613, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_case_sensitivity", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_case_sensitivity", "run.py", "test", ""], "setup": {"duration": 0.00016665400000004382, "outcome": "passed"}, "call": {"duration": 0.00032359600000031463, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'CaeSen' == 'CaseSensitve'\n  \n  - CaseSensitve\n  + CaeSen"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_case_sensitivity():\n>       assert remove_Occ(\"CaseSensitive\", \"s\") == \"CaseSensitve\"\nE       AssertionError: assert 'CaeSen' == 'CaseSensitve'\nE         \nE         - CaseSensitve\nE         + CaeSen\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00018537300000032175, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016975799999974228, "outcome": "passed"}, "call": {"duration": 0.0003641100000000286, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'helloworld' == 'hello@orld'\n  \n  - hello@orld\n  ?      ^\n  + helloworld\n  ?      ^"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"hello@world\", \"@\") == \"hello@orld\"\nE       AssertionError: assert 'helloworld' == 'hello@orld'\nE         \nE         - hello@orld\nE         ?      ^\nE         + helloworld\nE         ?      ^\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00018123899999977766, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017205599999980947, "outcome": "passed"}, "call": {"duration": 0.000357553000000177, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert '!!hello!!' == 'hello!!!'\n  \n  - hello!!!\n  ?        -\n  + !!hello!!\n  ? ++"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_special_characters():\n>       assert remove_Occ(\"!!!hello!!!\", \"!\") == \"hello!!!\"\nE       AssertionError: assert '!!hello!!' == 'hello!!!'\nE         \nE         - hello!!!\nE         ?        -\nE         + !!hello!!\nE         ? ++\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00020086600000013277, "outcome": "passed"}}]}, {"created": 1733299826.903605, "duration": 0.05601048469543457, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_first_and_last", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_single_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_case_insensitive", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_digit", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003358910000006432, "outcome": "passed"}, "call": {"duration": 0.0004988289999996454, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020938599999986707, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018229099999977905, "outcome": "passed"}, "call": {"duration": 0.00019175600000043147, "outcome": "passed"}, "teardown": {"duration": 0.00014292499999957187, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016252999999988305, "outcome": "passed"}, "call": {"duration": 0.00014758700000072622, "outcome": "passed"}, "teardown": {"duration": 0.00013105099999943803, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_first_and_last", "run.py", "test", ""], "setup": {"duration": 0.00015384900000015023, "outcome": "passed"}, "call": {"duration": 0.00037320800000006926, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00018030399999968694, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char", "lineno": 18, "outcome": "passed", "keywords": ["test_single_char", "run.py", "test", ""], "setup": {"duration": 0.00019646699999942285, "outcome": "passed"}, "call": {"duration": 0.00015788199999988706, "outcome": "passed"}, "teardown": {"duration": 0.0001349130000001253, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015600399999993186, "outcome": "passed"}, "call": {"duration": 0.00015743400000012286, "outcome": "passed"}, "teardown": {"duration": 0.00013536000000069492, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015556900000035512, "outcome": "passed"}, "call": {"duration": 0.00034477099999996597, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017613499999935556, "outcome": "passed"}}, {"nodeid": "run.py::test_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016756800000017336, "outcome": "passed"}, "call": {"duration": 0.00034981499999986454, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '!#$hello' == '!$hello#'\n  \n  - !$hello#\n  ?        -\n  + !#$hello\n  ?  +"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_special_characters():\n>       assert remove_Occ(\"!@#$hello@#\", \"@\") == \"!$hello#\"\nE       AssertionError: assert '!#$hello' == '!$hello#'\nE         \nE         - !$hello#\nE         ?        -\nE         + !#$hello\nE         ?  +\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017691099999961324, "outcome": "passed"}}, {"nodeid": "run.py::test_case_insensitive", "lineno": 30, "outcome": "failed", "keywords": ["test_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00017174200000003026, "outcome": "passed"}, "call": {"duration": 0.00034673399999984866, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'HeloWor' == 'HeoWorld'\n  \n  - HeoWorld\n  ?       --\n  + HeloWor\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_case_insensitive():\n>       assert remove_Occ(\"HelloWorld\", \"l\") == \"HeoWorld\"\nE       AssertionError: assert 'HeloWor' == 'HeoWorld'\nE         \nE         - HeoWorld\nE         ?       --\nE         + HeloWor\nE         ?   +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00018128700000019649, "outcome": "passed"}}, {"nodeid": "run.py::test_digit", "lineno": 33, "outcome": "passed", "keywords": ["test_digit", "run.py", "test", ""], "setup": {"duration": 0.00017814999999998804, "outcome": "passed"}, "call": {"duration": 0.00015415200000035156, "outcome": "passed"}, "teardown": {"duration": 0.0001651809999998477, "outcome": "passed"}}]}, {"created": 1733299825.5465124, "duration": 0.05197429656982422, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 7, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_multiple_removals", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_space_char", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_in_string", "run.py", "test", ""], "setup": {"duration": 0.00031408999999982257, "outcome": "passed"}, "call": {"duration": 0.00045104099999981884, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heloo'\n  \n  - heloo\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_in_string():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\nE       AssertionError: assert 'he' == 'heloo'\nE         \nE         - heloo\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020188100000062548, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.0001936369999997467, "outcome": "passed"}, "call": {"duration": 0.00020576899999991127, "outcome": "passed"}, "teardown": {"duration": 0.00013829500000017703, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00015778100000041206, "outcome": "passed"}, "call": {"duration": 0.00014590899999955553, "outcome": "passed"}, "teardown": {"duration": 0.00013200099999988169, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00016332000000041091, "outcome": "passed"}, "call": {"duration": 0.00016002699999972947, "outcome": "passed"}, "teardown": {"duration": 0.00013940899999997924, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_with_repeated_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.0001548909999993242, "outcome": "passed"}, "call": {"duration": 0.00014394400000039553, "outcome": "passed"}, "teardown": {"duration": 0.00012992799999977933, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00016080100000070985, "outcome": "passed"}, "call": {"duration": 0.0003717910000000657, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'bookkeepe' == 'bookkeepke'\n  \n  - bookkeepke\n  ?         -\n  + bookkeepe"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_char_at_end():\n>       assert remove_Occ(\"bookkeeper\", \"r\") == \"bookkeepke\"\nE       AssertionError: assert 'bookkeepe' == 'bookkeepke'\nE         \nE         - bookkeepke\nE         ?         -\nE         + bookkeepe\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00018004000000004794, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_removals", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_removals", "run.py", "test", ""], "setup": {"duration": 0.0001735829999995886, "outcome": "passed"}, "call": {"duration": 0.0003606260000008632, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_removals():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.0001755420000000285, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017784499999962122, "outcome": "passed"}, "call": {"duration": 0.00015555099999975397, "outcome": "passed"}, "teardown": {"duration": 0.00013483599999997153, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.0001656390000004393, "outcome": "passed"}, "call": {"duration": 0.0001718749999994884, "outcome": "passed"}, "teardown": {"duration": 0.0001311330000000055, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_space_char", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_with_space_char", "run.py", "test", ""], "setup": {"duration": 0.00015307399999997529, "outcome": "passed"}, "call": {"duration": 0.000141863999999714, "outcome": "passed"}, "teardown": {"duration": 0.00016905000000022596, "outcome": "passed"}}]}, {"created": 1733299825.6798387, "duration": 0.04792499542236328, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 6, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_single_character", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_char_not_in_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_first_and_last_same", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003159620000001695, "outcome": "passed"}, "call": {"duration": 0.0004853100000001831, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020889299999993227, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018139899999969344, "outcome": "passed"}, "call": {"duration": 0.00018776000000020332, "outcome": "passed"}, "teardown": {"duration": 0.00014022600000007657, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015892900000036292, "outcome": "passed"}, "call": {"duration": 0.00014648899999958331, "outcome": "passed"}, "teardown": {"duration": 0.0001475529999996894, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017484199999984185, "outcome": "passed"}, "call": {"duration": 0.0003617060000005168, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.0001801690000000633, "outcome": "passed"}}, {"nodeid": "run.py::test_single_character", "lineno": 18, "outcome": "passed", "keywords": ["test_single_character", "run.py", "test", ""], "setup": {"duration": 0.00016934300000048808, "outcome": "passed"}, "call": {"duration": 0.00015707699999989444, "outcome": "passed"}, "teardown": {"duration": 0.00013368399999968972, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015362699999954543, "outcome": "passed"}, "call": {"duration": 0.0001511680000003679, "outcome": "passed"}, "teardown": {"duration": 0.00013117399999984514, "outcome": "passed"}}, {"nodeid": "run.py::test_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015137200000037154, "outcome": "passed"}, "call": {"duration": 0.0001435020000002396, "outcome": "passed"}, "teardown": {"duration": 0.00013913600000048376, "outcome": "passed"}}, {"nodeid": "run.py::test_first_and_last_same", "lineno": 27, "outcome": "passed", "keywords": ["test_first_and_last_same", "run.py", "test", ""], "setup": {"duration": 0.0001519319999996327, "outcome": "passed"}, "call": {"duration": 0.0001404059999998708, "outcome": "passed"}, "teardown": {"duration": 0.00015475300000034053, "outcome": "passed"}}]}, {"created": 1733299826.8387454, "duration": 0.045480966567993164, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 5, "total": 7, "collected": 7}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 24}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003564869999994613, "outcome": "passed"}, "call": {"duration": 0.0004025049999993868, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020635400000035276, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019223000000057056, "outcome": "passed"}, "call": {"duration": 0.00037756099999963766, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00018754400000009497, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017139499999974106, "outcome": "passed"}, "call": {"duration": 0.00017168499999975495, "outcome": "passed"}, "teardown": {"duration": 0.00013288800000044176, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00015669099999993108, "outcome": "passed"}, "call": {"duration": 0.0001599810000003643, "outcome": "passed"}, "teardown": {"duration": 0.0001285349999999852, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017144400000024262, "outcome": "passed"}, "call": {"duration": 0.00014672799999981834, "outcome": "passed"}, "teardown": {"duration": 0.0001310219999997031, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015240099999935808, "outcome": "passed"}, "call": {"duration": 0.00016144399999973302, "outcome": "passed"}, "teardown": {"duration": 0.00012840599999996982, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015032200000053564, "outcome": "passed"}, "call": {"duration": 0.00014183700000014454, "outcome": "passed"}, "teardown": {"duration": 0.00015837800000007007, "outcome": "passed"}}]}, {"created": 1733299826.0287364, "duration": 0.05012917518615723, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 6, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_is_first", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_char_is_last", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00031737599999992483, "outcome": "passed"}, "call": {"duration": 0.00047588300000001027, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00025350700000004167, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00022333899999971152, "outcome": "passed"}, "call": {"duration": 0.0001807260000004085, "outcome": "passed"}, "teardown": {"duration": 0.00013703999999981065, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00015895300000012824, "outcome": "passed"}, "call": {"duration": 0.00015154900000036164, "outcome": "passed"}, "teardown": {"duration": 0.00013391099999982004, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.000157910999999622, "outcome": "passed"}, "call": {"duration": 0.00015820199999971862, "outcome": "passed"}, "teardown": {"duration": 0.00013037700000007035, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00016721600000035863, "outcome": "passed"}, "call": {"duration": 0.00016051499999969465, "outcome": "passed"}, "teardown": {"duration": 0.00014245099999987687, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015139400000041547, "outcome": "passed"}, "call": {"duration": 0.00014355699999990534, "outcome": "passed"}, "teardown": {"duration": 0.0001273319999999245, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_is_first", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_is_first", "run.py", "test", ""], "setup": {"duration": 0.0001500939999998785, "outcome": "passed"}, "call": {"duration": 0.00014191900000026791, "outcome": "passed"}, "teardown": {"duration": 0.00012692799999980409, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_is_last", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_char_is_last", "run.py", "test", ""], "setup": {"duration": 0.00016997300000021198, "outcome": "passed"}, "call": {"duration": 0.00035286600000006274, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'appl' == 'app'\n  \n  - app\n  + appl\n  ?    +"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_char_is_last():\n>       assert remove_Occ(\"apple\", \"e\") == \"app\"\nE       AssertionError: assert 'appl' == 'app'\nE         \nE         - app\nE         + appl\nE         ?    +\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00019140800000005953, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.000169459000000316, "outcome": "passed"}, "call": {"duration": 0.0003592409999999546, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00021389399999982572, "outcome": "passed"}}]}, {"created": 1733299825.6625972, "duration": 0.045326948165893555, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 5, "total": 7, "collected": 7}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 24}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00031540200000002017, "outcome": "passed"}, "call": {"duration": 0.0003758579999999512, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00019603100000020746, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001844179999999085, "outcome": "passed"}, "call": {"duration": 0.00017534500000015996, "outcome": "passed"}, "teardown": {"duration": 0.0001414020000001237, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001595889999999045, "outcome": "passed"}, "call": {"duration": 0.00015104199999971257, "outcome": "passed"}, "teardown": {"duration": 0.00013024200000000263, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015352000000001809, "outcome": "passed"}, "call": {"duration": 0.0003743300000000893, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017501499999994508, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00018074200000040008, "outcome": "passed"}, "call": {"duration": 0.00015653899999978904, "outcome": "passed"}, "teardown": {"duration": 0.00013368500000021655, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016148999999998637, "outcome": "passed"}, "call": {"duration": 0.000163217999999965, "outcome": "passed"}, "teardown": {"duration": 0.00013365200000015065, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015104100000007392, "outcome": "passed"}, "call": {"duration": 0.00015776100000008952, "outcome": "passed"}, "teardown": {"duration": 0.0001727060000003, "outcome": "passed"}}]}, {"created": 1733299826.8985462, "duration": 0.05613994598388672, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 6, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_char_at_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_char_at_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_first_and_last_of_same_char", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_single_char_string", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_single_char_string_not_present", "type": "Function", "lineno": 36}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0004188520000001361, "outcome": "passed"}, "call": {"duration": 0.0003715619999997699, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heloo'\n  \n  - heloo\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\nE       AssertionError: assert 'he' == 'heloo'\nE         \nE         - heloo\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00019766900000028897, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017815999999992727, "outcome": "passed"}, "call": {"duration": 0.00018116599999995486, "outcome": "passed"}, "teardown": {"duration": 0.00013923699999995875, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.0001594899999997068, "outcome": "passed"}, "call": {"duration": 0.00014618800000043564, "outcome": "passed"}, "teardown": {"duration": 0.0001306589999998664, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017407600000041157, "outcome": "passed"}, "call": {"duration": 0.0003535229999993561, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017608400000046487, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_start", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.0001709690000000208, "outcome": "passed"}, "call": {"duration": 0.0001543909999996984, "outcome": "passed"}, "teardown": {"duration": 0.0001379500000000533, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_end", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.0001545800000002373, "outcome": "passed"}, "call": {"duration": 0.0003314659999995584, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'appl' == 'apppl'\n  \n  - apppl\n  ?    -\n  + appl"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_char_at_end():\n>       assert remove_Occ(\"apple\", \"e\") == \"apppl\"\nE       AssertionError: assert 'appl' == 'apppl'\nE         \nE         - apppl\nE         ?    -\nE         + appl\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017502199999963608, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016967100000009339, "outcome": "passed"}, "call": {"duration": 0.00035369200000001655, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.0001764340000001141, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_of_same_char", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_first_and_last_of_same_char", "run.py", "test", ""], "setup": {"duration": 0.00017416999999930738, "outcome": "passed"}, "call": {"duration": 0.0003034489999995671, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'boo' == 'bookeeper'\n  \n  - bookeeper\n  + boo"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_of_same_char():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'boo' == 'bookeeper'\nE         \nE         - bookeeper\nE         + boo\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00018009199999990955, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 30, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001880050000000466, "outcome": "passed"}, "call": {"duration": 0.00015414599999985512, "outcome": "passed"}, "teardown": {"duration": 0.0001347499999999613, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string", "lineno": 33, "outcome": "passed", "keywords": ["test_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.0001539290000005522, "outcome": "passed"}, "call": {"duration": 0.00014966800000060232, "outcome": "passed"}, "teardown": {"duration": 0.0001283039999995239, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string_not_present", "lineno": 36, "outcome": "passed", "keywords": ["test_single_char_string_not_present", "run.py", "test", ""], "setup": {"duration": 0.00014944700000008027, "outcome": "passed"}, "call": {"duration": 0.00013933799999943375, "outcome": "passed"}, "teardown": {"duration": 0.00015813099999917313, "outcome": "passed"}}]}, {"created": 1733299826.6839366, "duration": 0.058251142501831055, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_unicode_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00036168999999919293, "outcome": "passed"}, "call": {"duration": 0.00044599699999992026, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002994689999997746, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00021996099999999075, "outcome": "passed"}, "call": {"duration": 0.00042633500000022195, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00019432199999958044, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018224400000033114, "outcome": "passed"}, "call": {"duration": 0.0001608749999997272, "outcome": "passed"}, "teardown": {"duration": 0.0001409820000004558, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00016530999999986307, "outcome": "passed"}, "call": {"duration": 0.00015131100000065345, "outcome": "passed"}, "teardown": {"duration": 0.00013136499999966134, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015676299999967114, "outcome": "passed"}, "call": {"duration": 0.00014536300000056457, "outcome": "passed"}, "teardown": {"duration": 0.0001406629999998188, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00016578400000000215, "outcome": "passed"}, "call": {"duration": 0.00014320400000045197, "outcome": "passed"}, "teardown": {"duration": 0.000130884999999914, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001806289999999322, "outcome": "passed"}, "call": {"duration": 0.0003806270000001888, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00020853999999914663, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017357299999964937, "outcome": "passed"}, "call": {"duration": 0.00035921400000038517, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '##$' == '##$$#'\n  \n  - ##$$#\n  ?    --\n  + ##$"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_special_characters():\n>       assert remove_Occ(\"#$#$$#\", \"$\") == \"##$$#\"\nE       AssertionError: assert '##$' == '##$$#'\nE         \nE         - ##$$#\nE         ?    --\nE         + ##$\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0002046629999998828, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00018228199999992256, "outcome": "passed"}, "call": {"duration": 0.0003712149999994807, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'Bnan' == 'Bnana'\n  \n  - Bnana\n  ?     -\n  + Bnan"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_case_insensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnana\"\nE       AssertionError: assert 'Bnan' == 'Bnana'\nE         \nE         - Bnana\nE         ?     -\nE         + Bnan\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.0001986580000004068, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_unicode_characters", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_unicode_characters", "run.py", "test", ""], "setup": {"duration": 0.0001857489999999018, "outcome": "passed"}, "call": {"duration": 0.00017636900000006506, "outcome": "passed"}, "teardown": {"duration": 0.0001785950000003922, "outcome": "passed"}}]}, {"created": 1733299826.758447, "duration": 0.04663896560668945, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 6, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_first_and_last_same_char", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00030308800000034, "outcome": "passed"}, "call": {"duration": 0.0004540789999998296, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00021256799999980203, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001787250000000462, "outcome": "passed"}, "call": {"duration": 0.00017099700000011708, "outcome": "passed"}, "teardown": {"duration": 0.0001440210000001052, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015889500000021428, "outcome": "passed"}, "call": {"duration": 0.00014311900000008038, "outcome": "passed"}, "teardown": {"duration": 0.0001284219999999614, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017260499999993684, "outcome": "passed"}, "call": {"duration": 0.00036261099999990165, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00020035500000004092, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016788100000031392, "outcome": "passed"}, "call": {"duration": 0.00015224199999996912, "outcome": "passed"}, "teardown": {"duration": 0.00013071200000025485, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.0001598249999998913, "outcome": "passed"}, "call": {"duration": 0.000143334000000106, "outcome": "passed"}, "teardown": {"duration": 0.00012872400000008, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00016197799999995155, "outcome": "passed"}, "call": {"duration": 0.0001398820000000356, "outcome": "passed"}, "teardown": {"duration": 0.00012498999999976945, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_first_and_last_same_char", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00014451400000004, "outcome": "passed"}, "call": {"duration": 0.0001688550000000788, "outcome": "passed"}, "teardown": {"duration": 0.00015712300000014778, "outcome": "passed"}}]}, {"created": 1733299827.1491137, "duration": 0.0703883171081543, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 7, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_multiple_first_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_multiple_last_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_single_character", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_first_and_last_of_single_character", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_empty_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_first_of_empty_string", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_last_of_empty_string", "type": "Function", "lineno": 36}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00048795400000001266, "outcome": "passed"}, "call": {"duration": 0.0005083849999998336, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00027827900000021444, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00024014400000016423, "outcome": "passed"}, "call": {"duration": 0.0001958359999996162, "outcome": "passed"}, "teardown": {"duration": 0.0001815400000002576, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00020316099999995174, "outcome": "passed"}, "call": {"duration": 0.0002112059999999083, "outcome": "passed"}, "teardown": {"duration": 0.000177360999999987, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019381100000037677, "outcome": "passed"}, "call": {"duration": 0.0004181270000001014, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.0002248040000001339, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_first_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_multiple_first_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0002030019999996746, "outcome": "passed"}, "call": {"duration": 0.0004044840000001493, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_first_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00021708100000017438, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_last_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_multiple_last_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00020903000000016547, "outcome": "passed"}, "call": {"duration": 0.00036745500000012754, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'misis' == 'mippi'\n  \n  - mippi\n  + misis"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_last_occurrences():\n>       assert remove_Occ(\"mississippi\", \"s\") == \"mippi\"\nE       AssertionError: assert 'misis' == 'mippi'\nE         \nE         - mippi\nE         + misis\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00021268199999990856, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_single_character", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_single_character", "run.py", "test", ""], "setup": {"duration": 0.00022409299999992527, "outcome": "passed"}, "call": {"duration": 0.00019259799999993277, "outcome": "passed"}, "teardown": {"duration": 0.00017748100000014588, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_of_single_character", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_first_and_last_of_single_character", "run.py", "test", ""], "setup": {"duration": 0.00021629300000025609, "outcome": "passed"}, "call": {"duration": 0.00019118400000017743, "outcome": "passed"}, "teardown": {"duration": 0.00017314499999976363, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_empty_string", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0002209980000000833, "outcome": "passed"}, "call": {"duration": 0.00018658599999987757, "outcome": "passed"}, "teardown": {"duration": 0.00018870700000039875, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_of_empty_string", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_first_of_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00021567000000022318, "outcome": "passed"}, "call": {"duration": 0.00018523400000036716, "outcome": "passed"}, "teardown": {"duration": 0.00018147000000023894, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_of_empty_string", "lineno": 36, "outcome": "passed", "keywords": ["test_remove_last_of_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00022219299999992614, "outcome": "passed"}, "call": {"duration": 0.00019568200000019687, "outcome": "passed"}, "teardown": {"duration": 0.00022630099999965125, "outcome": "passed"}}]}, {"created": 1733299826.9887893, "duration": 0.04457426071166992, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 1, "passed": 4, "total": 5, "collected": 5}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test1", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test2", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test3", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test4", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test5", "type": "Function", "lineno": 18}]}], "tests": [{"nodeid": "run.py::test1", "lineno": 6, "outcome": "failed", "keywords": ["test1", "run.py", "test", ""], "setup": {"duration": 0.00036852599999992464, "outcome": "passed"}, "call": {"duration": 0.0005111929999999099, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test1():\n>       assert remove_Occ(\"hello\",\"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002161470000001664, "outcome": "passed"}}, {"nodeid": "run.py::test2", "lineno": 9, "outcome": "passed", "keywords": ["test2", "run.py", "test", ""], "setup": {"duration": 0.000196268000000277, "outcome": "passed"}, "call": {"duration": 0.0001863179999999076, "outcome": "passed"}, "teardown": {"duration": 0.00014197000000004678, "outcome": "passed"}}, {"nodeid": "run.py::test3", "lineno": 12, "outcome": "passed", "keywords": ["test3", "run.py", "test", ""], "setup": {"duration": 0.00017564700000027855, "outcome": "passed"}, "call": {"duration": 0.00015827600000006825, "outcome": "passed"}, "teardown": {"duration": 0.00013372699999969484, "outcome": "passed"}}, {"nodeid": "run.py::test4", "lineno": 15, "outcome": "passed", "keywords": ["test4", "run.py", "test", ""], "setup": {"duration": 0.0001541999999998822, "outcome": "passed"}, "call": {"duration": 0.00015249899999991712, "outcome": "passed"}, "teardown": {"duration": 0.00013043399999990157, "outcome": "passed"}}, {"nodeid": "run.py::test5", "lineno": 18, "outcome": "passed", "keywords": ["test5", "run.py", "test", ""], "setup": {"duration": 0.0001502169999998415, "outcome": "passed"}, "call": {"duration": 0.00014994199999973645, "outcome": "passed"}, "teardown": {"duration": 0.0001712849999999655, "outcome": "passed"}}]}, {"created": 1733299826.6951559, "duration": 0.05734825134277344, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 3, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_case_sensitivity", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003829929999996651, "outcome": "passed"}, "call": {"duration": 0.0005464210000001302, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002569850000000429, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00021580100000040403, "outcome": "passed"}, "call": {"duration": 0.00019110599999994093, "outcome": "passed"}, "teardown": {"duration": 0.00015006200000033942, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016504100000069855, "outcome": "passed"}, "call": {"duration": 0.00014909799999962559, "outcome": "passed"}, "teardown": {"duration": 0.00012854399999984167, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.0001518450000004279, "outcome": "passed"}, "call": {"duration": 0.00032433300000001, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'a' == 'ale'\n  \n  - ale\n  + a"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"apple\", \"p\") == \"ale\"\nE       AssertionError: assert 'a' == 'ale'\nE         \nE         - ale\nE         + a\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00019095199999963341, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017382099999974088, "outcome": "passed"}, "call": {"duration": 0.0001537470000005925, "outcome": "passed"}, "teardown": {"duration": 0.00013395800000015612, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.000158493999999898, "outcome": "passed"}, "call": {"duration": 0.00034485100000036795, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00018006200000009187, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_case_sensitivity", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_case_sensitivity", "run.py", "test", ""], "setup": {"duration": 0.0001731920000000997, "outcome": "passed"}, "call": {"duration": 0.00030573899999986054, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'CaeSen' == 'CaseSensitve'\n  \n  - CaseSensitve\n  + CaeSen"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_case_sensitivity():\n>       assert remove_Occ(\"CaseSensitive\", \"s\") == \"CaseSensitve\"\nE       AssertionError: assert 'CaeSen' == 'CaseSensitve'\nE         \nE         - CaseSensitve\nE         + CaeSen\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017811299999959118, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016830700000003418, "outcome": "passed"}, "call": {"duration": 0.0003678440000003391, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'helloworld' == 'hello@orld'\n  \n  - hello@orld\n  ?      ^\n  + helloworld\n  ?      ^"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"hello@world\", \"@\") == \"hello@orld\"\nE       AssertionError: assert 'helloworld' == 'hello@orld'\nE         \nE         - hello@orld\nE         ?      ^\nE         + helloworld\nE         ?      ^\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017932100000006557, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017609399999951592, "outcome": "passed"}, "call": {"duration": 0.00034297300000041275, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert '!!hello!!' == 'hello!!!'\n  \n  - hello!!!\n  ?        -\n  + !!hello!!\n  ? ++"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_special_characters():\n>       assert remove_Occ(\"!!!hello!!!\", \"!\") == \"hello!!!\"\nE       AssertionError: assert '!!hello!!' == 'hello!!!'\nE         \nE         - hello!!!\nE         ?        -\nE         + !!hello!!\nE         ? ++\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00021153899999948322, "outcome": "passed"}}]}, {"created": 1733299826.9681091, "duration": 0.10667943954467773, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_first_and_last", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_single_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_case_insensitive", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_digit", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0016553460000001685, "outcome": "passed"}, "call": {"duration": 0.0010028790000000676, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0004631850000000881, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0004094769999998249, "outcome": "passed"}, "call": {"duration": 0.00030103400000003333, "outcome": "passed"}, "teardown": {"duration": 0.0002482370000000955, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002421959999998613, "outcome": "passed"}, "call": {"duration": 0.000246196999999615, "outcome": "passed"}, "teardown": {"duration": 0.00023449299999978024, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_first_and_last", "run.py", "test", ""], "setup": {"duration": 0.0002850990000000664, "outcome": "passed"}, "call": {"duration": 0.0006270690000000911, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.0003291560000002747, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char", "lineno": 18, "outcome": "passed", "keywords": ["test_single_char", "run.py", "test", ""], "setup": {"duration": 0.0003666120000000994, "outcome": "passed"}, "call": {"duration": 0.0002957770000002746, "outcome": "passed"}, "teardown": {"duration": 0.00026367900000012767, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00030323800000031653, "outcome": "passed"}, "call": {"duration": 0.0002794530000000961, "outcome": "passed"}, "teardown": {"duration": 0.0002368729999999708, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0002532030000002017, "outcome": "passed"}, "call": {"duration": 0.0005418659999998354, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00029034800000005134, "outcome": "passed"}}, {"nodeid": "run.py::test_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00025712799999988434, "outcome": "passed"}, "call": {"duration": 0.0005500860000000607, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '!#$hello' == '!$hello#'\n  \n  - !$hello#\n  ?        -\n  + !#$hello\n  ?  +"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_special_characters():\n>       assert remove_Occ(\"!@#$hello@#\", \"@\") == \"!$hello#\"\nE       AssertionError: assert '!#$hello' == '!$hello#'\nE         \nE         - !$hello#\nE         ?        -\nE         + !#$hello\nE         ?  +\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00031310299999987024, "outcome": "passed"}}, {"nodeid": "run.py::test_case_insensitive", "lineno": 30, "outcome": "failed", "keywords": ["test_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.000276198999999977, "outcome": "passed"}, "call": {"duration": 0.0005654349999999475, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'HeloWor' == 'HeoWorld'\n  \n  - HeoWorld\n  ?       --\n  + HeloWor\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_case_insensitive():\n>       assert remove_Occ(\"HelloWorld\", \"l\") == \"HeoWorld\"\nE       AssertionError: assert 'HeloWor' == 'HeoWorld'\nE         \nE         - HeoWorld\nE         ?       --\nE         + HeloWor\nE         ?   +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.0003091290000001301, "outcome": "passed"}}, {"nodeid": "run.py::test_digit", "lineno": 33, "outcome": "passed", "keywords": ["test_digit", "run.py", "test", ""], "setup": {"duration": 0.00038371199999964745, "outcome": "passed"}, "call": {"duration": 0.00027537699999991005, "outcome": "passed"}, "teardown": {"duration": 0.0003109759999997408, "outcome": "passed"}}]}, {"created": 1733299826.8899848, "duration": 0.05152010917663574, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 7, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_multiple_removals", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_space_char", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_in_string", "run.py", "test", ""], "setup": {"duration": 0.00030045899999997516, "outcome": "passed"}, "call": {"duration": 0.0004432560000005026, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heloo'\n  \n  - heloo\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_in_string():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\nE       AssertionError: assert 'he' == 'heloo'\nE         \nE         - heloo\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00019849700000040826, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00019154099999951768, "outcome": "passed"}, "call": {"duration": 0.00018086099999958805, "outcome": "passed"}, "teardown": {"duration": 0.0001411229999996877, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00015478899999976647, "outcome": "passed"}, "call": {"duration": 0.00014337800000063794, "outcome": "passed"}, "teardown": {"duration": 0.00014027699999985543, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015929799999980787, "outcome": "passed"}, "call": {"duration": 0.00014727800000002844, "outcome": "passed"}, "teardown": {"duration": 0.00013295399999968538, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_with_repeated_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00015426499999993126, "outcome": "passed"}, "call": {"duration": 0.00014190000000002811, "outcome": "passed"}, "teardown": {"duration": 0.0001336769999999987, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.0001616680000005033, "outcome": "passed"}, "call": {"duration": 0.00036642400000008735, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'bookkeepe' == 'bookkeepke'\n  \n  - bookkeepke\n  ?         -\n  + bookkeepe"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_char_at_end():\n>       assert remove_Occ(\"bookkeeper\", \"r\") == \"bookkeepke\"\nE       AssertionError: assert 'bookkeepe' == 'bookkeepke'\nE         \nE         - bookkeepke\nE         ?         -\nE         + bookkeepe\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017286699999985444, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_removals", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_removals", "run.py", "test", ""], "setup": {"duration": 0.00017268999999942025, "outcome": "passed"}, "call": {"duration": 0.00035174499999968134, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_removals():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017020999999939335, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001637700000003406, "outcome": "passed"}, "call": {"duration": 0.00016696299999985342, "outcome": "passed"}, "teardown": {"duration": 0.0001315599999998085, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00015199100000007348, "outcome": "passed"}, "call": {"duration": 0.0001411209999995222, "outcome": "passed"}, "teardown": {"duration": 0.00012992700000058477, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_space_char", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_with_space_char", "run.py", "test", ""], "setup": {"duration": 0.00014581299999960606, "outcome": "passed"}, "call": {"duration": 0.00013889199999983504, "outcome": "passed"}, "teardown": {"duration": 0.00015498499999999638, "outcome": "passed"}}]}, {"created": 1733299827.1212583, "duration": 0.051055192947387695, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 6, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_single_character", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_char_not_in_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_first_and_last_same", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0004026710000000211, "outcome": "passed"}, "call": {"duration": 0.0005787150000000629, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00029296700000003284, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00021649799999989838, "outcome": "passed"}, "call": {"duration": 0.00018174599999998264, "outcome": "passed"}, "teardown": {"duration": 0.00013808499999989898, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016938900000007528, "outcome": "passed"}, "call": {"duration": 0.0001504979999999989, "outcome": "passed"}, "teardown": {"duration": 0.0001287960000000421, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001697999999998867, "outcome": "passed"}, "call": {"duration": 0.000427177999999806, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00018995999999993352, "outcome": "passed"}}, {"nodeid": "run.py::test_single_character", "lineno": 18, "outcome": "passed", "keywords": ["test_single_character", "run.py", "test", ""], "setup": {"duration": 0.00016597699999998383, "outcome": "passed"}, "call": {"duration": 0.00015775599999989787, "outcome": "passed"}, "teardown": {"duration": 0.00013094000000002382, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015707100000006413, "outcome": "passed"}, "call": {"duration": 0.00014537600000008588, "outcome": "passed"}, "teardown": {"duration": 0.00012684500000004206, "outcome": "passed"}}, {"nodeid": "run.py::test_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015566700000002598, "outcome": "passed"}, "call": {"duration": 0.0001434900000001349, "outcome": "passed"}, "teardown": {"duration": 0.00012379699999987004, "outcome": "passed"}}, {"nodeid": "run.py::test_first_and_last_same", "lineno": 27, "outcome": "passed", "keywords": ["test_first_and_last_same", "run.py", "test", ""], "setup": {"duration": 0.000145302999999819, "outcome": "passed"}, "call": {"duration": 0.0001417310000000338, "outcome": "passed"}, "teardown": {"duration": 0.00016719499999995335, "outcome": "passed"}}]}, {"created": 1733299827.6169167, "duration": 0.057894229888916016, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 5, "total": 7, "collected": 7}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 24}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00039203199999970906, "outcome": "passed"}, "call": {"duration": 0.0005225439999998471, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00022866800000009846, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00020403200000007615, "outcome": "passed"}, "call": {"duration": 0.00044028200000001405, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00024707900000020544, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002005670000002624, "outcome": "passed"}, "call": {"duration": 0.0001893119999998305, "outcome": "passed"}, "teardown": {"duration": 0.00018819299999961459, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00019905499999994802, "outcome": "passed"}, "call": {"duration": 0.00018277800000010558, "outcome": "passed"}, "teardown": {"duration": 0.00018784099999979986, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0002002910000000746, "outcome": "passed"}, "call": {"duration": 0.00018133499999972713, "outcome": "passed"}, "teardown": {"duration": 0.00019279300000007993, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00020048500000013902, "outcome": "passed"}, "call": {"duration": 0.00018674299999998922, "outcome": "passed"}, "teardown": {"duration": 0.00020476599999996736, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00019212400000023777, "outcome": "passed"}, "call": {"duration": 0.00018121799999981647, "outcome": "passed"}, "teardown": {"duration": 0.0002287870000001746, "outcome": "passed"}}]}, {"created": 1733299826.9714234, "duration": 0.049814701080322266, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 6, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_is_first", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_char_is_last", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00031194700000014564, "outcome": "passed"}, "call": {"duration": 0.0004732250000003546, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020110799999972784, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019005199999977407, "outcome": "passed"}, "call": {"duration": 0.0001757539999998059, "outcome": "passed"}, "teardown": {"duration": 0.0001416989999993845, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.0001578760000002788, "outcome": "passed"}, "call": {"duration": 0.00015369599999992545, "outcome": "passed"}, "teardown": {"duration": 0.00013251300000050037, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015231999999976154, "outcome": "passed"}, "call": {"duration": 0.00014148799999968986, "outcome": "passed"}, "teardown": {"duration": 0.00012917299999948284, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00014721599999933943, "outcome": "passed"}, "call": {"duration": 0.0001391250000004618, "outcome": "passed"}, "teardown": {"duration": 0.00012724999999935704, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00014872700000001515, "outcome": "passed"}, "call": {"duration": 0.00013847000000044574, "outcome": "passed"}, "teardown": {"duration": 0.00012548299999970425, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_is_first", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_is_first", "run.py", "test", ""], "setup": {"duration": 0.00015401599999975701, "outcome": "passed"}, "call": {"duration": 0.00014361100000037652, "outcome": "passed"}, "teardown": {"duration": 0.00012943599999992728, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_is_last", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_char_is_last", "run.py", "test", ""], "setup": {"duration": 0.00014638599999994284, "outcome": "passed"}, "call": {"duration": 0.00036492100000007355, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'appl' == 'app'\n  \n  - app\n  + appl\n  ?    +"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_char_is_last():\n>       assert remove_Occ(\"apple\", \"e\") == \"app\"\nE       AssertionError: assert 'appl' == 'app'\nE         \nE         - app\nE         + appl\nE         ?    +\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0001855009999998103, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00018583700000007752, "outcome": "passed"}, "call": {"duration": 0.00036746500000006677, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00019994300000014675, "outcome": "passed"}}]}, {"created": 1733299826.5196617, "duration": 0.04511260986328125, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 5, "total": 7, "collected": 7}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 24}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00035469300000023907, "outcome": "passed"}, "call": {"duration": 0.00040395999999987, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0001945379999996888, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017885299999953475, "outcome": "passed"}, "call": {"duration": 0.00017420699999970424, "outcome": "passed"}, "teardown": {"duration": 0.00013791499999982193, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001757800000001808, "outcome": "passed"}, "call": {"duration": 0.00015859400000017843, "outcome": "passed"}, "teardown": {"duration": 0.00013567899999955557, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015619499999974806, "outcome": "passed"}, "call": {"duration": 0.00037588599999960337, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017552799999975832, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00017695100000025832, "outcome": "passed"}, "call": {"duration": 0.00015394900000043066, "outcome": "passed"}, "teardown": {"duration": 0.00013276599999922922, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015300300000031797, "outcome": "passed"}, "call": {"duration": 0.0001488460000000913, "outcome": "passed"}, "teardown": {"duration": 0.00012797999999936138, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.0001517670000001914, "outcome": "passed"}, "call": {"duration": 0.00016083299999980483, "outcome": "passed"}, "teardown": {"duration": 0.00017252600000006169, "outcome": "passed"}}]}, {"created": 1733299827.243009, "duration": 0.07132792472839355, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 6, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_char_at_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_char_at_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_first_and_last_of_same_char", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_single_char_string", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_single_char_string_not_present", "type": "Function", "lineno": 36}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0004728659999999607, "outcome": "passed"}, "call": {"duration": 0.0004975690000001975, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heloo'\n  \n  - heloo\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\nE       AssertionError: assert 'he' == 'heloo'\nE         \nE         - heloo\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0003629919999998954, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00023933700000000613, "outcome": "passed"}, "call": {"duration": 0.00021391400000014826, "outcome": "passed"}, "teardown": {"duration": 0.00023826200000010012, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00018955300000000896, "outcome": "passed"}, "call": {"duration": 0.00018726299999993756, "outcome": "passed"}, "teardown": {"duration": 0.0002194799999999386, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019039700000011983, "outcome": "passed"}, "call": {"duration": 0.000432788999999989, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00020326599999997974, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_start", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00018383500000007658, "outcome": "passed"}, "call": {"duration": 0.00016712099999982577, "outcome": "passed"}, "teardown": {"duration": 0.00025262599999997803, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_end", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00018743300000001462, "outcome": "passed"}, "call": {"duration": 0.000396397999999909, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'appl' == 'apppl'\n  \n  - apppl\n  ?    -\n  + appl"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_char_at_end():\n>       assert remove_Occ(\"apple\", \"e\") == \"apppl\"\nE       AssertionError: assert 'appl' == 'apppl'\nE         \nE         - apppl\nE         ?    -\nE         + appl\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00022018799999989902, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00019309300000003304, "outcome": "passed"}, "call": {"duration": 0.0004427460000000494, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00021762899999999696, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_of_same_char", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_first_and_last_of_same_char", "run.py", "test", ""], "setup": {"duration": 0.00022885600000011053, "outcome": "passed"}, "call": {"duration": 0.00038484800000015973, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'boo' == 'bookeeper'\n  \n  - bookeeper\n  + boo"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_of_same_char():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'boo' == 'bookeeper'\nE         \nE         - bookeeper\nE         + boo\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00020788899999990562, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 30, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00020173099999998279, "outcome": "passed"}, "call": {"duration": 0.00019654899999999031, "outcome": "passed"}, "teardown": {"duration": 0.00023733400000014448, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string", "lineno": 33, "outcome": "passed", "keywords": ["test_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00017225000000009594, "outcome": "passed"}, "call": {"duration": 0.00019793899999998033, "outcome": "passed"}, "teardown": {"duration": 0.0002140019999998799, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string_not_present", "lineno": 36, "outcome": "passed", "keywords": ["test_single_char_string_not_present", "run.py", "test", ""], "setup": {"duration": 0.0001913470000001194, "outcome": "passed"}, "call": {"duration": 0.0001986249999998968, "outcome": "passed"}, "teardown": {"duration": 0.00018550900000002812, "outcome": "passed"}}]}, {"created": 1733299826.6947706, "duration": 0.05421638488769531, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_unicode_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00030643100000027346, "outcome": "passed"}, "call": {"duration": 0.0004275820000003705, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00019736800000025312, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019867500000003702, "outcome": "passed"}, "call": {"duration": 0.00036622100000016644, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00018027399999986926, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001731539999996201, "outcome": "passed"}, "call": {"duration": 0.00015528999999947501, "outcome": "passed"}, "teardown": {"duration": 0.0001422440000000691, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00015874400000015498, "outcome": "passed"}, "call": {"duration": 0.00014370400000007777, "outcome": "passed"}, "teardown": {"duration": 0.00012884499999987753, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001537330000003223, "outcome": "passed"}, "call": {"duration": 0.00014766899999951733, "outcome": "passed"}, "teardown": {"duration": 0.00012817600000047946, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015935199999983496, "outcome": "passed"}, "call": {"duration": 0.00014025800000005972, "outcome": "passed"}, "teardown": {"duration": 0.00012704500000015884, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00014852799999953703, "outcome": "passed"}, "call": {"duration": 0.0003484949999998932, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.0001729579999993902, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001763180000002862, "outcome": "passed"}, "call": {"duration": 0.00032995999999929637, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '##$' == '##$$#'\n  \n  - ##$$#\n  ?    --\n  + ##$"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_special_characters():\n>       assert remove_Occ(\"#$#$$#\", \"$\") == \"##$$#\"\nE       AssertionError: assert '##$' == '##$$#'\nE         \nE         - ##$$#\nE         ?    --\nE         + ##$\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017385599999997225, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00016621500000013611, "outcome": "passed"}, "call": {"duration": 0.0003297140000002585, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'Bnan' == 'Bnana'\n  \n  - Bnana\n  ?     -\n  + Bnan"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_case_insensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnana\"\nE       AssertionError: assert 'Bnan' == 'Bnana'\nE         \nE         - Bnana\nE         ?     -\nE         + Bnan\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00016742700000005328, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_unicode_characters", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_unicode_characters", "run.py", "test", ""], "setup": {"duration": 0.00016138799999954045, "outcome": "passed"}, "call": {"duration": 0.00017708599999988195, "outcome": "passed"}, "teardown": {"duration": 0.00016434499999995467, "outcome": "passed"}}]}, {"created": 1733299827.0866024, "duration": 0.04639840126037598, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 2, "passed": 6, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_first_and_last_same_char", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003164220000000384, "outcome": "passed"}, "call": {"duration": 0.00046447199999999356, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0001920420000001144, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019192500000020374, "outcome": "passed"}, "call": {"duration": 0.00017142500000044691, "outcome": "passed"}, "teardown": {"duration": 0.00013887800000045303, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015747299999979703, "outcome": "passed"}, "call": {"duration": 0.0001500260000000253, "outcome": "passed"}, "teardown": {"duration": 0.00013153199999926812, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015772900000055046, "outcome": "passed"}, "call": {"duration": 0.0003799650000004817, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.0001773280000003652, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00018137400000028947, "outcome": "passed"}, "call": {"duration": 0.0001530839999999145, "outcome": "passed"}, "teardown": {"duration": 0.00013355000000014883, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00015297000000025207, "outcome": "passed"}, "call": {"duration": 0.00014590899999955553, "outcome": "passed"}, "teardown": {"duration": 0.0001268669999996419, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00014931099999948572, "outcome": "passed"}, "call": {"duration": 0.0001587350000002985, "outcome": "passed"}, "teardown": {"duration": 0.00013708399999945442, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_first_and_last_same_char", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00015426399999984852, "outcome": "passed"}, "call": {"duration": 0.00016050999999972504, "outcome": "passed"}, "teardown": {"duration": 0.00016777100000009426, "outcome": "passed"}}]}, {"created": 1733299826.9226484, "duration": 0.054062843322753906, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 7, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_multiple_first_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_multiple_last_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_single_character", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_first_and_last_of_single_character", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_empty_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_first_of_empty_string", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_last_of_empty_string", "type": "Function", "lineno": 36}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00038864600000021454, "outcome": "passed"}, "call": {"duration": 0.0003888989999998316, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00019250400000014878, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018046199999943724, "outcome": "passed"}, "call": {"duration": 0.00016460600000023362, "outcome": "passed"}, "teardown": {"duration": 0.00013914499999945207, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.0001768090000000555, "outcome": "passed"}, "call": {"duration": 0.00016047100000005088, "outcome": "passed"}, "teardown": {"duration": 0.0001290379999998592, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00014999400000004215, "outcome": "passed"}, "call": {"duration": 0.0003595100000000073, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017396500000010917, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_first_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_multiple_first_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017139900000007202, "outcome": "passed"}, "call": {"duration": 0.0003393780000005009, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_first_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00017082899999998347, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_last_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_multiple_last_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016523199999962657, "outcome": "passed"}, "call": {"duration": 0.00030606899999963133, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'misis' == 'mippi'\n  \n  - mippi\n  + misis"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_last_occurrences():\n>       assert remove_Occ(\"mississippi\", \"s\") == \"mippi\"\nE       AssertionError: assert 'misis' == 'mippi'\nE         \nE         - mippi\nE         + misis\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00016738400000004816, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_single_character", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_single_character", "run.py", "test", ""], "setup": {"duration": 0.00016579399999994138, "outcome": "passed"}, "call": {"duration": 0.00015953200000051737, "outcome": "passed"}, "teardown": {"duration": 0.00013166300000033715, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_of_single_character", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_first_and_last_of_single_character", "run.py", "test", ""], "setup": {"duration": 0.00014934899999996532, "outcome": "passed"}, "call": {"duration": 0.00013967800000003194, "outcome": "passed"}, "teardown": {"duration": 0.00013628499999995825, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_empty_string", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00014582699999987625, "outcome": "passed"}, "call": {"duration": 0.00013628300000068094, "outcome": "passed"}, "teardown": {"duration": 0.00012481300000022344, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_of_empty_string", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_first_of_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015611300000006878, "outcome": "passed"}, "call": {"duration": 0.00013862100000050503, "outcome": "passed"}, "teardown": {"duration": 0.00012415900000029012, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_of_empty_string", "lineno": 36, "outcome": "passed", "keywords": ["test_remove_last_of_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001422959999999307, "outcome": "passed"}, "call": {"duration": 0.00015425800000024026, "outcome": "passed"}, "teardown": {"duration": 0.0001585300000002121, "outcome": "passed"}}]}]