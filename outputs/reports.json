[{"created": 1733296039.4246109, "duration": 0.019634008407592773, "exitcode": 0, "root": "/test", "environment": {}, "summary": {"passed": 5, "total": 5, "collected": 5}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test1", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test2", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test3", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test4", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test5", "type": "Function", "lineno": 22}]}], "tests": [{"nodeid": "run.py::test1", "lineno": 10, "outcome": "passed", "keywords": ["test1", "run.py", "test", ""], "setup": {"duration": 0.00030482599999981375, "outcome": "passed"}, "call": {"duration": 0.00018607499999978572, "outcome": "passed"}, "teardown": {"duration": 0.00017383000000004145, "outcome": "passed"}}, {"nodeid": "run.py::test2", "lineno": 13, "outcome": "passed", "keywords": ["test2", "run.py", "test", ""], "setup": {"duration": 0.00016735300000014774, "outcome": "passed"}, "call": {"duration": 0.0002391120000000413, "outcome": "passed"}, "teardown": {"duration": 0.00013876499999998515, "outcome": "passed"}}, {"nodeid": "run.py::test3", "lineno": 16, "outcome": "passed", "keywords": ["test3", "run.py", "test", ""], "setup": {"duration": 0.0001562669999999322, "outcome": "passed"}, "call": {"duration": 0.00015975999999984225, "outcome": "passed"}, "teardown": {"duration": 0.00013274799999996034, "outcome": "passed"}}, {"nodeid": "run.py::test4", "lineno": 19, "outcome": "passed", "keywords": ["test4", "run.py", "test", ""], "setup": {"duration": 0.0001561319999998645, "outcome": "passed"}, "call": {"duration": 0.00014886800000013523, "outcome": "passed"}, "teardown": {"duration": 0.00014102500000001683, "outcome": "passed"}}, {"nodeid": "run.py::test5", "lineno": 22, "outcome": "passed", "keywords": ["test5", "run.py", "test", ""], "setup": {"duration": 0.00015413999999980277, "outcome": "passed"}, "call": {"duration": 0.00014260099999985343, "outcome": "passed"}, "teardown": {"duration": 0.00015775199999978895, "outcome": "passed"}}]}, {"created": 1733296041.3945112, "duration": 0.05139493942260742, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 11, "failed": 1, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_char_at_start", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_char_at_end", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_case_sensitive", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_special_chars", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_remove_Occ_multiple_special_chars", "type": "Function", "lineno": 34}, {"nodeid": "run.py::test_remove_Occ_whole_string", "type": "Function", "lineno": 37}, {"nodeid": "run.py::test_remove_Occ_empty_string_input", "type": "Function", "lineno": 40}, {"nodeid": "run.py::test_remove_Occ_string_with_no_removal", "type": "Function", "lineno": 43}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.0003901690000001068, "outcome": "passed"}, "call": {"duration": 0.0001879339999999452, "outcome": "passed"}, "teardown": {"duration": 0.0001592260000000678, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00016515200000011276, "outcome": "passed"}, "call": {"duration": 0.00015341100000010321, "outcome": "passed"}, "teardown": {"duration": 0.00013496399999990416, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00014997000000005478, "outcome": "passed"}, "call": {"duration": 0.00014678700000003708, "outcome": "passed"}, "teardown": {"duration": 0.00012903000000008547, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001571590000000178, "outcome": "passed"}, "call": {"duration": 0.0001462270000001098, "outcome": "passed"}, "teardown": {"duration": 0.0001299969999999373, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_at_start", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_Occ_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00016648600000013225, "outcome": "passed"}, "call": {"duration": 0.00014855300000005123, "outcome": "passed"}, "teardown": {"duration": 0.00013159399999995713, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_at_end", "lineno": 25, "outcome": "passed", "keywords": ["test_remove_Occ_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.0001474289999998657, "outcome": "passed"}, "call": {"duration": 0.00015492100000003006, "outcome": "passed"}, "teardown": {"duration": 0.0001268399999998504, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_sensitive", "lineno": 28, "outcome": "passed", "keywords": ["test_remove_Occ_case_sensitive", "run.py", "test", ""], "setup": {"duration": 0.00014625099999987512, "outcome": "passed"}, "call": {"duration": 0.00014426700000003123, "outcome": "passed"}, "teardown": {"duration": 0.00013727900000004567, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_special_chars", "lineno": 31, "outcome": "passed", "keywords": ["test_remove_Occ_special_chars", "run.py", "test", ""], "setup": {"duration": 0.0001467710000000455, "outcome": "passed"}, "call": {"duration": 0.00014296700000016038, "outcome": "passed"}, "teardown": {"duration": 0.00012611699999998116, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_special_chars", "lineno": 34, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_special_chars", "run.py", "test", ""], "setup": {"duration": 0.00017212999999993706, "outcome": "passed"}, "call": {"duration": 0.0003939379999999826, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 36, "message": "AssertionError: assert '!hello!' == 'hello!!'\n  \n  - hello!!\n  ?       -\n  + !hello!\n  ? +"}, "traceback": [{"path": "run.py", "lineno": 36, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_special_chars():\n>       assert remove_Occ(\"!!hello!!\", \"!\") == \"hello!!\"\nE       AssertionError: assert '!hello!' == 'hello!!'\nE         \nE         - hello!!\nE         ?       -\nE         + !hello!\nE         ? +\n\nrun.py:36: AssertionError"}, "teardown": {"duration": 0.0001839299999999433, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_whole_string", "lineno": 37, "outcome": "passed", "keywords": ["test_remove_Occ_whole_string", "run.py", "test", ""], "setup": {"duration": 0.00017280200000002743, "outcome": "passed"}, "call": {"duration": 0.0001613409999998705, "outcome": "passed"}, "teardown": {"duration": 0.00013381899999997948, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string_input", "lineno": 40, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string_input", "run.py", "test", ""], "setup": {"duration": 0.00015429000000000137, "outcome": "passed"}, "call": {"duration": 0.00015529899999999763, "outcome": "passed"}, "teardown": {"duration": 0.0001352809999999316, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_string_with_no_removal", "lineno": 43, "outcome": "passed", "keywords": ["test_remove_Occ_string_with_no_removal", "run.py", "test", ""], "setup": {"duration": 0.00015202399999991734, "outcome": "passed"}, "call": {"duration": 0.00014512699999991163, "outcome": "passed"}, "teardown": {"duration": 0.00017822900000008524, "outcome": "passed"}}]}, {"created": 1733296040.9143336, "duration": 0.05692768096923828, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 6, "failed": 4, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_single_character_from_start", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_middle", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_OCC_removes_single_character_from_end", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_start", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_middle", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_end", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_leaves_string_unchanged_if_no_occurrences", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_single_character", "type": "Function", "lineno": 34}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_multiple_same_characters", "type": "Function", "lineno": 37}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_single_character_from_start", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_Occ_removes_single_character_from_start", "run.py", "test", ""], "setup": {"duration": 0.0003424920000001386, "outcome": "passed"}, "call": {"duration": 0.0002116760000001605, "outcome": "passed"}, "teardown": {"duration": 0.00016187500000031108, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_middle", "lineno": 13, "outcome": "failed", "keywords": ["test_remove_Occ_removes_single_character_from_middle", "run.py", "test", ""], "setup": {"duration": 0.0001643929999999294, "outcome": "passed"}, "call": {"duration": 0.0004290260000003876, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 15, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 15, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_single_character_from_middle():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:15: AssertionError"}, "teardown": {"duration": 0.0002489059999999377, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_OCC_removes_single_character_from_end", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_OCC_removes_single_character_from_end", "run.py", "test", ""], "setup": {"duration": 0.0001970299999998204, "outcome": "passed"}, "call": {"duration": 0.00017226099999989586, "outcome": "passed"}, "teardown": {"duration": 0.00013989100000033616, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_start", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_start", "run.py", "test", ""], "setup": {"duration": 0.00017083299999987034, "outcome": "passed"}, "call": {"duration": 0.00015142999999984141, "outcome": "passed"}, "teardown": {"duration": 0.00012974099999985, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_middle", "lineno": 22, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_middle", "run.py", "test", ""], "setup": {"duration": 0.00015250899999985634, "outcome": "passed"}, "call": {"duration": 0.00037539699999999954, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 24, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 24, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_middle():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:24: AssertionError"}, "teardown": {"duration": 0.00018454699999992386, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_end", "lineno": 25, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_end", "run.py", "test", ""], "setup": {"duration": 0.0001769790000003546, "outcome": "passed"}, "call": {"duration": 0.0004234399999996086, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 27, "message": "AssertionError: assert 'chaacte' == 'chacter'\n  \n  - chacter\n  ?       -\n  + chaacte\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 27, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_end():\n>       assert remove_Occ(\"character\", \"r\") == \"chacter\"\nE       AssertionError: assert 'chaacte' == 'chacter'\nE         \nE         - chacter\nE         ?       -\nE         + chaacte\nE         ?   +\n\nrun.py:27: AssertionError"}, "teardown": {"duration": 0.00018265199999989434, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_leaves_string_unchanged_if_no_occurrences", "lineno": 28, "outcome": "passed", "keywords": ["test_remove_Occ_leaves_string_unchanged_if_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017757700000009535, "outcome": "passed"}, "call": {"duration": 0.00016148699999973815, "outcome": "passed"}, "teardown": {"duration": 0.000136712999999844, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 31, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001689680000001026, "outcome": "passed"}, "call": {"duration": 0.00014706300000000283, "outcome": "passed"}, "teardown": {"duration": 0.00012977499999999864, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_single_character", "lineno": 34, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_single_character", "run.py", "test", ""], "setup": {"duration": 0.00015106499999983924, "outcome": "passed"}, "call": {"duration": 0.00018126100000026568, "outcome": "passed"}, "teardown": {"duration": 0.00012906099999998588, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_multiple_same_characters", "lineno": 37, "outcome": "failed", "keywords": ["test_remove_Occ_handles_string_with_multiple_same_characters", "run.py", "test", ""], "setup": {"duration": 0.0001473480000000471, "outcome": "passed"}, "call": {"duration": 0.00029409699999982664, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 39, "message": "AssertionError: assert 'a' == ''\n  \n  + a"}, "traceback": [{"path": "run.py", "lineno": 39, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_string_with_multiple_same_characters():\n>       assert remove_Occ(\"aaa\", \"a\") == \"\"\nE       AssertionError: assert 'a' == ''\nE         \nE         + a\n\nrun.py:39: AssertionError"}, "teardown": {"duration": 0.00021872700000002965, "outcome": "passed"}}]}, {"created": 1733296038.8747344, "duration": 0.09045004844665527, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 5, "failed": 4, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence_from_left", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_removes_first_occurrence_from_right", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_keeps_case_sensitive", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_handles_string_without_target_character", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_removes_all_occurrences", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_characters", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 34}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence_from_left", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence_from_left", "run.py", "test", ""], "setup": {"duration": 0.0008232709999997923, "outcome": "passed"}, "call": {"duration": 0.0004357690000000858, "outcome": "passed"}, "teardown": {"duration": 0.0003063210000000538, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_first_occurrence_from_right", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence_from_right", "run.py", "test", ""], "setup": {"duration": 0.00031734600000010715, "outcome": "passed"}, "call": {"duration": 0.0002750860000002575, "outcome": "passed"}, "teardown": {"duration": 0.00023522200000014593, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_case_sensitive", "lineno": 16, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_case_sensitive", "run.py", "test", ""], "setup": {"duration": 0.0002448309999998344, "outcome": "passed"}, "call": {"duration": 0.0006448420000002564, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 18, "message": "AssertionError: assert 'HeLO' == 'HeLo'\n  \n  - HeLo\n  ?    ^\n  + HeLO\n  ?    ^"}, "traceback": [{"path": "run.py", "lineno": 18, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_case_sensitive():\n>       assert remove_Occ(\"HeLlO\", \"l\") == \"HeLo\"\nE       AssertionError: assert 'HeLO' == 'HeLo'\nE         \nE         - HeLo\nE         ?    ^\nE         + HeLO\nE         ?    ^\n\nrun.py:18: AssertionError"}, "teardown": {"duration": 0.00048072700000023616, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00037429999999982755, "outcome": "passed"}, "call": {"duration": 0.0002770939999998667, "outcome": "passed"}, "teardown": {"duration": 0.00023813400000038953, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_without_target_character", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_without_target_character", "run.py", "test", ""], "setup": {"duration": 0.00027000899999984895, "outcome": "passed"}, "call": {"duration": 0.0002579300000000728, "outcome": "passed"}, "teardown": {"duration": 0.0002890019999997051, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_all_occurrences", "lineno": 25, "outcome": "failed", "keywords": ["test_remove_Occ_removes_all_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00028342300000039344, "outcome": "passed"}, "call": {"duration": 0.0006209500000000645, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 27, "message": "AssertionError: assert 'bnan' == 'bnn'\n  \n  - bnn\n  + bnan\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 27, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_all_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnn\"\nE       AssertionError: assert 'bnan' == 'bnn'\nE         \nE         - bnn\nE         + bnan\nE         ?   +\n\nrun.py:27: AssertionError"}, "teardown": {"duration": 0.00033498300000012193, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_characters", "lineno": 28, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_characters", "run.py", "test", ""], "setup": {"duration": 0.00027365499999998377, "outcome": "passed"}, "call": {"duration": 0.0005677469999998408, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 30, "message": "AssertionError: assert 'mssissipp' == 'msssspp'\n  \n  - msssspp\n  + mssissipp\n  ?    +  +"}, "traceback": [{"path": "run.py", "lineno": 30, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_characters():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"msssspp\"\nE       AssertionError: assert 'mssissipp' == 'msssspp'\nE         \nE         - msssspp\nE         + mssissipp\nE         ?    +  +\n\nrun.py:30: AssertionError"}, "teardown": {"duration": 0.00031947700000012347, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "lineno": 31, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_characters", "run.py", "test", ""], "setup": {"duration": 0.0002953439999999752, "outcome": "passed"}, "call": {"duration": 0.000461665, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 33, "message": "AssertionError: assert 'aaa' == ''\n  \n  + aaa"}, "traceback": [{"path": "run.py", "lineno": 33, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_characters():\n>       assert remove_Occ(\"aaaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aaa' == ''\nE         \nE         + aaa\n\nrun.py:33: AssertionError"}, "teardown": {"duration": 0.00030582200000006665, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 34, "outcome": "passed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00029425299999985555, "outcome": "passed"}, "call": {"duration": 0.0002505600000000108, "outcome": "passed"}, "teardown": {"duration": 0.00032100300000026394, "outcome": "passed"}}]}, {"created": 1733296041.1953235, "duration": 0.05770063400268555, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 8, "failed": 4, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_single_character_from_start", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_end", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_middle", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_character_not_present", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_start", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_end", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_middle", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_target_character", "type": "Function", "lineno": 34}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_no_target_character", "type": "Function", "lineno": 37}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_multiple_target_characters", "type": "Function", "lineno": 40}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_target_character_at_end", "type": "Function", "lineno": 43}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_single_character_from_start", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_Occ_removes_single_character_from_start", "run.py", "test", ""], "setup": {"duration": 0.0003979010000003669, "outcome": "passed"}, "call": {"duration": 0.00022211799999993787, "outcome": "passed"}, "teardown": {"duration": 0.00016315799999988556, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_end", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_Occ_removes_single_character_from_end", "run.py", "test", ""], "setup": {"duration": 0.00016986799999996194, "outcome": "passed"}, "call": {"duration": 0.00015190700000022872, "outcome": "passed"}, "teardown": {"duration": 0.00013428600000020552, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_middle", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_Occ_removes_single_character_from_middle", "run.py", "test", ""], "setup": {"duration": 0.00015387100000019416, "outcome": "passed"}, "call": {"duration": 0.00014718599999996584, "outcome": "passed"}, "teardown": {"duration": 0.0001294110000000792, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_character_not_present", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_Occ_returns_original_string_if_character_not_present", "run.py", "test", ""], "setup": {"duration": 0.00015229499999991347, "outcome": "passed"}, "call": {"duration": 0.00014263700000016755, "outcome": "passed"}, "teardown": {"duration": 0.0001281130000001518, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_start", "lineno": 22, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_start", "run.py", "test", ""], "setup": {"duration": 0.00016154099999976523, "outcome": "passed"}, "call": {"duration": 0.0004147759999999501, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 24, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 24, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_start():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:24: AssertionError"}, "teardown": {"duration": 0.0002081600000001238, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_end", "lineno": 25, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_end", "run.py", "test", ""], "setup": {"duration": 0.00017970300000014205, "outcome": "passed"}, "call": {"duration": 0.00038779200000016445, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 27, "message": "AssertionError: assert 'mississii' == 'missisi'\n  \n  - missisi\n  + mississii\n  ?       + +"}, "traceback": [{"path": "run.py", "lineno": 27, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_end():\n>       assert remove_Occ(\"mississippi\", \"p\") == \"missisi\"\nE       AssertionError: assert 'mississii' == 'missisi'\nE         \nE         - missisi\nE         + mississii\nE         ?       + +\n\nrun.py:27: AssertionError"}, "teardown": {"duration": 0.00018084399999995782, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_middle", "lineno": 28, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_middle", "run.py", "test", ""], "setup": {"duration": 0.00018330400000010627, "outcome": "passed"}, "call": {"duration": 0.0003784300000000407, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 30, "message": "AssertionError: assert 'misisippi' == 'miiippi'\n  \n  - miiippi\n  + misisippi\n  ?   + +"}, "traceback": [{"path": "run.py", "lineno": 30, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_middle():\n>       assert remove_Occ(\"mississippi\", \"s\") == \"miiippi\"\nE       AssertionError: assert 'misisippi' == 'miiippi'\nE         \nE         - miiippi\nE         + misisippi\nE         ?   + +\n\nrun.py:30: AssertionError"}, "teardown": {"duration": 0.00018251299999993975, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 31, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017194999999992078, "outcome": "passed"}, "call": {"duration": 0.00016853899999969002, "outcome": "passed"}, "teardown": {"duration": 0.0001360410000001977, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_target_character", "lineno": 34, "outcome": "failed", "keywords": ["test_remove_Occ_handles_string_with_only_target_character", "run.py", "test", ""], "setup": {"duration": 0.00015704499999991128, "outcome": "passed"}, "call": {"duration": 0.00030035499999980786, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 36, "message": "AssertionError: assert 'aa' == ''\n  \n  + aa"}, "traceback": [{"path": "run.py", "lineno": 36, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_string_with_only_target_character():\n>       assert remove_Occ(\"aaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aa' == ''\nE         \nE         + aa\n\nrun.py:36: AssertionError"}, "teardown": {"duration": 0.0001763230000002558, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_no_target_character", "lineno": 37, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_no_target_character", "run.py", "test", ""], "setup": {"duration": 0.00018264499999975925, "outcome": "passed"}, "call": {"duration": 0.00015605299999998934, "outcome": "passed"}, "teardown": {"duration": 0.00013956300000028676, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_multiple_target_characters", "lineno": 40, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_multiple_target_characters", "run.py", "test", ""], "setup": {"duration": 0.0001586589999997834, "outcome": "passed"}, "call": {"duration": 0.00015284699999984497, "outcome": "passed"}, "teardown": {"duration": 0.0001308410000002702, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_target_character_at_end", "lineno": 43, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_target_character_at_end", "run.py", "test", ""], "setup": {"duration": 0.00015373600000012644, "outcome": "passed"}, "call": {"duration": 0.00014690300000008705, "outcome": "passed"}, "teardown": {"duration": 0.00016586000000007317, "outcome": "passed"}}]}, {"created": 1733296041.57857, "duration": 0.05330777168273926, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 7, "failed": 3, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_single_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_first_occurrence", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_last_occurrence", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_single_character", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_remove_Occ_special_characters", "type": "Function", "lineno": 34}, {"nodeid": "run.py::test_remove_Occ_multiple_special_characters", "type": "Function", "lineno": 37}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_single_occurrence", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_Occ_single_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003781019999999913, "outcome": "passed"}, "call": {"duration": 0.00019772199999978923, "outcome": "passed"}, "teardown": {"duration": 0.0001716839999996722, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001658719999997338, "outcome": "passed"}, "call": {"duration": 0.0001528030000002012, "outcome": "passed"}, "teardown": {"duration": 0.0001312979999998909, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_first_occurrence", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_Occ_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015523499999980928, "outcome": "passed"}, "call": {"duration": 0.0001452930000001018, "outcome": "passed"}, "teardown": {"duration": 0.00013220400000024668, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_last_occurrence", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_Occ_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001752349999999403, "outcome": "passed"}, "call": {"duration": 0.0001620779999997879, "outcome": "passed"}, "teardown": {"duration": 0.00013210600000013173, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016153199999990875, "outcome": "passed"}, "call": {"duration": 0.00016411400000038157, "outcome": "passed"}, "teardown": {"duration": 0.00016569199999993955, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 25, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015665500000006105, "outcome": "passed"}, "call": {"duration": 0.00014589500000017352, "outcome": "passed"}, "teardown": {"duration": 0.00014695999999991827, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_character", "lineno": 28, "outcome": "passed", "keywords": ["test_remove_Occ_single_character", "run.py", "test", ""], "setup": {"duration": 0.00015045600000007653, "outcome": "passed"}, "call": {"duration": 0.0001439030000001118, "outcome": "passed"}, "teardown": {"duration": 0.0001263030000000498, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "lineno": 31, "outcome": "failed", "keywords": ["test_remove_Occ_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00015175600000016942, "outcome": "passed"}, "call": {"duration": 0.00039827800000002966, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 33, "message": "AssertionError: assert 'Apple' == 'ppl'\n  \n  - ppl\n  + Apple\n  ? +   +"}, "traceback": [{"path": "run.py", "lineno": 33, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_case_insensitive():\n>       assert remove_Occ(\"Apple\", \"a\") == \"ppl\"\nE       AssertionError: assert 'Apple' == 'ppl'\nE         \nE         - ppl\nE         + Apple\nE         ? +   +\n\nrun.py:33: AssertionError"}, "teardown": {"duration": 0.00018536100000021705, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_special_characters", "lineno": 34, "outcome": "failed", "keywords": ["test_remove_Occ_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017608400000002078, "outcome": "passed"}, "call": {"duration": 0.00038051800000005187, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 36, "message": "AssertionError: assert 'helloworld' == 'helloorld'\n  \n  - helloorld\n  + helloworld\n  ?      +"}, "traceback": [{"path": "run.py", "lineno": 36, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_special_characters():\n>       assert remove_Occ(\"hello@world\", \"@\") == \"helloorld\"\nE       AssertionError: assert 'helloworld' == 'helloorld'\nE         \nE         - helloorld\nE         + helloworld\nE         ?      +\n\nrun.py:36: AssertionError"}, "teardown": {"duration": 0.00017628200000041616, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_special_characters", "lineno": 37, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016729199999998556, "outcome": "passed"}, "call": {"duration": 0.0003846389999999644, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 39, "message": "AssertionError: assert 'helloworldpython' == 'helloorldpython'\n  \n  - helloorldpython\n  + helloworldpython\n  ?      +"}, "traceback": [{"path": "run.py", "lineno": 39, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_special_characters():\n>       assert remove_Occ(\"hello@world@python\", \"@\") == \"helloorldpython\"\nE       AssertionError: assert 'helloworldpython' == 'helloorldpython'\nE         \nE         - helloorldpython\nE         + helloworldpython\nE         ?      +\n\nrun.py:39: AssertionError"}, "teardown": {"duration": 0.0002080959999997134, "outcome": "passed"}}]}, {"created": 1733296042.4528742, "duration": 0.07198834419250488, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 7, "failed": 2, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_char_not_present", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_removes_first_and_last_occurrences", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_keeps_only_middle_occurrences", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_removes_first_and_last_of_multiple_occurrences", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_single_character", "type": "Function", "lineno": 34}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0008450710000000861, "outcome": "passed"}, "call": {"duration": 0.00039136000000006277, "outcome": "passed"}, "teardown": {"duration": 0.00023588999999990534, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.000526779999999949, "outcome": "passed"}, "call": {"duration": 0.0003281800000003443, "outcome": "passed"}, "teardown": {"duration": 0.0002811299999998518, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_char_not_present", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_Occ_returns_original_string_if_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.0002881999999999607, "outcome": "passed"}, "call": {"duration": 0.0002518000000000242, "outcome": "passed"}, "teardown": {"duration": 0.00021867000000019843, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_first_and_last_occurrences", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_and_last_occurrences", "run.py", "test", ""], "setup": {"duration": 0.000248000000000026, "outcome": "passed"}, "call": {"duration": 0.00024074999999967872, "outcome": "passed"}, "teardown": {"duration": 0.0002520499999998371, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_only_middle_occurrences", "lineno": 22, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_only_middle_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00025907999999974507, "outcome": "passed"}, "call": {"duration": 0.0006383400000000705, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 24, "message": "AssertionError: assert 'baaa' == 'bana'\n  \n  - bana\n  ?   -\n  + baaa\n  ?    +"}, "traceback": [{"path": "run.py", "lineno": 24, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_only_middle_occurrences():\n>       assert remove_Occ(\"banana\", \"n\") == \"bana\"\nE       AssertionError: assert 'baaa' == 'bana'\nE         \nE         - bana\nE         ?   -\nE         + baaa\nE         ?    +\n\nrun.py:24: AssertionError"}, "teardown": {"duration": 0.00029914000000008656, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_first_and_last_of_multiple_occurrences", "lineno": 25, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_and_last_of_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0002684099999998857, "outcome": "passed"}, "call": {"duration": 0.0005082989999998233, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 27, "message": "AssertionError: assert 'mssissipp' == 'mssisspp'\n  \n  - mssisspp\n  + mssissipp\n  ?       +"}, "traceback": [{"path": "run.py", "lineno": 27, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_and_last_of_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssisspp\"\nE       AssertionError: assert 'mssissipp' == 'mssisspp'\nE         \nE         - mssisspp\nE         + mssissipp\nE         ?       +\n\nrun.py:27: AssertionError"}, "teardown": {"duration": 0.0002469999999998862, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 28, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0002120510000001019, "outcome": "passed"}, "call": {"duration": 0.00021457099999988571, "outcome": "passed"}, "teardown": {"duration": 0.00024040000000002948, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "lineno": 31, "outcome": "passed", "keywords": ["test_remove_Occ_handles_single_character_string", "run.py", "test", ""], "setup": {"duration": 0.00024581000000001296, "outcome": "passed"}, "call": {"duration": 0.00032903000000006344, "outcome": "passed"}, "teardown": {"duration": 0.00023870000000014713, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_single_character", "lineno": 34, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_single_character", "run.py", "test", ""], "setup": {"duration": 0.0002877299999997085, "outcome": "passed"}, "call": {"duration": 0.00023384000000037375, "outcome": "passed"}, "teardown": {"duration": 0.00023353999999997654, "outcome": "passed"}}]}, {"created": 1733296039.9881816, "duration": 0.05645012855529785, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 7, "failed": 3, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_not_present", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_is_first", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_is_last", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_replaced_segment_is_empty", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_remove_Occ_handles_single_char_string", "type": "Function", "lineno": 34}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_replacement_char", "type": "Function", "lineno": 37}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00037986599999983994, "outcome": "passed"}, "call": {"duration": 0.00021118100000006024, "outcome": "passed"}, "teardown": {"duration": 0.00016971699999990264, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017006599999991323, "outcome": "passed"}, "call": {"duration": 0.00015517799999997806, "outcome": "passed"}, "teardown": {"duration": 0.00013981199999957283, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_not_present", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_string_unchanged_if_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00015454699999972732, "outcome": "passed"}, "call": {"duration": 0.00014721699999986626, "outcome": "passed"}, "teardown": {"duration": 0.00012897199999972742, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_is_first", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_string_unchanged_if_char_is_first", "run.py", "test", ""], "setup": {"duration": 0.00016140899999994573, "outcome": "passed"}, "call": {"duration": 0.00014739800000018732, "outcome": "passed"}, "teardown": {"duration": 0.00012853799999978932, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_is_last", "lineno": 22, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_string_unchanged_if_char_is_last", "run.py", "test", ""], "setup": {"duration": 0.000167812000000378, "outcome": "passed"}, "call": {"duration": 0.0004425269999996928, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 24, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 24, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_string_unchanged_if_char_is_last():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:24: AssertionError"}, "teardown": {"duration": 0.00029142700000006627, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences", "lineno": 25, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00022626900000011219, "outcome": "passed"}, "call": {"duration": 0.0004414910000001271, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 27, "message": "AssertionError: assert 'mssissipp' == 'mssisspp'\n  \n  - mssisspp\n  + mssissipp\n  ?       +"}, "traceback": [{"path": "run.py", "lineno": 27, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssisspp\"\nE       AssertionError: assert 'mssissipp' == 'mssisspp'\nE         \nE         - mssisspp\nE         + mssissipp\nE         ?       +\n\nrun.py:27: AssertionError"}, "teardown": {"duration": 0.00017979199999995643, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_replaced_segment_is_empty", "lineno": 28, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_string_unchanged_if_replaced_segment_is_empty", "run.py", "test", ""], "setup": {"duration": 0.00017619700000004457, "outcome": "passed"}, "call": {"duration": 0.00017242100000025573, "outcome": "passed"}, "teardown": {"duration": 0.00013673299999972244, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 31, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015716900000040113, "outcome": "passed"}, "call": {"duration": 0.00014641599999976052, "outcome": "passed"}, "teardown": {"duration": 0.00013362099999980614, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_char_string", "lineno": 34, "outcome": "passed", "keywords": ["test_remove_Occ_handles_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00015181800000041434, "outcome": "passed"}, "call": {"duration": 0.00014555100000013255, "outcome": "passed"}, "teardown": {"duration": 0.00012994300000013226, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_replacement_char", "lineno": 37, "outcome": "failed", "keywords": ["test_remove_Occ_handles_string_with_only_replacement_char", "run.py", "test", ""], "setup": {"duration": 0.0001537019999999778, "outcome": "passed"}, "call": {"duration": 0.00028875299999997495, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 39, "message": "AssertionError: assert 'aa' == ''\n  \n  + aa"}, "traceback": [{"path": "run.py", "lineno": 39, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_string_with_only_replacement_char():\n>       assert remove_Occ(\"aaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aa' == ''\nE         \nE         + aa\n\nrun.py:39: AssertionError"}, "teardown": {"duration": 0.00021148799999970436, "outcome": "passed"}}]}, {"created": 1733296039.7386684, "duration": 0.08086442947387695, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 5, "failed": 3, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 31}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_in_string", "run.py", "test", ""], "setup": {"duration": 0.0005087270000001531, "outcome": "passed"}, "call": {"duration": 0.0003081970000002876, "outcome": "passed"}, "teardown": {"duration": 0.00047965499999991223, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00026277500000038145, "outcome": "passed"}, "call": {"duration": 0.00045853999999989625, "outcome": "passed"}, "teardown": {"duration": 0.00022860699999993628, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 16, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00024055700000014113, "outcome": "passed"}, "call": {"duration": 0.0006531210000000343, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 18, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 18, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:18: AssertionError"}, "teardown": {"duration": 0.0005123060000000734, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "lineno": 19, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00033785299999999907, "outcome": "passed"}, "call": {"duration": 0.0006886639999996724, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 21, "message": "AssertionError: assert 'booeeper' == 'bookeeper'\n  \n  - bookeeper\n  ?    -\n  + booeeper"}, "traceback": [{"path": "run.py", "lineno": 21, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_same_char():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'booeeper' == 'bookeeper'\nE         \nE         - bookeeper\nE         ?    -\nE         + booeeper\n\nrun.py:21: AssertionError"}, "teardown": {"duration": 0.0003685680000002911, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00026716100000001575, "outcome": "passed"}, "call": {"duration": 0.0005468520000002641, "outcome": "passed"}, "teardown": {"duration": 0.00029686000000017643, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "lineno": 25, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.0002539200000000186, "outcome": "passed"}, "call": {"duration": 0.00035792199999962193, "outcome": "passed"}, "teardown": {"duration": 0.0002125980000000638, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 28, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00024744200000004213, "outcome": "passed"}, "call": {"duration": 0.00035301300000023517, "outcome": "passed"}, "teardown": {"duration": 0.00022130600000025424, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 31, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00023670700000000267, "outcome": "passed"}, "call": {"duration": 0.0006437720000000979, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 33, "message": "AssertionError: assert 'appl' == 'apppl'\n  \n  - apppl\n  ?    -\n  + appl"}, "traceback": [{"path": "run.py", "lineno": 33, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_at_end():\n>       assert remove_Occ(\"apple\", \"e\") == \"apppl\"\nE       AssertionError: assert 'appl' == 'apppl'\nE         \nE         - apppl\nE         ?    -\nE         + appl\n\nrun.py:33: AssertionError"}, "teardown": {"duration": 0.00041061499999983653, "outcome": "passed"}}]}, {"created": 1733296040.1633015, "duration": 0.05189847946166992, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 5, "failed": 4, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_with_multiple_chars", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "type": "Function", "lineno": 34}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_in_string", "run.py", "test", ""], "setup": {"duration": 0.0003190179999998932, "outcome": "passed"}, "call": {"duration": 0.00025375199999988496, "outcome": "passed"}, "teardown": {"duration": 0.00015746800000004946, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00018010700000004043, "outcome": "passed"}, "call": {"duration": 0.00015333000000006258, "outcome": "passed"}, "teardown": {"duration": 0.00013042300000010165, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 16, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001530869999999407, "outcome": "passed"}, "call": {"duration": 0.00038247099999999534, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 18, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 18, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:18: AssertionError"}, "teardown": {"duration": 0.0001828420000000719, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00018168800000006868, "outcome": "passed"}, "call": {"duration": 0.00015824099999983687, "outcome": "passed"}, "teardown": {"duration": 0.00013342599999988103, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 22, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00015402399999997485, "outcome": "passed"}, "call": {"duration": 0.0003439160000000552, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 24, "message": "AssertionError: assert 'es' == 'tes'\n  \n  - tes\n  ? -\n  + es"}, "traceback": [{"path": "run.py", "lineno": 24, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_at_end():\n>       assert remove_Occ(\"test\", \"t\") == \"tes\"\nE       AssertionError: assert 'es' == 'tes'\nE         \nE         - tes\nE         ? -\nE         + es\n\nrun.py:24: AssertionError"}, "teardown": {"duration": 0.00019192199999995552, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_chars", "lineno": 25, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00017318100000007774, "outcome": "passed"}, "call": {"duration": 0.0003494490000000017, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 27, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 27, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:27: AssertionError"}, "teardown": {"duration": 0.00017520299999995714, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 28, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016889200000003157, "outcome": "passed"}, "call": {"duration": 0.0001711589999999763, "outcome": "passed"}, "teardown": {"duration": 0.0001377940000000244, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "lineno": 31, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00015899100000016375, "outcome": "passed"}, "call": {"duration": 0.00014921099999987142, "outcome": "passed"}, "teardown": {"duration": 0.00013589299999994253, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "lineno": 34, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00015193199999985474, "outcome": "passed"}, "call": {"duration": 0.00029487400000016706, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 36, "message": "AssertionError: assert 'o' == 'op'\n  \n  - op\n  + o"}, "traceback": [{"path": "run.py", "lineno": 36, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_same_char():\n>       assert remove_Occ(\"pop\", \"p\") == \"op\"\nE       AssertionError: assert 'o' == 'op'\nE         \nE         - op\nE         + o\n\nrun.py:36: AssertionError"}, "teardown": {"duration": 0.00021671599999995017, "outcome": "passed"}}]}, {"created": 1733296038.8779473, "duration": 0.04959249496459961, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 6, "failed": 2, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_handles_string_without_char", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_char_at_end", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_char_at_start", "type": "Function", "lineno": 31}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00041117899999987273, "outcome": "passed"}, "call": {"duration": 0.00019915600000008915, "outcome": "passed"}, "teardown": {"duration": 0.00015953599999996015, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018233199999984073, "outcome": "passed"}, "call": {"duration": 0.00015458300000004144, "outcome": "passed"}, "teardown": {"duration": 0.00013219999999991572, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.0002402719999998748, "outcome": "passed"}, "call": {"duration": 0.00016727100000002437, "outcome": "passed"}, "teardown": {"duration": 0.00013883699999994725, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015667200000013537, "outcome": "passed"}, "call": {"duration": 0.00016037400000001867, "outcome": "passed"}, "teardown": {"duration": 0.00012637800000003807, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_without_char", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_without_char", "run.py", "test", ""], "setup": {"duration": 0.00014924800000004623, "outcome": "passed"}, "call": {"duration": 0.0001488259999999908, "outcome": "passed"}, "teardown": {"duration": 0.00014054600000013018, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 25, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00014891900000013614, "outcome": "passed"}, "call": {"duration": 0.000441227000000044, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 27, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 27, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:27: AssertionError"}, "teardown": {"duration": 0.0002639450000001542, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_char_at_end", "lineno": 28, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00019692000000004484, "outcome": "passed"}, "call": {"duration": 0.00045071199999990874, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 30, "message": "AssertionError: assert 'booeeper' == 'bookeeper'\n  \n  - bookeeper\n  ?    -\n  + booeeper"}, "traceback": [{"path": "run.py", "lineno": 30, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_char_at_end():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'booeeper' == 'bookeeper'\nE         \nE         - bookeeper\nE         ?    -\nE         + booeeper\n\nrun.py:30: AssertionError"}, "teardown": {"duration": 0.0001869760000001719, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_char_at_start", "lineno": 31, "outcome": "passed", "keywords": ["test_remove_Occ_handles_repeated_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.0001767120000000233, "outcome": "passed"}, "call": {"duration": 0.00016344599999995602, "outcome": "passed"}, "teardown": {"duration": 0.0001873900000000095, "outcome": "passed"}}]}, {"created": 1733296039.4983823, "duration": 0.04770350456237793, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 6, "failed": 2, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_single_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_with_multiple_special_characters", "type": "Function", "lineno": 31}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_single_occurrence", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00033831300000009, "outcome": "passed"}, "call": {"duration": 0.00017935400000013146, "outcome": "passed"}, "teardown": {"duration": 0.0001527450000000652, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 13, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017197099999988197, "outcome": "passed"}, "call": {"duration": 0.0004602439999998875, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 15, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 15, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:15: AssertionError"}, "teardown": {"duration": 0.00017883200000001764, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001712710000001394, "outcome": "passed"}, "call": {"duration": 0.0001582490000000547, "outcome": "passed"}, "teardown": {"duration": 0.00013256299999997445, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00016449400000007053, "outcome": "passed"}, "call": {"duration": 0.00014714999999987377, "outcome": "passed"}, "teardown": {"duration": 0.00012771700000002717, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00014915699999984433, "outcome": "passed"}, "call": {"duration": 0.00015483999999998943, "outcome": "passed"}, "teardown": {"duration": 0.0001289060000000397, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 25, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00014895700000017165, "outcome": "passed"}, "call": {"duration": 0.0001422690000001392, "outcome": "passed"}, "teardown": {"duration": 0.00013612700000020794, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 28, "outcome": "passed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00014782900000009924, "outcome": "passed"}, "call": {"duration": 0.00014852199999992877, "outcome": "passed"}, "teardown": {"duration": 0.00012807000000014668, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_special_characters", "lineno": 31, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00015117399999997616, "outcome": "passed"}, "call": {"duration": 0.00035173200000016003, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 33, "message": "AssertionError: assert '!@#hello@#world' == '!hello#world'\n  \n  - !hello#world\n  + !@#hello@#world\n  ?  ++     +"}, "traceback": [{"path": "run.py", "lineno": 33, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_special_characters():\n>       assert remove_Occ(\"!@#hello@#world\", \"@#\") == \"!hello#world\"\nE       AssertionError: assert '!@#hello@#world' == '!hello#world'\nE         \nE         - !hello#world\nE         + !@#hello@#world\nE         ?  ++     +\n\nrun.py:33: AssertionError"}, "teardown": {"duration": 0.00021055999999997077, "outcome": "passed"}}]}, {"created": 1733296040.536442, "duration": 0.04834270477294922, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 6, "failed": 2, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_single_character", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "type": "Function", "lineno": 31}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003549400000000258, "outcome": "passed"}, "call": {"duration": 0.00019632599999996891, "outcome": "passed"}, "teardown": {"duration": 0.00015509300000005055, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016106700000007024, "outcome": "passed"}, "call": {"duration": 0.0002295099999998218, "outcome": "passed"}, "teardown": {"duration": 0.00013495099999993876, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015162099999987966, "outcome": "passed"}, "call": {"duration": 0.0001598780000000577, "outcome": "passed"}, "teardown": {"duration": 0.000139807999999908, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 19, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001509470000000679, "outcome": "passed"}, "call": {"duration": 0.0004059419999999925, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 21, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 21, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:21: AssertionError"}, "teardown": {"duration": 0.0001846580000000042, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017763199999998314, "outcome": "passed"}, "call": {"duration": 0.00015774299999993247, "outcome": "passed"}, "teardown": {"duration": 0.00013346000000002967, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_character", "lineno": 25, "outcome": "passed", "keywords": ["test_remove_Occ_single_character", "run.py", "test", ""], "setup": {"duration": 0.00016453400000004947, "outcome": "passed"}, "call": {"duration": 0.000149752000000003, "outcome": "passed"}, "teardown": {"duration": 0.0001282240000000101, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 28, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00014975500000002917, "outcome": "passed"}, "call": {"duration": 0.00017420599999984354, "outcome": "passed"}, "teardown": {"duration": 0.00012996099999984523, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "lineno": 31, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00014841999999992694, "outcome": "passed"}, "call": {"duration": 0.0003734099999999074, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 33, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 33, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:33: AssertionError"}, "teardown": {"duration": 0.0002092639999999868, "outcome": "passed"}}]}, {"created": 1733296040.0518916, "duration": 0.05141258239746094, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 8, "failed": 2, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_char_not_in_string", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_char_at_start", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_char_at_end", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_single_char_string", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_multiple_removals", "type": "Function", "lineno": 34}, {"nodeid": "run.py::test_case_insensitive", "type": "Function", "lineno": 37}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00030338199999979665, "outcome": "passed"}, "call": {"duration": 0.00021474599999971034, "outcome": "passed"}, "teardown": {"duration": 0.00016765699999998773, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016357300000002795, "outcome": "passed"}, "call": {"duration": 0.00014914899999984854, "outcome": "passed"}, "teardown": {"duration": 0.0001303379999999521, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_in_string", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015402099999972663, "outcome": "passed"}, "call": {"duration": 0.00014398500000023517, "outcome": "passed"}, "teardown": {"duration": 0.0001287500000000108, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 19, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015965700000020178, "outcome": "passed"}, "call": {"duration": 0.0003859969999999713, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 21, "message": "AssertionError: assert 'balln' == 'balun'\n  \n  - balun\n  ?    ^\n  + balln\n  ?    ^"}, "traceback": [{"path": "run.py", "lineno": 21, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"balloon\", \"o\") == \"balun\"\nE       AssertionError: assert 'balln' == 'balun'\nE         \nE         - balun\nE         ?    ^\nE         + balln\nE         ?    ^\n\nrun.py:21: AssertionError"}, "teardown": {"duration": 0.00018561100000002995, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_start", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.0001753319999999725, "outcome": "passed"}, "call": {"duration": 0.00017642099999992666, "outcome": "passed"}, "teardown": {"duration": 0.00014270000000005112, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_end", "lineno": 25, "outcome": "passed", "keywords": ["test_remove_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00015774299999993247, "outcome": "passed"}, "call": {"duration": 0.00014920099999971015, "outcome": "passed"}, "teardown": {"duration": 0.00014244099999993765, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 28, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015181300000000064, "outcome": "passed"}, "call": {"duration": 0.0001410669999999392, "outcome": "passed"}, "teardown": {"duration": 0.00012746099999993987, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string", "lineno": 31, "outcome": "passed", "keywords": ["test_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00015220200000021222, "outcome": "passed"}, "call": {"duration": 0.000143293999999905, "outcome": "passed"}, "teardown": {"duration": 0.0001273250000002335, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_removals", "lineno": 34, "outcome": "passed", "keywords": ["test_multiple_removals", "run.py", "test", ""], "setup": {"duration": 0.00014634200000029907, "outcome": "passed"}, "call": {"duration": 0.00014566699999996047, "outcome": "passed"}, "teardown": {"duration": 0.00012692300000027856, "outcome": "passed"}}, {"nodeid": "run.py::test_case_insensitive", "lineno": 37, "outcome": "failed", "keywords": ["test_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00014600600000003183, "outcome": "passed"}, "call": {"duration": 0.0003599899999997547, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 39, "message": "AssertionError: assert 'HellWrld' == 'HellWorld'\n  \n  - HellWorld\n  ?      -\n  + HellWrld"}, "traceback": [{"path": "run.py", "lineno": 39, "message": "AssertionError"}], "longrepr": "def test_case_insensitive():\n>       assert remove_Occ(\"HelloWorld\", \"o\") == \"HellWorld\"\nE       AssertionError: assert 'HellWrld' == 'HellWorld'\nE         \nE         - HellWorld\nE         ?      -\nE         + HellWrld\n\nrun.py:39: AssertionError"}, "teardown": {"duration": 0.00020312600000016445, "outcome": "passed"}}]}, {"created": 1733296040.5730095, "duration": 0.08059883117675781, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 4, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_single_char", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_char_at_start", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_char_at_end", "type": "Function", "lineno": 31}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 10, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0005401319999998044, "outcome": "passed"}, "call": {"duration": 0.0007353240000003147, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 12, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 12, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:12: AssertionError"}, "teardown": {"duration": 0.000430587999999954, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 13, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00034398300000004767, "outcome": "passed"}, "call": {"duration": 0.0005911850000002161, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 15, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 15, "message": "AssertionError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:15: AssertionError"}, "teardown": {"duration": 0.00028157999999978145, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 16, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002914090000003533, "outcome": "passed"}, "call": {"duration": 0.00028250499999993295, "outcome": "passed"}, "teardown": {"duration": 0.00025531199999973, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char", "lineno": 19, "outcome": "passed", "keywords": ["test_single_char", "run.py", "test", ""], "setup": {"duration": 0.00023765999999980636, "outcome": "passed"}, "call": {"duration": 0.0002266889999997801, "outcome": "passed"}, "teardown": {"duration": 0.00023431799999995562, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 22, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00026197700000007984, "outcome": "passed"}, "call": {"duration": 0.0005377829999999584, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 24, "message": "AssertionError: assert 'bnanaa' == 'banan'\n  \n  - banan\n  + bnanaa"}, "traceback": [{"path": "run.py", "lineno": 24, "message": "AssertionError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"bananaaa\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnanaa' == 'banan'\nE         \nE         - banan\nE         + bnanaa\n\nrun.py:24: AssertionError"}, "teardown": {"duration": 0.00026818499999992085, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 25, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0002746089999998702, "outcome": "passed"}, "call": {"duration": 0.00024702699999989974, "outcome": "passed"}, "teardown": {"duration": 0.000230348999999741, "outcome": "passed"}}, {"nodeid": "run.py::test_char_at_start", "lineno": 28, "outcome": "passed", "keywords": ["test_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.0002279729999998814, "outcome": "passed"}, "call": {"duration": 0.00026031599999987165, "outcome": "passed"}, "teardown": {"duration": 0.00023796400000009044, "outcome": "passed"}}, {"nodeid": "run.py::test_char_at_end", "lineno": 31, "outcome": "failed", "keywords": ["test_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00024185099999973758, "outcome": "passed"}, "call": {"duration": 0.000533560000000044, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 33, "message": "AssertionError: assert 'appl' == 'apppl'\n  \n  - apppl\n  ?    -\n  + appl"}, "traceback": [{"path": "run.py", "lineno": 33, "message": "AssertionError"}], "longrepr": "def test_char_at_end():\n>       assert remove_Occ(\"apple\", \"e\") == \"apppl\"\nE       AssertionError: assert 'appl' == 'apppl'\nE         \nE         - apppl\nE         ?    -\nE         + appl\n\nrun.py:33: AssertionError"}, "teardown": {"duration": 0.00034995499999990187, "outcome": "passed"}}]}, {"created": 1733296041.845431, "duration": 0.060651540756225586, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 4, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_single_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_with_no_replacements", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_in_middle", "type": "Function", "lineno": 34}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "type": "Function", "lineno": 37}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_single_occurrence", "lineno": 10, "outcome": "failed", "keywords": ["test_remove_Occ_with_single_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003881789999999885, "outcome": "passed"}, "call": {"duration": 0.0005571460000000084, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 12, "message": "AssertionError: assert 'heo' == 'hel'\n  \n  - hel\n  + heo"}, "traceback": [{"path": "run.py", "lineno": 12, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_single_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"hel\"\nE       AssertionError: assert 'heo' == 'hel'\nE         \nE         - hel\nE         + heo\n\nrun.py:12: AssertionError"}, "teardown": {"duration": 0.00026794300000010374, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 13, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0002368219999999699, "outcome": "passed"}, "call": {"duration": 0.000447504000000043, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 15, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 15, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:15: AssertionError"}, "teardown": {"duration": 0.00018473699999987936, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00018688399999988725, "outcome": "passed"}, "call": {"duration": 0.00016971100000007233, "outcome": "passed"}, "teardown": {"duration": 0.00013565700000017777, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.0001601930000001417, "outcome": "passed"}, "call": {"duration": 0.0001541940000000519, "outcome": "passed"}, "teardown": {"duration": 0.0001325890000001273, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 22, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00015217400000011594, "outcome": "passed"}, "call": {"duration": 0.0003548300000000282, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 24, "message": "AssertionError: assert 'es' == 'tes'\n  \n  - tes\n  ? -\n  + es"}, "traceback": [{"path": "run.py", "lineno": 24, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_at_end():\n>       assert remove_Occ(\"test\", \"t\") == \"tes\"\nE       AssertionError: assert 'es' == 'tes'\nE         \nE         - tes\nE         ? -\nE         + es\n\nrun.py:24: AssertionError"}, "teardown": {"duration": 0.00018249500000000474, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 25, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017762599999993078, "outcome": "passed"}, "call": {"duration": 0.00015600300000007117, "outcome": "passed"}, "teardown": {"duration": 0.00013432200000007555, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_replacements", "lineno": 28, "outcome": "failed", "keywords": ["test_remove_Occ_with_no_replacements", "run.py", "test", ""], "setup": {"duration": 0.00017084699999991848, "outcome": "passed"}, "call": {"duration": 0.00034137799999989227, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 30, "message": "AssertionError: assert 'ython' == 'python'\n  \n  - python\n  ? -\n  + ython"}, "traceback": [{"path": "run.py", "lineno": 30, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_no_replacements():\n>       assert remove_Occ(\"python\", \"p\") == \"python\"\nE       AssertionError: assert 'ython' == 'python'\nE         \nE         - python\nE         ? -\nE         + ython\n\nrun.py:30: AssertionError"}, "teardown": {"duration": 0.00018023899999985993, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "lineno": 31, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00016901699999993802, "outcome": "passed"}, "call": {"duration": 0.0003610440000001436, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 33, "message": "AssertionError: assert 'booeeper' == 'bookeeper'\n  \n  - bookeeper\n  ?    -\n  + booeeper"}, "traceback": [{"path": "run.py", "lineno": 33, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_char_at_end():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'booeeper' == 'bookeeper'\nE         \nE         - bookeeper\nE         ?    -\nE         + booeeper\n\nrun.py:33: AssertionError"}, "teardown": {"duration": 0.00018219300000010819, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_in_middle", "lineno": 34, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_in_middle", "run.py", "test", ""], "setup": {"duration": 0.00018628299999989828, "outcome": "passed"}, "call": {"duration": 0.0003523280000001794, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 36, "message": "AssertionError: assert 'harater' == 'haracter'\n  \n  - haracter\n  ?     -\n  + harater"}, "traceback": [{"path": "run.py", "lineno": 36, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_char_in_middle():\n>       assert remove_Occ(\"character\", \"c\") == \"haracter\"\nE       AssertionError: assert 'harater' == 'haracter'\nE         \nE         - haracter\nE         ?     -\nE         + harater\n\nrun.py:36: AssertionError"}, "teardown": {"duration": 0.00019366700000000847, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "lineno": 37, "outcome": "passed", "keywords": ["test_remove_Occ_with_repeated_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00020845899999999418, "outcome": "passed"}, "call": {"duration": 0.00018828199999987305, "outcome": "passed"}, "teardown": {"duration": 0.00018287699999985918, "outcome": "passed"}}]}, {"created": 1733296041.5685205, "duration": 0.056786537170410156, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 4, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_char_from_empty_string", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_char_from_single_char_string", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_char_from_string_with_only_target_char", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_remove_char_from_string_with_multiple_same_chars", "type": "Function", "lineno": 34}, {"nodeid": "run.py::test_remove_char_from_string_with_no_target_char", "type": "Function", "lineno": 37}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 10, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003260989999998021, "outcome": "passed"}, "call": {"duration": 0.0004408099999999582, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 12, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 12, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:12: AssertionError"}, "teardown": {"duration": 0.00019760400000001788, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 13, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018816300000001895, "outcome": "passed"}, "call": {"duration": 0.0003828980000000204, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 15, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 15, "message": "AssertionError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:15: AssertionError"}, "teardown": {"duration": 0.0001839379999999391, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 16, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016753899999999433, "outcome": "passed"}, "call": {"duration": 0.00033228100000015637, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 18, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 18, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:18: AssertionError"}, "teardown": {"duration": 0.000173600000000107, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00016724199999984535, "outcome": "passed"}, "call": {"duration": 0.00016426000000002716, "outcome": "passed"}, "teardown": {"duration": 0.00013116300000004522, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "lineno": 22, "outcome": "failed", "keywords": ["test_remove_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.0001533350000000322, "outcome": "passed"}, "call": {"duration": 0.0003466139999999118, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 24, "message": "AssertionError: assert 'bacab' == 'bcb'\n  \n  - bcb\n  + bacab\n  ?  + +"}, "traceback": [{"path": "run.py", "lineno": 24, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_same_char():\n>       assert remove_Occ(\"abacaba\", \"a\") == \"bcb\"\nE       AssertionError: assert 'bacab' == 'bcb'\nE         \nE         - bcb\nE         + bacab\nE         ?  + +\n\nrun.py:24: AssertionError"}, "teardown": {"duration": 0.00016909700000011796, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_empty_string", "lineno": 25, "outcome": "passed", "keywords": ["test_remove_char_from_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017136099999981447, "outcome": "passed"}, "call": {"duration": 0.00015151099999988205, "outcome": "passed"}, "teardown": {"duration": 0.00012925100000016343, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_single_char_string", "lineno": 28, "outcome": "passed", "keywords": ["test_remove_char_from_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.000150569999999961, "outcome": "passed"}, "call": {"duration": 0.00014697899999993602, "outcome": "passed"}, "teardown": {"duration": 0.0001258360000000458, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_string_with_only_target_char", "lineno": 31, "outcome": "failed", "keywords": ["test_remove_char_from_string_with_only_target_char", "run.py", "test", ""], "setup": {"duration": 0.0001443169999999494, "outcome": "passed"}, "call": {"duration": 0.0002802360000000448, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 33, "message": "AssertionError: assert 'aaa' == ''\n  \n  + aaa"}, "traceback": [{"path": "run.py", "lineno": 33, "message": "AssertionError"}], "longrepr": "def test_remove_char_from_string_with_only_target_char():\n>       assert remove_Occ(\"aaaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aaa' == ''\nE         \nE         + aaa\n\nrun.py:33: AssertionError"}, "teardown": {"duration": 0.0001724909999998303, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_string_with_multiple_same_chars", "lineno": 34, "outcome": "failed", "keywords": ["test_remove_char_from_string_with_multiple_same_chars", "run.py", "test", ""], "setup": {"duration": 0.00017754400000002946, "outcome": "passed"}, "call": {"duration": 0.00033648300000010956, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 36, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 36, "message": "AssertionError"}], "longrepr": "def test_remove_char_from_string_with_multiple_same_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:36: AssertionError"}, "teardown": {"duration": 0.0001753010000000721, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_string_with_no_target_char", "lineno": 37, "outcome": "passed", "keywords": ["test_remove_char_from_string_with_no_target_char", "run.py", "test", ""], "setup": {"duration": 0.00016714399999995244, "outcome": "passed"}, "call": {"duration": 0.0001558159999999198, "outcome": "passed"}, "teardown": {"duration": 0.00018810899999999187, "outcome": "passed"}}]}, {"created": 1733296042.1440523, "duration": 0.05409407615661621, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 5, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_no_occurrence", "type": "Function", "lineno": 20}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 23}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "type": "Function", "lineno": 26}, {"nodeid": "run.py::test_remove_empty_string", "type": "Function", "lineno": 29}, {"nodeid": "run.py::test_remove_char_not_in_string", "type": "Function", "lineno": 32}, {"nodeid": "run.py::test_remove_multiple_chars", "type": "Function", "lineno": 35}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 10, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00031966299999997005, "outcome": "passed"}, "call": {"duration": 0.0004706290000000557, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 12, "message": "AssertionError: assert 'heo' == 'hello'\n  \n  - hello\n  ?   --\n  + heo"}, "traceback": [{"path": "run.py", "lineno": 12, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"hello\"\nE       AssertionError: assert 'heo' == 'hello'\nE         \nE         - hello\nE         ?   --\nE         + heo\n\nrun.py:12: AssertionError"}, "teardown": {"duration": 0.0002509169999997951, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019396599999987885, "outcome": "passed"}, "call": {"duration": 0.00018390600000017798, "outcome": "passed"}, "teardown": {"duration": 0.00013767900000027922, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 16, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016611400000021703, "outcome": "passed"}, "call": {"duration": 0.00038227500000020953, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 18, "message": "AssertionError: assert 'heo' == 'hello'\n  \n  - hello\n  ?   --\n  + heo"}, "traceback": [{"path": "run.py", "lineno": 18, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"hello\"\nE       AssertionError: assert 'heo' == 'hello'\nE         \nE         - hello\nE         ?   --\nE         + heo\n\nrun.py:18: AssertionError"}, "teardown": {"duration": 0.00019460599999998607, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_no_occurrence", "lineno": 20, "outcome": "passed", "keywords": ["test_remove_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001738760000002948, "outcome": "passed"}, "call": {"duration": 0.00015465500000022558, "outcome": "passed"}, "teardown": {"duration": 0.00013135400000008346, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 23, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016831499999980792, "outcome": "passed"}, "call": {"duration": 0.00033600299999969607, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 25, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 25, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:25: AssertionError"}, "teardown": {"duration": 0.0001733310000000543, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "lineno": 26, "outcome": "passed", "keywords": ["test_remove_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00016738299999996542, "outcome": "passed"}, "call": {"duration": 0.00015577299999991467, "outcome": "passed"}, "teardown": {"duration": 0.00014772599999979263, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_empty_string", "lineno": 29, "outcome": "passed", "keywords": ["test_remove_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015429799999999716, "outcome": "passed"}, "call": {"duration": 0.0001436009999999932, "outcome": "passed"}, "teardown": {"duration": 0.00012828900000005916, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_in_string", "lineno": 32, "outcome": "passed", "keywords": ["test_remove_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015353800000017515, "outcome": "passed"}, "call": {"duration": 0.0001426030000000189, "outcome": "passed"}, "teardown": {"duration": 0.00012758999999995524, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_chars", "lineno": 35, "outcome": "failed", "keywords": ["test_remove_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00014545699999990447, "outcome": "passed"}, "call": {"duration": 0.00033146499999991974, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 37, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 37, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:37: AssertionError"}, "teardown": {"duration": 0.00020985499999959245, "outcome": "passed"}}]}, {"created": 1733296042.4646301, "duration": 0.09449887275695801, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 8, "failed": 4, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_keeps_case_sensitive", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_handles_single_character", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_first_character", "type": "Function", "lineno": 34}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_last_character", "type": "Function", "lineno": 37}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_middle_character", "type": "Function", "lineno": 40}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_one_character", "type": "Function", "lineno": 43}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0007551680000004168, "outcome": "passed"}, "call": {"duration": 0.00030260200000054027, "outcome": "passed"}, "teardown": {"duration": 0.00028768900000031294, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00037613599999986036, "outcome": "passed"}, "call": {"duration": 0.0002972739999993479, "outcome": "passed"}, "teardown": {"duration": 0.0002796149999992892, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00027542199999963657, "outcome": "passed"}, "call": {"duration": 0.000526149999999781, "outcome": "passed"}, "teardown": {"duration": 0.00024169200000034863, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_case_sensitive", "lineno": 19, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_case_sensitive", "run.py", "test", ""], "setup": {"duration": 0.0002760440000004749, "outcome": "passed"}, "call": {"duration": 0.0006536569999999742, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 21, "message": "AssertionError: assert 'HellWrld' == 'HellWorld'\n  \n  - HellWorld\n  ?      -\n  + HellWrld"}, "traceback": [{"path": "run.py", "lineno": 21, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_case_sensitive():\n>       assert remove_Occ(\"HelloWorld\", \"o\") == \"HellWorld\"\nE       AssertionError: assert 'HellWrld' == 'HellWorld'\nE         \nE         - HellWorld\nE         ?      -\nE         + HellWrld\n\nrun.py:21: AssertionError"}, "teardown": {"duration": 0.0004526709999996825, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.000299924000000118, "outcome": "passed"}, "call": {"duration": 0.0003394889999999151, "outcome": "passed"}, "teardown": {"duration": 0.0003541719999997639, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "lineno": 25, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00028249499999954963, "outcome": "passed"}, "call": {"duration": 0.0003066300000007516, "outcome": "passed"}, "teardown": {"duration": 0.000258972000000135, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 28, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.000320688000000402, "outcome": "passed"}, "call": {"duration": 0.0005801349999998706, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 30, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 30, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:30: AssertionError"}, "teardown": {"duration": 0.00033262299999936573, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_character", "lineno": 31, "outcome": "passed", "keywords": ["test_remove_Occ_handles_single_character", "run.py", "test", ""], "setup": {"duration": 0.00029738200000029025, "outcome": "passed"}, "call": {"duration": 0.00027121900000004473, "outcome": "passed"}, "teardown": {"duration": 0.0002303890000003861, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_first_character", "lineno": 34, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_first_character", "run.py", "test", ""], "setup": {"duration": 0.00023311600000042176, "outcome": "passed"}, "call": {"duration": 0.0005587849999999506, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 36, "message": "AssertionError: assert 'ab' == 'aab'\n  \n  - aab\n  ? -\n  + ab"}, "traceback": [{"path": "run.py", "lineno": 36, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_first_character():\n>       assert remove_Occ(\"aaab\", \"a\") == \"aab\"\nE       AssertionError: assert 'ab' == 'aab'\nE         \nE         - aab\nE         ? -\nE         + ab\n\nrun.py:36: AssertionError"}, "teardown": {"duration": 0.0002857650000001044, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_last_character", "lineno": 37, "outcome": "passed", "keywords": ["test_remove_Occ_handles_repeated_last_character", "run.py", "test", ""], "setup": {"duration": 0.00029680400000042795, "outcome": "passed"}, "call": {"duration": 0.000278062999999662, "outcome": "passed"}, "teardown": {"duration": 0.0002801539999994773, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_middle_character", "lineno": 40, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_middle_character", "run.py", "test", ""], "setup": {"duration": 0.0003123299999998608, "outcome": "passed"}, "call": {"duration": 0.0005329059999992225, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 42, "message": "AssertionError: assert 'abba' == 'bb'\n  \n  - bb\n  + abba"}, "traceback": [{"path": "run.py", "lineno": 42, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_middle_character():\n>       assert remove_Occ(\"aabbaa\", \"a\") == \"bb\"\nE       AssertionError: assert 'abba' == 'bb'\nE         \nE         - bb\nE         + abba\n\nrun.py:42: AssertionError"}, "teardown": {"duration": 0.0002664670000003255, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_one_character", "lineno": 43, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_only_one_character", "run.py", "test", ""], "setup": {"duration": 0.00025119200000034425, "outcome": "passed"}, "call": {"duration": 0.0002672679999999872, "outcome": "passed"}, "teardown": {"duration": 0.00028326700000036453, "outcome": "passed"}}]}, {"created": 1733296039.8140438, "duration": 0.05327177047729492, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 5, "failed": 4, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_handles_case_insensitivity", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_special_characters", "type": "Function", "lineno": 34}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00036167499999995023, "outcome": "passed"}, "call": {"duration": 0.0002652139999999026, "outcome": "passed"}, "teardown": {"duration": 0.00016059200000007046, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001749850000001274, "outcome": "passed"}, "call": {"duration": 0.00015437600000001162, "outcome": "passed"}, "teardown": {"duration": 0.00013467199999994683, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 16, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.0001562360000000318, "outcome": "passed"}, "call": {"duration": 0.00043769100000012884, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 18, "message": "AssertionError: assert 'hell wrld' == 'hell world'\n  \n  - hell world\n  ?       -\n  + hell wrld"}, "traceback": [{"path": "run.py", "lineno": 18, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"hello world\", \"o\") == \"hell world\"\nE       AssertionError: assert 'hell wrld' == 'hell world'\nE         \nE         - hell world\nE         ?       -\nE         + hell wrld\n\nrun.py:18: AssertionError"}, "teardown": {"duration": 0.00018649500000011976, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017853200000006453, "outcome": "passed"}, "call": {"duration": 0.0001620359999998655, "outcome": "passed"}, "teardown": {"duration": 0.0001341519999999985, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015533299999992423, "outcome": "passed"}, "call": {"duration": 0.00015483900000012873, "outcome": "passed"}, "teardown": {"duration": 0.00013060099999995245, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 25, "outcome": "passed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015001199999997716, "outcome": "passed"}, "call": {"duration": 0.0001489180000000534, "outcome": "passed"}, "teardown": {"duration": 0.00013776200000004124, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_case_insensitivity", "lineno": 28, "outcome": "failed", "keywords": ["test_remove_Occ_handles_case_insensitivity", "run.py", "test", ""], "setup": {"duration": 0.00014709599999984668, "outcome": "passed"}, "call": {"duration": 0.00038748599999993694, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 30, "message": "AssertionError: assert 'Hell Wrld' == 'Hell World'\n  \n  - Hell World\n  ?       -\n  + Hell Wrld"}, "traceback": [{"path": "run.py", "lineno": 30, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_case_insensitivity():\n>       assert remove_Occ(\"Hello World\", \"o\") == \"Hell World\"\nE       AssertionError: assert 'Hell Wrld' == 'Hell World'\nE         \nE         - Hell World\nE         ?       -\nE         + Hell Wrld\n\nrun.py:30: AssertionError"}, "teardown": {"duration": 0.00017162100000001068, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 31, "outcome": "failed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.000179591000000201, "outcome": "passed"}, "call": {"duration": 0.0003635920000000237, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 33, "message": "AssertionError: assert '!#$hello#%' == '!$hello%'\n  \n  - !$hello%\n  + !#$hello#%\n  ?  +      +"}, "traceback": [{"path": "run.py", "lineno": 33, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_special_characters():\n>       assert remove_Occ(\"!@#$hello@#%\", \"@\") == \"!$hello%\"\nE       AssertionError: assert '!#$hello#%' == '!$hello%'\nE         \nE         - !$hello%\nE         + !#$hello#%\nE         ?  +      +\n\nrun.py:33: AssertionError"}, "teardown": {"duration": 0.0001840810000000026, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_special_characters", "lineno": 34, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017087900000012368, "outcome": "passed"}, "call": {"duration": 0.0003366879999999739, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 36, "message": "AssertionError: assert '!hello!' == 'hello!!'\n  \n  - hello!!\n  ?       -\n  + !hello!\n  ? +"}, "traceback": [{"path": "run.py", "lineno": 36, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_special_characters():\n>       assert remove_Occ(\"!!hello!!\", \"!\") == \"hello!!\"\nE       AssertionError: assert '!hello!' == 'hello!!'\nE         \nE         - hello!!\nE         ?       -\nE         + !hello!\nE         ? +\n\nrun.py:36: AssertionError"}, "teardown": {"duration": 0.0002134429999998133, "outcome": "passed"}}]}, {"created": 1733296039.8818514, "duration": 0.06049633026123047, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 5, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_returns_empty_string", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_with_single_character", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_remove_Occ_with_single_character_string", "type": "Function", "lineno": 34}, {"nodeid": "run.py::test_remove_Occ_with_repeated_characters", "type": "Function", "lineno": 37}, {"nodeid": "run.py::test_remove_Occ_with_same_char_first_and_last", "type": "Function", "lineno": 40}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 10, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00041048799999998664, "outcome": "passed"}, "call": {"duration": 0.0004190710000000486, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 12, "message": "AssertionError: assert 'bnan' == 'banna'\n  \n  - banna\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 12, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banna\"\nE       AssertionError: assert 'bnan' == 'banna'\nE         \nE         - banna\nE         + bnan\n\nrun.py:12: AssertionError"}, "teardown": {"duration": 0.0002693539999998329, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 13, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00020125899999978714, "outcome": "passed"}, "call": {"duration": 0.00043761099999972686, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 15, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 15, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:15: AssertionError"}, "teardown": {"duration": 0.00017949300000008606, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 16, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.0001901520000000545, "outcome": "passed"}, "call": {"duration": 0.00031809599999998994, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 18, "message": "AssertionError: assert 'ale' == 'a'\n  \n  - a\n  + ale"}, "traceback": [{"path": "run.py", "lineno": 18, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"apple\", \"p\") == \"a\"\nE       AssertionError: assert 'ale' == 'a'\nE         \nE         - a\nE         + ale\n\nrun.py:18: AssertionError"}, "teardown": {"duration": 0.00017866499999996677, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_returns_empty_string", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_Occ_returns_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017119399999998564, "outcome": "passed"}, "call": {"duration": 0.0001543179999998756, "outcome": "passed"}, "teardown": {"duration": 0.00013630900000016766, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 22, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015364900000003345, "outcome": "passed"}, "call": {"duration": 0.0003425610000000745, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 24, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 24, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:24: AssertionError"}, "teardown": {"duration": 0.000173390000000051, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "lineno": 25, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001684870000002725, "outcome": "passed"}, "call": {"duration": 0.0001725100000000701, "outcome": "passed"}, "teardown": {"duration": 0.00013518099999965116, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 28, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00018957099999994398, "outcome": "passed"}, "call": {"duration": 0.0001594729999996325, "outcome": "passed"}, "teardown": {"duration": 0.0001333630000002195, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_character", "lineno": 31, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_character", "run.py", "test", ""], "setup": {"duration": 0.0001474729999997315, "outcome": "passed"}, "call": {"duration": 0.000141133000000071, "outcome": "passed"}, "teardown": {"duration": 0.0001361970000002266, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_character_string", "lineno": 34, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_character_string", "run.py", "test", ""], "setup": {"duration": 0.0001500330000001604, "outcome": "passed"}, "call": {"duration": 0.0001429470000000599, "outcome": "passed"}, "teardown": {"duration": 0.00012461299999966258, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_characters", "lineno": 37, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_characters", "run.py", "test", ""], "setup": {"duration": 0.000160397999999784, "outcome": "passed"}, "call": {"duration": 0.000344619000000268, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 39, "message": "AssertionError: assert 'aaabccc' == 'aaaabbbccc'\n  \n  - aaaabbbccc\n  ? -    --\n  + aaabccc"}, "traceback": [{"path": "run.py", "lineno": 39, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_characters():\n>       assert remove_Occ(\"aaabbbccc\", \"b\") == \"aaaabbbccc\"\nE       AssertionError: assert 'aaabccc' == 'aaaabbbccc'\nE         \nE         - aaaabbbccc\nE         ? -    --\nE         + aaabccc\n\nrun.py:39: AssertionError"}, "teardown": {"duration": 0.0001767830000001247, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_same_char_first_and_last", "lineno": 40, "outcome": "failed", "keywords": ["test_remove_Occ_with_same_char_first_and_last", "run.py", "test", ""], "setup": {"duration": 0.00016927099999985984, "outcome": "passed"}, "call": {"duration": 0.0002950820000000576, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 42, "message": "AssertionError: assert '' == 'a'\n  \n  - a"}, "traceback": [{"path": "run.py", "lineno": 42, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_same_char_first_and_last():\n>       assert remove_Occ(\"aa\", \"a\") == \"a\"\nE       AssertionError: assert '' == 'a'\nE         \nE         - a\n\nrun.py:42: AssertionError"}, "teardown": {"duration": 0.00021023700000011303, "outcome": "passed"}}]}, {"created": 1733296042.2364411, "duration": 0.06636285781860352, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 7, "failed": 3, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrences", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_handles_case_sensitivity", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 34}, {"nodeid": "run.py::test_remove_Occ_handles_numeric_string", "type": "Function", "lineno": 37}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00039936800000006656, "outcome": "passed"}, "call": {"duration": 0.0003318299999999219, "outcome": "passed"}, "teardown": {"duration": 0.00021928899999990037, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00021997500000026093, "outcome": "passed"}, "call": {"duration": 0.00019903000000009996, "outcome": "passed"}, "teardown": {"duration": 0.00017537999999994724, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 16, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00020851499999974266, "outcome": "passed"}, "call": {"duration": 0.0005450599999998751, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 18, "message": "AssertionError: assert 'helo word' == 'heo world'\n  \n  - heo world\n  ?        -\n  + helo word\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 18, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"hello world\", \"l\") == \"heo world\"\nE       AssertionError: assert 'helo word' == 'heo world'\nE         \nE         - heo world\nE         ?        -\nE         + helo word\nE         ?   +\n\nrun.py:18: AssertionError"}, "teardown": {"duration": 0.00021601800000015103, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00022007500000009728, "outcome": "passed"}, "call": {"duration": 0.00020986999999994538, "outcome": "passed"}, "teardown": {"duration": 0.00018635599999994312, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrences", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00022315599999966906, "outcome": "passed"}, "call": {"duration": 0.00020627200000022938, "outcome": "passed"}, "teardown": {"duration": 0.00018287200000033366, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 25, "outcome": "passed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00022513999999995704, "outcome": "passed"}, "call": {"duration": 0.0002069919999998504, "outcome": "passed"}, "teardown": {"duration": 0.00018615099999985674, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "lineno": 28, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_characters", "run.py", "test", ""], "setup": {"duration": 0.00021315700000013038, "outcome": "passed"}, "call": {"duration": 0.0004670850000003668, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 30, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 30, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_characters():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:30: AssertionError"}, "teardown": {"duration": 0.00020881299999997438, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_case_sensitivity", "lineno": 31, "outcome": "failed", "keywords": ["test_remove_Occ_handles_case_sensitivity", "run.py", "test", ""], "setup": {"duration": 0.00023219699999987853, "outcome": "passed"}, "call": {"duration": 0.0004553419999999697, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 33, "message": "AssertionError: assert 'Hell Wrld' == 'Hell World'\n  \n  - Hell World\n  ?       -\n  + Hell Wrld"}, "traceback": [{"path": "run.py", "lineno": 33, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_case_sensitivity():\n>       assert remove_Occ(\"Hello World\", \"o\") == \"Hell World\"\nE       AssertionError: assert 'Hell Wrld' == 'Hell World'\nE         \nE         - Hell World\nE         ?       -\nE         + Hell Wrld\n\nrun.py:33: AssertionError"}, "teardown": {"duration": 0.00020552100000026385, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 34, "outcome": "passed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.000226377999999805, "outcome": "passed"}, "call": {"duration": 0.00021738999999998398, "outcome": "passed"}, "teardown": {"duration": 0.00017303000000001845, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_numeric_string", "lineno": 37, "outcome": "passed", "keywords": ["test_remove_Occ_handles_numeric_string", "run.py", "test", ""], "setup": {"duration": 0.00020302599999988402, "outcome": "passed"}, "call": {"duration": 0.00019914300000012375, "outcome": "passed"}, "teardown": {"duration": 0.00021003400000019212, "outcome": "passed"}}]}, {"created": 1733296041.006547, "duration": 0.05682826042175293, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 8, "failed": 3, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_char_not_in_string", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_single_char_string", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_string_with_multiple_chars_to_remove", "type": "Function", "lineno": 34}, {"nodeid": "run.py::test_string_with_repeated_first_char", "type": "Function", "lineno": 37}, {"nodeid": "run.py::test_string_with_repeated_last_char", "type": "Function", "lineno": 40}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003980279999997727, "outcome": "passed"}, "call": {"duration": 0.0001861549999997436, "outcome": "passed"}, "teardown": {"duration": 0.00024006900000017595, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018296300000031351, "outcome": "passed"}, "call": {"duration": 0.00015372199999985625, "outcome": "passed"}, "teardown": {"duration": 0.00014448900000019194, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001608959999996884, "outcome": "passed"}, "call": {"duration": 0.00015060600000005309, "outcome": "passed"}, "teardown": {"duration": 0.00013008900000022194, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_in_string", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015491999999994732, "outcome": "passed"}, "call": {"duration": 0.00014287599999995848, "outcome": "passed"}, "teardown": {"duration": 0.00012766799999974765, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00014776599999999362, "outcome": "passed"}, "call": {"duration": 0.00014640000000021303, "outcome": "passed"}, "teardown": {"duration": 0.00012784799999998597, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 25, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001458869999999557, "outcome": "passed"}, "call": {"duration": 0.00043831400000016174, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 27, "message": "AssertionError: assert 'mssissipp' == 'msssspp'\n  \n  - msssspp\n  + mssissipp\n  ?    +  +"}, "traceback": [{"path": "run.py", "lineno": 27, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"msssspp\"\nE       AssertionError: assert 'mssissipp' == 'msssspp'\nE         \nE         - msssspp\nE         + mssissipp\nE         ?    +  +\n\nrun.py:27: AssertionError"}, "teardown": {"duration": 0.00028250300000021156, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 28, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00020277600000007112, "outcome": "passed"}, "call": {"duration": 0.00017508600000004648, "outcome": "passed"}, "teardown": {"duration": 0.00014567999999970382, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string", "lineno": 31, "outcome": "passed", "keywords": ["test_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00016545499999987, "outcome": "passed"}, "call": {"duration": 0.00015790699999973512, "outcome": "passed"}, "teardown": {"duration": 0.00014434000000029812, "outcome": "passed"}}, {"nodeid": "run.py::test_string_with_multiple_chars_to_remove", "lineno": 34, "outcome": "passed", "keywords": ["test_string_with_multiple_chars_to_remove", "run.py", "test", ""], "setup": {"duration": 0.0001576329999997128, "outcome": "passed"}, "call": {"duration": 0.0001513019999999088, "outcome": "passed"}, "teardown": {"duration": 0.00013652300000011053, "outcome": "passed"}}, {"nodeid": "run.py::test_string_with_repeated_first_char", "lineno": 37, "outcome": "failed", "keywords": ["test_string_with_repeated_first_char", "run.py", "test", ""], "setup": {"duration": 0.0001746449999999733, "outcome": "passed"}, "call": {"duration": 0.0003972260000000283, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 39, "message": "AssertionError: assert 'abbbccc' == 'aaabbbccc'\n  \n  - aaabbbccc\n  ? --\n  + abbbccc"}, "traceback": [{"path": "run.py", "lineno": 39, "message": "AssertionError"}], "longrepr": "def test_string_with_repeated_first_char():\n>       assert remove_Occ(\"aaabbbccc\", \"a\") == \"aaabbbccc\"\nE       AssertionError: assert 'abbbccc' == 'aaabbbccc'\nE         \nE         - aaabbbccc\nE         ? --\nE         + abbbccc\n\nrun.py:39: AssertionError"}, "teardown": {"duration": 0.00019081200000004017, "outcome": "passed"}}, {"nodeid": "run.py::test_string_with_repeated_last_char", "lineno": 40, "outcome": "failed", "keywords": ["test_string_with_repeated_last_char", "run.py", "test", ""], "setup": {"duration": 0.00019145499999995153, "outcome": "passed"}, "call": {"duration": 0.0003888170000001523, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 42, "message": "AssertionError: assert 'aaabbbc' == 'aaabbbcc'\n  \n  - aaabbbcc\n  ?        -\n  + aaabbbc"}, "traceback": [{"path": "run.py", "lineno": 42, "message": "AssertionError"}], "longrepr": "def test_string_with_repeated_last_char():\n>       assert remove_Occ(\"aaabbbccc\", \"c\") == \"aaabbbcc\"\nE       AssertionError: assert 'aaabbbc' == 'aaabbbcc'\nE         \nE         - aaabbbcc\nE         ?        -\nE         + aaabbbc\n\nrun.py:42: AssertionError"}, "teardown": {"duration": 0.0002164229999999101, "outcome": "passed"}}]}, {"created": 1733296042.173467, "duration": 0.055095672607421875, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 6, "failed": 4, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_remove_Occ_handles_case_sensitivity", "type": "Function", "lineno": 34}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 37}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00033250400000017777, "outcome": "passed"}, "call": {"duration": 0.00019659599999943822, "outcome": "passed"}, "teardown": {"duration": 0.00015998099999947613, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016534500000009444, "outcome": "passed"}, "call": {"duration": 0.00014840800000026633, "outcome": "passed"}, "teardown": {"duration": 0.00013291800000025944, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 16, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00016394200000036108, "outcome": "passed"}, "call": {"duration": 0.0004100500000001617, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 18, "message": "AssertionError: assert 'hell wrld' == 'hell world'\n  \n  - hell world\n  ?       -\n  + hell wrld"}, "traceback": [{"path": "run.py", "lineno": 18, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"hello world\", \"o\") == \"hell world\"\nE       AssertionError: assert 'hell wrld' == 'hell world'\nE         \nE         - hell world\nE         ?       -\nE         + hell wrld\n\nrun.py:18: AssertionError"}, "teardown": {"duration": 0.00021525200000027667, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001851710000000395, "outcome": "passed"}, "call": {"duration": 0.00016096099999973745, "outcome": "passed"}, "teardown": {"duration": 0.00014104700000050485, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001750409999994318, "outcome": "passed"}, "call": {"duration": 0.00015360100000005872, "outcome": "passed"}, "teardown": {"duration": 0.00013187500000011454, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 25, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015148099999962028, "outcome": "passed"}, "call": {"duration": 0.0003665969999993024, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 27, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 27, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:27: AssertionError"}, "teardown": {"duration": 0.00019166399999992478, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "lineno": 28, "outcome": "passed", "keywords": ["test_remove_Occ_handles_single_character_string", "run.py", "test", ""], "setup": {"duration": 0.0001738469999992276, "outcome": "passed"}, "call": {"duration": 0.00015838699999992656, "outcome": "passed"}, "teardown": {"duration": 0.00014442600000030836, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "lineno": 31, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_characters", "run.py", "test", ""], "setup": {"duration": 0.00016791999999998808, "outcome": "passed"}, "call": {"duration": 0.00034584899999945407, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 33, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 33, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_characters():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:33: AssertionError"}, "teardown": {"duration": 0.00018196300000017374, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_case_sensitivity", "lineno": 34, "outcome": "failed", "keywords": ["test_remove_Occ_handles_case_sensitivity", "run.py", "test", ""], "setup": {"duration": 0.00018000000000029104, "outcome": "passed"}, "call": {"duration": 0.00035821999999985366, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 36, "message": "AssertionError: assert 'HeloWord' == 'HeoWorld'\n  \n  - HeoWorld\n  ?       -\n  + HeloWord\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 36, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_case_sensitivity():\n>       assert remove_Occ(\"HelloWorld\", \"l\") == \"HeoWorld\"\nE       AssertionError: assert 'HeloWord' == 'HeoWorld'\nE         \nE         - HeoWorld\nE         ?       -\nE         + HeloWord\nE         ?   +\n\nrun.py:36: AssertionError"}, "teardown": {"duration": 0.00017883099999949081, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 37, "outcome": "passed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017409899999965006, "outcome": "passed"}, "call": {"duration": 0.00017109599999987068, "outcome": "passed"}, "teardown": {"duration": 0.00016824500000023335, "outcome": "passed"}}]}, {"created": 1733296041.156203, "duration": 0.06132984161376953, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 4, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_single_character", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_leading_occurrence", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_remove_Occ_trailing_occurrence", "type": "Function", "lineno": 34}, {"nodeid": "run.py::test_remove_Occ_case_sensitive", "type": "Function", "lineno": 37}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 10, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00039712799999991333, "outcome": "passed"}, "call": {"duration": 0.0004812209999998096, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 12, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 12, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:12: AssertionError"}, "teardown": {"duration": 0.0003293730000000217, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 13, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00022524299999959752, "outcome": "passed"}, "call": {"duration": 0.00044349800000009765, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 15, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 15, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:15: AssertionError"}, "teardown": {"duration": 0.00020076399999968686, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 16, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00017600299999998015, "outcome": "passed"}, "call": {"duration": 0.00036797199999982766, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 18, "message": "AssertionError: assert 'ale' == 'aple'\n  \n  - aple\n  ?  -\n  + ale"}, "traceback": [{"path": "run.py", "lineno": 18, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"apple\", \"p\") == \"aple\"\nE       AssertionError: assert 'ale' == 'aple'\nE         \nE         - aple\nE         ?  -\nE         + ale\n\nrun.py:18: AssertionError"}, "teardown": {"duration": 0.00017579600000017237, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017012499999990993, "outcome": "passed"}, "call": {"duration": 0.00015924900000019448, "outcome": "passed"}, "teardown": {"duration": 0.00013714199999981247, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015549100000011862, "outcome": "passed"}, "call": {"duration": 0.00015611000000026465, "outcome": "passed"}, "teardown": {"duration": 0.00013845299999992733, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_character", "lineno": 25, "outcome": "passed", "keywords": ["test_remove_Occ_single_character", "run.py", "test", ""], "setup": {"duration": 0.00015539300000000367, "outcome": "passed"}, "call": {"duration": 0.0001464369999997217, "outcome": "passed"}, "teardown": {"duration": 0.0001399219999997925, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 28, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001494360000000583, "outcome": "passed"}, "call": {"duration": 0.00037648499999987095, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 30, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 30, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:30: AssertionError"}, "teardown": {"duration": 0.0001784719999999851, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_leading_occurrence", "lineno": 31, "outcome": "passed", "keywords": ["test_remove_Occ_leading_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016990899999980158, "outcome": "passed"}, "call": {"duration": 0.00016257899999994052, "outcome": "passed"}, "teardown": {"duration": 0.00013658900000024232, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_trailing_occurrence", "lineno": 34, "outcome": "failed", "keywords": ["test_remove_Occ_trailing_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001558959999998777, "outcome": "passed"}, "call": {"duration": 0.00034185399999975274, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 36, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 36, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_trailing_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:36: AssertionError"}, "teardown": {"duration": 0.00017470500000005273, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_sensitive", "lineno": 37, "outcome": "failed", "keywords": ["test_remove_Occ_case_sensitive", "run.py", "test", ""], "setup": {"duration": 0.00017179400000033596, "outcome": "passed"}, "call": {"duration": 0.00032984700000016076, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 39, "message": "AssertionError: assert 'Bnan' == 'Bnanan'\n  \n  - Bnanan\n  ?     --\n  + Bnan"}, "traceback": [{"path": "run.py", "lineno": 39, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_case_sensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnanan\"\nE       AssertionError: assert 'Bnan' == 'Bnanan'\nE         \nE         - Bnanan\nE         ?     --\nE         + Bnan\n\nrun.py:39: AssertionError"}, "teardown": {"duration": 0.000217845999999966, "outcome": "passed"}}]}, {"created": 1733296040.297033, "duration": 0.04885530471801758, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 5, "failed": 3, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_single_character", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_multiple_same_characters", "type": "Function", "lineno": 31}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003518580000001492, "outcome": "passed"}, "call": {"duration": 0.00018076800000010884, "outcome": "passed"}, "teardown": {"duration": 0.0001573189999999336, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016964400000007984, "outcome": "passed"}, "call": {"duration": 0.0001524809999999821, "outcome": "passed"}, "teardown": {"duration": 0.00013089100000018838, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 16, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00023452100000009857, "outcome": "passed"}, "call": {"duration": 0.00041939700000015456, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 18, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 18, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:18: AssertionError"}, "teardown": {"duration": 0.0001963549999999259, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018039799999991502, "outcome": "passed"}, "call": {"duration": 0.00015818999999983596, "outcome": "passed"}, "teardown": {"duration": 0.0001416460000001063, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015749899999994987, "outcome": "passed"}, "call": {"duration": 0.00014584399999995057, "outcome": "passed"}, "teardown": {"duration": 0.00014690000000006087, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_character", "lineno": 25, "outcome": "passed", "keywords": ["test_remove_Occ_single_character", "run.py", "test", ""], "setup": {"duration": 0.00015619799999999628, "outcome": "passed"}, "call": {"duration": 0.00014986800000005296, "outcome": "passed"}, "teardown": {"duration": 0.00012802499999997607, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 28, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001487589999999983, "outcome": "passed"}, "call": {"duration": 0.0003642999999999841, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 30, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 30, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:30: AssertionError"}, "teardown": {"duration": 0.0001775840000000084, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_same_characters", "lineno": 31, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_same_characters", "run.py", "test", ""], "setup": {"duration": 0.00017307300000002357, "outcome": "passed"}, "call": {"duration": 0.000289798999999924, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 33, "message": "AssertionError: assert 'aa' == ''\n  \n  + aa"}, "traceback": [{"path": "run.py", "lineno": 33, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_same_characters():\n>       assert remove_Occ(\"aaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aa' == ''\nE         \nE         + aa\n\nrun.py:33: AssertionError"}, "teardown": {"duration": 0.00020398600000004485, "outcome": "passed"}}]}, {"created": 1733296039.313004, "duration": 0.06036663055419922, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 3, "failed": 7, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_with_case_insensitive", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_remove_Occ_with_repeated_chars", "type": "Function", "lineno": 34}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_char_same", "type": "Function", "lineno": 37}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0003520619999999308, "outcome": "passed"}, "call": {"duration": 0.00026254199999997674, "outcome": "passed"}, "teardown": {"duration": 0.00015879299999999041, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017191900000002036, "outcome": "passed"}, "call": {"duration": 0.00015300899999992623, "outcome": "passed"}, "teardown": {"duration": 0.00012918900000014055, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "lineno": 16, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001502829999999733, "outcome": "passed"}, "call": {"duration": 0.0004207979999999445, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 18, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 18, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:18: AssertionError"}, "teardown": {"duration": 0.0001830789999999194, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "lineno": 19, "outcome": "failed", "keywords": ["test_remove_Occ_with_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001853010000001376, "outcome": "passed"}, "call": {"duration": 0.0003353209999998885, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 21, "message": "AssertionError: assert 'baaa' == 'banba'\n  \n  - banba\n  + baaa"}, "traceback": [{"path": "run.py", "lineno": 21, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_last_occurrence():\n>       assert remove_Occ(\"banana\", \"n\") == \"banba\"\nE       AssertionError: assert 'baaa' == 'banba'\nE         \nE         - banba\nE         + baaa\n\nrun.py:21: AssertionError"}, "teardown": {"duration": 0.00017822999999994593, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 22, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017162100000001068, "outcome": "passed"}, "call": {"duration": 0.0003480730000000598, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 24, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 24, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:24: AssertionError"}, "teardown": {"duration": 0.0001714660000000645, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_case_insensitive", "lineno": 25, "outcome": "failed", "keywords": ["test_remove_Occ_with_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00016784300000005636, "outcome": "passed"}, "call": {"duration": 0.0003343689999999455, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 27, "message": "AssertionError: assert 'Bnan' == 'Bnana'\n  \n  - Bnana\n  ?     -\n  + Bnan"}, "traceback": [{"path": "run.py", "lineno": 27, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_case_insensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnana\"\nE       AssertionError: assert 'Bnan' == 'Bnana'\nE         \nE         - Bnana\nE         ?     -\nE         + Bnan\n\nrun.py:27: AssertionError"}, "teardown": {"duration": 0.0001717569999999391, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 28, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016532699999993739, "outcome": "passed"}, "call": {"duration": 0.00034293400000007246, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 30, "message": "AssertionError: assert 'bnna' == 'b@nna'\n  \n  - b@nna\n  ?  -\n  + bnna"}, "traceback": [{"path": "run.py", "lineno": 30, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"b@n@na\", \"@\") == \"b@nna\"\nE       AssertionError: assert 'bnna' == 'b@nna'\nE         \nE         - b@nna\nE         ?  -\nE         + bnna\n\nrun.py:30: AssertionError"}, "teardown": {"duration": 0.0001788309999999349, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "lineno": 31, "outcome": "passed", "keywords": ["test_remove_Occ_with_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00016940399999998412, "outcome": "passed"}, "call": {"duration": 0.00015605600000001552, "outcome": "passed"}, "teardown": {"duration": 0.0001322870000000087, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_chars", "lineno": 34, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_chars", "run.py", "test", ""], "setup": {"duration": 0.0001613949999998976, "outcome": "passed"}, "call": {"duration": 0.00032672799999988733, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 36, "message": "AssertionError: assert 'aacc' == 'aaacc'\n  \n  - aaacc\n  ? -\n  + aacc"}, "traceback": [{"path": "run.py", "lineno": 36, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_chars():\n>       assert remove_Occ(\"aabbcc\", \"b\") == \"aaacc\"\nE       AssertionError: assert 'aacc' == 'aaacc'\nE         \nE         - aaacc\nE         ? -\nE         + aacc\n\nrun.py:36: AssertionError"}, "teardown": {"duration": 0.00017980999999989145, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_char_same", "lineno": 37, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_char_same", "run.py", "test", ""], "setup": {"duration": 0.00016245900000000368, "outcome": "passed"}, "call": {"duration": 0.00031969900000006213, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 39, "message": "AssertionError: assert 'bacab' == 'baca'\n  \n  - baca\n  + bacab\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 39, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_char_same():\n>       assert remove_Occ(\"abacaba\", \"a\") == \"baca\"\nE       AssertionError: assert 'bacab' == 'baca'\nE         \nE         - baca\nE         + bacab\nE         ?     +\n\nrun.py:39: AssertionError"}, "teardown": {"duration": 0.0002196059999999278, "outcome": "passed"}}]}, {"created": 1733296040.613872, "duration": 0.06171154975891113, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 5, "failed": 7, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_with_both_occurrences", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_with_multiple_same_char", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_with_only_one_char", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 34}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 37}, {"nodeid": "run.py::test_remove_Occ_with_numeric_string", "type": "Function", "lineno": 40}, {"nodeid": "run.py::test_remove_Occ_with_multiple_same_chars_at_end", "type": "Function", "lineno": 43}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00036153299999996946, "outcome": "passed"}, "call": {"duration": 0.000182552000000058, "outcome": "passed"}, "teardown": {"duration": 0.00014748999999980583, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrence", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015739100000011774, "outcome": "passed"}, "call": {"duration": 0.00014952200000006854, "outcome": "passed"}, "teardown": {"duration": 0.00012871499999977942, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "lineno": 16, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00014809900000001264, "outcome": "passed"}, "call": {"duration": 0.0003861839999999006, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 18, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 18, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:18: AssertionError"}, "teardown": {"duration": 0.00018245200000022166, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "lineno": 19, "outcome": "failed", "keywords": ["test_remove_Occ_with_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017331699999978412, "outcome": "passed"}, "call": {"duration": 0.00033775200000008, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 21, "message": "AssertionError: assert 'baaa' == 'banba'\n  \n  - banba\n  + baaa"}, "traceback": [{"path": "run.py", "lineno": 21, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_last_occurrence():\n>       assert remove_Occ(\"banana\", \"n\") == \"banba\"\nE       AssertionError: assert 'baaa' == 'banba'\nE         \nE         - banba\nE         + baaa\n\nrun.py:21: AssertionError"}, "teardown": {"duration": 0.0001727060000003, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_both_occurrences", "lineno": 22, "outcome": "failed", "keywords": ["test_remove_Occ_with_both_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017110900000005813, "outcome": "passed"}, "call": {"duration": 0.00035104200000013464, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 24, "message": "AssertionError: assert 'bracadabr' == 'brcdbr'\n  \n  - brcdbr\n  + bracadabr\n  ?   + + +"}, "traceback": [{"path": "run.py", "lineno": 24, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_both_occurrences():\n>       assert remove_Occ(\"abracadabra\", \"a\") == \"brcdbr\"\nE       AssertionError: assert 'bracadabr' == 'brcdbr'\nE         \nE         - brcdbr\nE         + bracadabr\nE         ?   + + +\n\nrun.py:24: AssertionError"}, "teardown": {"duration": 0.00017219500000020815, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_same_char", "lineno": 25, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_same_char", "run.py", "test", ""], "setup": {"duration": 0.0001659479999998048, "outcome": "passed"}, "call": {"duration": 0.0003451610000002603, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 27, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 27, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_same_char():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:27: AssertionError"}, "teardown": {"duration": 0.00017326900000025347, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "lineno": 28, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00016915800000028014, "outcome": "passed"}, "call": {"duration": 0.0003016329999998568, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 30, "message": "AssertionError: assert 'eve' == 'levl'\n  \n  - levl\n  + eve"}, "traceback": [{"path": "run.py", "lineno": 30, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_same_char():\n>       assert remove_Occ(\"level\", \"l\") == \"levl\"\nE       AssertionError: assert 'eve' == 'levl'\nE         \nE         - levl\nE         + eve\n\nrun.py:30: AssertionError"}, "teardown": {"duration": 0.0001761390000001306, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_only_one_char", "lineno": 31, "outcome": "failed", "keywords": ["test_remove_Occ_with_only_one_char", "run.py", "test", ""], "setup": {"duration": 0.0001816980000000079, "outcome": "passed"}, "call": {"duration": 0.0003309709999999022, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 33, "message": "AssertionError: assert 'aaa' == ''\n  \n  + aaa"}, "traceback": [{"path": "run.py", "lineno": 33, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_only_one_char():\n>       assert remove_Occ(\"aaaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aaa' == ''\nE         \nE         + aaa\n\nrun.py:33: AssertionError"}, "teardown": {"duration": 0.0001740550000000063, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 34, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00017354400000035852, "outcome": "passed"}, "call": {"duration": 0.0001555089999998316, "outcome": "passed"}, "teardown": {"duration": 0.00013079899999990374, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 37, "outcome": "passed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016324799999978268, "outcome": "passed"}, "call": {"duration": 0.0001464389999998872, "outcome": "passed"}, "teardown": {"duration": 0.00012717499999981285, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_numeric_string", "lineno": 40, "outcome": "passed", "keywords": ["test_remove_Occ_with_numeric_string", "run.py", "test", ""], "setup": {"duration": 0.00015263399999998484, "outcome": "passed"}, "call": {"duration": 0.00015470100000003484, "outcome": "passed"}, "teardown": {"duration": 0.00012620499999993484, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_same_chars_at_end", "lineno": 43, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_same_chars_at_end", "run.py", "test", ""], "setup": {"duration": 0.00014542999999989092, "outcome": "passed"}, "call": {"duration": 0.00033655899999995853, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 45, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 45, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_same_chars_at_end():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:45: AssertionError"}, "teardown": {"duration": 0.00020457000000018155, "outcome": "passed"}}]}, {"created": 1733296040.9504113, "duration": 0.053975582122802734, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 7, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_char_not_present", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrences", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_handles_case_insensitive", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 34}, {"nodeid": "run.py::test_remove_Occ_handles_consecutive_characters", "type": "Function", "lineno": 37}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 10, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003899500000001943, "outcome": "passed"}, "call": {"duration": 0.0005139380000001026, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 12, "message": "AssertionError: assert 'heo' == 'heloo'\n  \n  - heloo\n  ?   - -\n  + heo"}, "traceback": [{"path": "run.py", "lineno": 12, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\nE       AssertionError: assert 'heo' == 'heloo'\nE         \nE         - heloo\nE         ?   - -\nE         + heo\n\nrun.py:12: AssertionError"}, "teardown": {"duration": 0.00027140599999997406, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00021240399999999937, "outcome": "passed"}, "call": {"duration": 0.00017844999999994116, "outcome": "passed"}, "teardown": {"duration": 0.0001416830000002811, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_char_not_present", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_Occ_returns_original_string_if_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00016576999999973197, "outcome": "passed"}, "call": {"duration": 0.00015068400000028959, "outcome": "passed"}, "teardown": {"duration": 0.0001312490000002775, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001665069999998714, "outcome": "passed"}, "call": {"duration": 0.0001460899999998766, "outcome": "passed"}, "teardown": {"duration": 0.00015471700000002642, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_Occ_handles_single_character_string", "run.py", "test", ""], "setup": {"duration": 0.00015032200000009155, "outcome": "passed"}, "call": {"duration": 0.00015409199999982803, "outcome": "passed"}, "teardown": {"duration": 0.00012554899999983604, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 25, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00014850499999985445, "outcome": "passed"}, "call": {"duration": 0.000372876000000133, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 27, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 27, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:27: AssertionError"}, "teardown": {"duration": 0.00018547200000007535, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrences", "lineno": 28, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016934900000009634, "outcome": "passed"}, "call": {"duration": 0.00015764300000009612, "outcome": "passed"}, "teardown": {"duration": 0.00013421899999999098, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_case_insensitive", "lineno": 31, "outcome": "passed", "keywords": ["test_remove_Occ_handles_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00015817699999987056, "outcome": "passed"}, "call": {"duration": 0.00014661499999979455, "outcome": "passed"}, "teardown": {"duration": 0.00012818899999977873, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 34, "outcome": "passed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001497399999998983, "outcome": "passed"}, "call": {"duration": 0.00014651799999976234, "outcome": "passed"}, "teardown": {"duration": 0.00012725599999985349, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_consecutive_characters", "lineno": 37, "outcome": "failed", "keywords": ["test_remove_Occ_handles_consecutive_characters", "run.py", "test", ""], "setup": {"duration": 0.00015017400000028047, "outcome": "passed"}, "call": {"duration": 0.0003719370000001554, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 39, "message": "AssertionError: assert 'bookkepr' == 'bookkeepr'\n  \n  - bookkeepr\n  ?       -\n  + bookkepr"}, "traceback": [{"path": "run.py", "lineno": 39, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_consecutive_characters():\n>       assert remove_Occ(\"bookkeeper\", \"e\") == \"bookkeepr\"\nE       AssertionError: assert 'bookkepr' == 'bookkeepr'\nE         \nE         - bookkeepr\nE         ?       -\nE         + bookkepr\n\nrun.py:39: AssertionError"}, "teardown": {"duration": 0.0002014730000001741, "outcome": "passed"}}]}, {"created": 1733296041.4451294, "duration": 0.08319950103759766, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 5, "failed": 3, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_no_char", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_first_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_last_occurrence", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_both_occurrences", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 31}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_no_char", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_char", "run.py", "test", ""], "setup": {"duration": 0.0005538869999996976, "outcome": "passed"}, "call": {"duration": 0.0003151550000000114, "outcome": "passed"}, "teardown": {"duration": 0.0002736160000003096, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_first_occurrence", "lineno": 13, "outcome": "failed", "keywords": ["test_remove_Occ_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0007822009999998158, "outcome": "passed"}, "call": {"duration": 0.0008828169999999247, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 15, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 15, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:15: AssertionError"}, "teardown": {"duration": 0.0004582630000005139, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_last_occurrence", "lineno": 16, "outcome": "failed", "keywords": ["test_remove_Occ_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003694620000000981, "outcome": "passed"}, "call": {"duration": 0.0005612050000003421, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 18, "message": "AssertionError: assert 'baaa' == 'banba'\n  \n  - banba\n  + baaa"}, "traceback": [{"path": "run.py", "lineno": 18, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_last_occurrence():\n>       assert remove_Occ(\"banana\", \"n\") == \"banba\"\nE       AssertionError: assert 'baaa' == 'banba'\nE         \nE         - banba\nE         + baaa\n\nrun.py:18: AssertionError"}, "teardown": {"duration": 0.000413074999999985, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_both_occurrences", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_Occ_both_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0002748920000001931, "outcome": "passed"}, "call": {"duration": 0.00031342300000059, "outcome": "passed"}, "teardown": {"duration": 0.0003340840000003453, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00028061499999942896, "outcome": "passed"}, "call": {"duration": 0.0002465609999999785, "outcome": "passed"}, "teardown": {"duration": 0.00027229099999992457, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 25, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0002494870000004923, "outcome": "passed"}, "call": {"duration": 0.000690880999999699, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 27, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 27, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:27: AssertionError"}, "teardown": {"duration": 0.0002991740000002352, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 28, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.0002813809999997474, "outcome": "passed"}, "call": {"duration": 0.00037406900000025445, "outcome": "passed"}, "teardown": {"duration": 0.0002275999999996614, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 31, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00031909199999979876, "outcome": "passed"}, "call": {"duration": 0.0003254400000001212, "outcome": "passed"}, "teardown": {"duration": 0.00033167499999997574, "outcome": "passed"}}]}, {"created": 1733296041.6947992, "duration": 0.060262441635131836, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 2, "failed": 8, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 10}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrence", "type": "Function", "lineno": 13}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_Occ_with_case_insensitive", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_Occ_with_multiple_special_characters", "type": "Function", "lineno": 31}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "type": "Function", "lineno": 34}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_special_characters", "type": "Function", "lineno": 37}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 10, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00028162999999992167, "outcome": "passed"}, "call": {"duration": 0.00018754600000026045, "outcome": "passed"}, "teardown": {"duration": 0.00015624599999997102, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrence", "lineno": 13, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015881200000000817, "outcome": "passed"}, "call": {"duration": 0.00014806099999997713, "outcome": "passed"}, "teardown": {"duration": 0.00013870899999979258, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "lineno": 16, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015226099999976483, "outcome": "passed"}, "call": {"duration": 0.0003720970000000712, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 18, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 18, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:18: AssertionError"}, "teardown": {"duration": 0.00017816499999989688, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "lineno": 19, "outcome": "failed", "keywords": ["test_remove_Occ_with_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017818400000013668, "outcome": "passed"}, "call": {"duration": 0.00031754199999989297, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 21, "message": "AssertionError: assert 'baaa' == 'banba'\n  \n  - banba\n  + baaa"}, "traceback": [{"path": "run.py", "lineno": 21, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_last_occurrence():\n>       assert remove_Occ(\"banana\", \"n\") == \"banba\"\nE       AssertionError: assert 'baaa' == 'banba'\nE         \nE         - banba\nE         + baaa\n\nrun.py:21: AssertionError"}, "teardown": {"duration": 0.00018125099999988237, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 22, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.000169466000000007, "outcome": "passed"}, "call": {"duration": 0.00032729099999961875, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 24, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 24, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:24: AssertionError"}, "teardown": {"duration": 0.00018545000000003142, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_case_insensitive", "lineno": 25, "outcome": "failed", "keywords": ["test_remove_Occ_with_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.0001699830000001512, "outcome": "passed"}, "call": {"duration": 0.0003240130000001784, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 27, "message": "AssertionError: assert 'Bnan' == 'Bnana'\n  \n  - Bnana\n  ?     -\n  + Bnan"}, "traceback": [{"path": "run.py", "lineno": 27, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_case_insensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnana\"\nE       AssertionError: assert 'Bnan' == 'Bnana'\nE         \nE         - Bnana\nE         ?     -\nE         + Bnan\n\nrun.py:27: AssertionError"}, "teardown": {"duration": 0.00017727800000022498, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 28, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016769299999985776, "outcome": "passed"}, "call": {"duration": 0.0003568710000001474, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 30, "message": "AssertionError: assert 'helloworld' == 'hello@worl'\n  \n  - hello@worl\n  ?      -\n  + helloworld\n  ?          +"}, "traceback": [{"path": "run.py", "lineno": 30, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"hello@world\", \"@\") == \"hello@worl\"\nE       AssertionError: assert 'helloworld' == 'hello@worl'\nE         \nE         - hello@worl\nE         ?      -\nE         + helloworld\nE         ?          +\n\nrun.py:30: AssertionError"}, "teardown": {"duration": 0.0001741869999998258, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_special_characters", "lineno": 31, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017036999999975322, "outcome": "passed"}, "call": {"duration": 0.00034384600000025856, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 33, "message": "AssertionError: assert 'helloworld' == 'hello@worl'\n  \n  - hello@worl\n  ?      -\n  + helloworld\n  ?          +"}, "traceback": [{"path": "run.py", "lineno": 33, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_special_characters():\n>       assert remove_Occ(\"hello@@world\", \"@\") == \"hello@worl\"\nE       AssertionError: assert 'helloworld' == 'hello@worl'\nE         \nE         - hello@worl\nE         ?      -\nE         + helloworld\nE         ?          +\n\nrun.py:33: AssertionError"}, "teardown": {"duration": 0.0001764569999997967, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "lineno": 34, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016926700000041706, "outcome": "passed"}, "call": {"duration": 0.000353401000000364, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 36, "message": "AssertionError: assert 'hello@world' == 'hello@worl'\n  \n  - hello@worl\n  + hello@world\n  ?           +"}, "traceback": [{"path": "run.py", "lineno": 36, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_special_characters():\n>       assert remove_Occ(\"hello@@@world\", \"@\") == \"hello@worl\"\nE       AssertionError: assert 'hello@world' == 'hello@worl'\nE         \nE         - hello@worl\nE         + hello@world\nE         ?           +\n\nrun.py:36: AssertionError"}, "teardown": {"duration": 0.00017446699999990045, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_special_characters", "lineno": 37, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017922600000019884, "outcome": "passed"}, "call": {"duration": 0.0003319550000000504, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 39, "message": "AssertionError: assert 'hello@world' == 'hello@worl'\n  \n  - hello@worl\n  + hello@world\n  ?           +"}, "traceback": [{"path": "run.py", "lineno": 39, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_special_characters():\n>       assert remove_Occ(\"@hello@world@\", \"@\") == \"hello@worl\"\nE       AssertionError: assert 'hello@world' == 'hello@worl'\nE         \nE         - hello@worl\nE         + hello@world\nE         ?           +\n\nrun.py:39: AssertionError"}, "teardown": {"duration": 0.00021061499999985855, "outcome": "passed"}}]}, {"created": 1733296040.5871568, "duration": 0.04358339309692383, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 1, "passed": 4, "total": 5, "collected": 5}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test1", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test2", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test3", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test4", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test5", "type": "Function", "lineno": 18}]}], "tests": [{"nodeid": "run.py::test1", "lineno": 6, "outcome": "failed", "keywords": ["test1", "run.py", "test", ""], "setup": {"duration": 0.0004271450000001842, "outcome": "passed"}, "call": {"duration": 0.0005002790000001589, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test1():\n>       assert remove_Occ(\"hello\",\"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00023723000000019923, "outcome": "passed"}}, {"nodeid": "run.py::test2", "lineno": 9, "outcome": "passed", "keywords": ["test2", "run.py", "test", ""], "setup": {"duration": 0.00020357899999989826, "outcome": "passed"}, "call": {"duration": 0.00019770299999999352, "outcome": "passed"}, "teardown": {"duration": 0.00014915399999981815, "outcome": "passed"}}, {"nodeid": "run.py::test3", "lineno": 12, "outcome": "passed", "keywords": ["test3", "run.py", "test", ""], "setup": {"duration": 0.0001799259999999414, "outcome": "passed"}, "call": {"duration": 0.00015729900000005514, "outcome": "passed"}, "teardown": {"duration": 0.00013231599999974364, "outcome": "passed"}}, {"nodeid": "run.py::test4", "lineno": 15, "outcome": "passed", "keywords": ["test4", "run.py", "test", ""], "setup": {"duration": 0.00017544899999988317, "outcome": "passed"}, "call": {"duration": 0.00015133700000014016, "outcome": "passed"}, "teardown": {"duration": 0.0001333439999999797, "outcome": "passed"}}, {"nodeid": "run.py::test5", "lineno": 18, "outcome": "passed", "keywords": ["test5", "run.py", "test", ""], "setup": {"duration": 0.00015666500000000028, "outcome": "passed"}, "call": {"duration": 0.0001583830000000397, "outcome": "passed"}, "teardown": {"duration": 0.00016915600000011466, "outcome": "passed"}}]}, {"created": 1733296041.265632, "duration": 0.05741620063781738, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 8, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_char_at_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_char_at_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_case_sensitive", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_special_chars", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_multiple_special_chars", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_whole_string", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_Occ_empty_string_input", "type": "Function", "lineno": 36}, {"nodeid": "run.py::test_remove_Occ_string_with_no_removal", "type": "Function", "lineno": 39}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.0008163139999997071, "outcome": "passed"}, "call": {"duration": 0.0004147039999997659, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_single_char():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00023781100000030975, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00018824600000000302, "outcome": "passed"}, "call": {"duration": 0.00016295999999993427, "outcome": "passed"}, "teardown": {"duration": 0.00014695899999983553, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016912900000010112, "outcome": "passed"}, "call": {"duration": 0.00015256599999968756, "outcome": "passed"}, "teardown": {"duration": 0.0001318200000000047, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001560050000000146, "outcome": "passed"}, "call": {"duration": 0.00014274800000002585, "outcome": "passed"}, "teardown": {"duration": 0.0001288749999996952, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_at_start", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00015628000000011966, "outcome": "passed"}, "call": {"duration": 0.00014593300000020903, "outcome": "passed"}, "teardown": {"duration": 0.0001270039999998751, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_at_end", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00014440399999982034, "outcome": "passed"}, "call": {"duration": 0.00014107899999959983, "outcome": "passed"}, "teardown": {"duration": 0.00012722999999992268, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_sensitive", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_case_sensitive", "run.py", "test", ""], "setup": {"duration": 0.00014683499999978977, "outcome": "passed"}, "call": {"duration": 0.00036083699999966967, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'He' == 'Heo'\n  \n  - Heo\n  ?   -\n  + He"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_case_sensitive():\n>       assert remove_Occ(\"Hello\", \"l\") == \"Heo\"\nE       AssertionError: assert 'He' == 'Heo'\nE         \nE         - Heo\nE         ?   -\nE         + He\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017815700000012313, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_special_chars", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_special_chars", "run.py", "test", ""], "setup": {"duration": 0.00017440799999990375, "outcome": "passed"}, "call": {"duration": 0.0003546820000002171, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '!#hello' == '!#hello#$'\n  \n  - !#hello#$\n  ?        --\n  + !#hello"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_special_chars():\n>       assert remove_Occ(\"!@#hello@#$\", \"@\") == \"!#hello#$\"\nE       AssertionError: assert '!#hello' == '!#hello#$'\nE         \nE         - !#hello#$\nE         ?        --\nE         + !#hello\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017326600000000525, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_special_chars", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_special_chars", "run.py", "test", ""], "setup": {"duration": 0.00016987299999993155, "outcome": "passed"}, "call": {"duration": 0.0003543299999999583, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert '!hello!' == 'hello!!'\n  \n  - hello!!\n  ?       -\n  + !hello!\n  ? +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_special_chars():\n>       assert remove_Occ(\"!!hello!!\", \"!\") == \"hello!!\"\nE       AssertionError: assert '!hello!' == 'hello!!'\nE         \nE         - hello!!\nE         ?       -\nE         + !hello!\nE         ? +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00018813400000006197, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_whole_string", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_whole_string", "run.py", "test", ""], "setup": {"duration": 0.00018260899999988922, "outcome": "passed"}, "call": {"duration": 0.00015627999999967557, "outcome": "passed"}, "teardown": {"duration": 0.0001321239999998447, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string_input", "lineno": 36, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string_input", "run.py", "test", ""], "setup": {"duration": 0.00015540500000010837, "outcome": "passed"}, "call": {"duration": 0.00014697699999999259, "outcome": "passed"}, "teardown": {"duration": 0.00012996199999992797, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_string_with_no_removal", "lineno": 39, "outcome": "passed", "keywords": ["test_remove_Occ_string_with_no_removal", "run.py", "test", ""], "setup": {"duration": 0.00015471099999997406, "outcome": "passed"}, "call": {"duration": 0.0001422769999996909, "outcome": "passed"}, "teardown": {"duration": 0.00016465900000017797, "outcome": "passed"}}]}, {"created": 1733296042.1367345, "duration": 0.05774569511413574, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 5, "failed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_single_character_from_start", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_middle", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_OCC_removes_single_character_from_end", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_start", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_middle", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_leaves_string_unchanged_if_no_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_single_character", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_multiple_same_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_single_character_from_start", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_removes_single_character_from_start", "run.py", "test", ""], "setup": {"duration": 0.00037310399999990196, "outcome": "passed"}, "call": {"duration": 0.0002528329999997858, "outcome": "passed"}, "teardown": {"duration": 0.0001617930000001877, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_middle", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_single_character_from_middle", "run.py", "test", ""], "setup": {"duration": 0.00017131900000011413, "outcome": "passed"}, "call": {"duration": 0.0004215700000003153, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_single_character_from_middle():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00019115399999991567, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_OCC_removes_single_character_from_end", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_OCC_removes_single_character_from_end", "run.py", "test", ""], "setup": {"duration": 0.00018739299999959158, "outcome": "passed"}, "call": {"duration": 0.00016167199999994608, "outcome": "passed"}, "teardown": {"duration": 0.00013771500000014925, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_start", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_start", "run.py", "test", ""], "setup": {"duration": 0.00015898899999999827, "outcome": "passed"}, "call": {"duration": 0.0003568529999999903, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'b' == 'bkkeeper'\n  \n  - bkkeeper\n  + b"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_start():\n>       assert remove_Occ(\"bookkeeper\", \"o\") == \"bkkeeper\"\nE       AssertionError: assert 'b' == 'bkkeeper'\nE         \nE         - bkkeeper\nE         + b\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00018098699999979928, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_middle", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_middle", "run.py", "test", ""], "setup": {"duration": 0.00018673399999968865, "outcome": "passed"}, "call": {"duration": 0.0003486280000002395, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_middle():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00018993099999997654, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_end", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_end", "run.py", "test", ""], "setup": {"duration": 0.0001715710000000925, "outcome": "passed"}, "call": {"duration": 0.0003482189999997054, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'chaacte' == 'chacter'\n  \n  - chacter\n  ?       -\n  + chaacte\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_end():\n>       assert remove_Occ(\"character\", \"r\") == \"chacter\"\nE       AssertionError: assert 'chaacte' == 'chacter'\nE         \nE         - chacter\nE         ?       -\nE         + chaacte\nE         ?   +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017928799999999967, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_leaves_string_unchanged_if_no_occurrences", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_leaves_string_unchanged_if_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001726059999995755, "outcome": "passed"}, "call": {"duration": 0.0001669249999998179, "outcome": "passed"}, "teardown": {"duration": 0.00013673100000000105, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015660999999989045, "outcome": "passed"}, "call": {"duration": 0.00014472099999984778, "outcome": "passed"}, "teardown": {"duration": 0.00013364199999976734, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_single_character", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_single_character", "run.py", "test", ""], "setup": {"duration": 0.0001535509999999185, "outcome": "passed"}, "call": {"duration": 0.00014583899999998096, "outcome": "passed"}, "teardown": {"duration": 0.00013064899999992718, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_multiple_same_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_handles_string_with_multiple_same_characters", "run.py", "test", ""], "setup": {"duration": 0.0001541290000002249, "outcome": "passed"}, "call": {"duration": 0.0002758900000001674, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'a' == ''\n  \n  + a"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_string_with_multiple_same_characters():\n>       assert remove_Occ(\"aaa\", \"a\") == \"\"\nE       AssertionError: assert 'a' == ''\nE         \nE         + a\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00021682099999997817, "outcome": "passed"}}]}, {"created": 1733296041.814931, "duration": 0.05543327331542969, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 4, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence_from_left", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_first_occurrence_from_right", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_case_sensitive", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_string_without_target_character", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_removes_all_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_characters", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence_from_left", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence_from_left", "run.py", "test", ""], "setup": {"duration": 0.0003485919999999254, "outcome": "passed"}, "call": {"duration": 0.0004896290000000469, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence_from_left():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00024060500000011587, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_first_occurrence_from_right", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence_from_right", "run.py", "test", ""], "setup": {"duration": 0.0002254719999998933, "outcome": "passed"}, "call": {"duration": 0.00017229299999987902, "outcome": "passed"}, "teardown": {"duration": 0.0001446720000002344, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_case_sensitive", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_case_sensitive", "run.py", "test", ""], "setup": {"duration": 0.00016464399999982504, "outcome": "passed"}, "call": {"duration": 0.00037086000000030594, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'HeLO' == 'HeLo'\n  \n  - HeLo\n  ?    ^\n  + HeLO\n  ?    ^"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_case_sensitive():\n>       assert remove_Occ(\"HeLlO\", \"l\") == \"HeLo\"\nE       AssertionError: assert 'HeLO' == 'HeLo'\nE         \nE         - HeLo\nE         ?    ^\nE         + HeLO\nE         ?    ^\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00018387899999972035, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017355600000001914, "outcome": "passed"}, "call": {"duration": 0.00015404700000010152, "outcome": "passed"}, "teardown": {"duration": 0.00014704399999976303, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_without_target_character", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_without_target_character", "run.py", "test", ""], "setup": {"duration": 0.00015772599999985815, "outcome": "passed"}, "call": {"duration": 0.00014550099999999233, "outcome": "passed"}, "teardown": {"duration": 0.0001309749999998111, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_all_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_removes_all_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001563900000003393, "outcome": "passed"}, "call": {"duration": 0.00035419900000022153, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'bnan' == 'bnn'\n  \n  - bnn\n  + bnan\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_all_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnn\"\nE       AssertionError: assert 'bnan' == 'bnn'\nE         \nE         - bnn\nE         + bnan\nE         ?   +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017564500000011307, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_characters", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_characters", "run.py", "test", ""], "setup": {"duration": 0.00017074299999997322, "outcome": "passed"}, "call": {"duration": 0.0003597060000002372, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'msssspp'\n  \n  - msssspp\n  + mssissipp\n  ?    +  +"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_characters():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"msssspp\"\nE       AssertionError: assert 'mssissipp' == 'msssspp'\nE         \nE         - msssspp\nE         + mssissipp\nE         ?    +  +\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00018268499999996024, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_characters", "run.py", "test", ""], "setup": {"duration": 0.00022432099999969424, "outcome": "passed"}, "call": {"duration": 0.0002949459999999071, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'aaa' == ''\n  \n  + aaa"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_characters():\n>       assert remove_Occ(\"aaaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aaa' == ''\nE         \nE         + aaa\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0001802820000000871, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017544900000032726, "outcome": "passed"}, "call": {"duration": 0.000158243999999641, "outcome": "passed"}, "teardown": {"duration": 0.0001696240000002014, "outcome": "passed"}}]}, {"created": 1733296042.1571777, "duration": 0.05871105194091797, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 7, "failed": 5, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_single_character_from_start", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_end", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_middle", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_character_not_present", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_middle", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_target_character", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_no_target_character", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_multiple_target_characters", "type": "Function", "lineno": 36}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_target_character_at_end", "type": "Function", "lineno": 39}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_single_character_from_start", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_removes_single_character_from_start", "run.py", "test", ""], "setup": {"duration": 0.0003739830000002442, "outcome": "passed"}, "call": {"duration": 0.00018214699999985484, "outcome": "passed"}, "teardown": {"duration": 0.00015419100000002572, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_end", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_single_character_from_end", "run.py", "test", ""], "setup": {"duration": 0.0001612500000001127, "outcome": "passed"}, "call": {"duration": 0.000160210000000216, "outcome": "passed"}, "teardown": {"duration": 0.00013047300000001982, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_middle", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_removes_single_character_from_middle", "run.py", "test", ""], "setup": {"duration": 0.00015647100000037995, "outcome": "passed"}, "call": {"duration": 0.00039647000000009314, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'che' == 'chey'\n  \n  - chey\n  ?    -\n  + che"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_single_character_from_middle():\n>       assert remove_Occ(\"cherry\", \"r\") == \"chey\"\nE       AssertionError: assert 'che' == 'chey'\nE         \nE         - chey\nE         ?    -\nE         + che\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00018585399999970775, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_character_not_present", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_returns_original_string_if_character_not_present", "run.py", "test", ""], "setup": {"duration": 0.00017289100000006385, "outcome": "passed"}, "call": {"duration": 0.00015272700000013018, "outcome": "passed"}, "teardown": {"duration": 0.00013699600000016687, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_start", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_start", "run.py", "test", ""], "setup": {"duration": 0.00016163999999996292, "outcome": "passed"}, "call": {"duration": 0.00037242699999984197, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_start():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00017501600000002782, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_end", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_end", "run.py", "test", ""], "setup": {"duration": 0.0001672429999999281, "outcome": "passed"}, "call": {"duration": 0.0003459749999996653, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mississi' == 'missisi'\n  \n  - missisi\n  + mississi\n  ?       +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_end():\n>       assert remove_Occ(\"mississippi\", \"p\") == \"missisi\"\nE       AssertionError: assert 'mississi' == 'missisi'\nE         \nE         - missisi\nE         + mississi\nE         ?       +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017894299999987595, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_middle", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_middle", "run.py", "test", ""], "setup": {"duration": 0.00017374299999994847, "outcome": "passed"}, "call": {"duration": 0.0003154880000000304, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'misis' == 'miiippi'\n  \n  - miiippi\n  + misis"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_middle():\n>       assert remove_Occ(\"mississippi\", \"s\") == \"miiippi\"\nE       AssertionError: assert 'misis' == 'miiippi'\nE         \nE         - miiippi\nE         + misis\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00016826299999994632, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016775400000001994, "outcome": "passed"}, "call": {"duration": 0.00015157800000009658, "outcome": "passed"}, "teardown": {"duration": 0.0001313500000001966, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_target_character", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_string_with_only_target_character", "run.py", "test", ""], "setup": {"duration": 0.00016882699999998252, "outcome": "passed"}, "call": {"duration": 0.00027947800000038825, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'aa' == ''\n  \n  + aa"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_string_with_only_target_character():\n>       assert remove_Occ(\"aaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aa' == ''\nE         \nE         + aa\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00018465499999997803, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_no_target_character", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_no_target_character", "run.py", "test", ""], "setup": {"duration": 0.00016837999999985698, "outcome": "passed"}, "call": {"duration": 0.0001510520000000959, "outcome": "passed"}, "teardown": {"duration": 0.0001310879999998349, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_multiple_target_characters", "lineno": 36, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_multiple_target_characters", "run.py", "test", ""], "setup": {"duration": 0.00017129300000018333, "outcome": "passed"}, "call": {"duration": 0.0001480529999997593, "outcome": "passed"}, "teardown": {"duration": 0.0001306849999997972, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_target_character_at_end", "lineno": 39, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_target_character_at_end", "run.py", "test", ""], "setup": {"duration": 0.0001680550000000558, "outcome": "passed"}, "call": {"duration": 0.00015348099999989984, "outcome": "passed"}, "teardown": {"duration": 0.0001567910000002115, "outcome": "passed"}}]}, {"created": 1733296041.1267471, "duration": 0.05394387245178223, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_single_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_first_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_single_character", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_special_characters", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_multiple_special_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_single_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_single_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00028319199999993216, "outcome": "passed"}, "call": {"duration": 0.0004564579999999374, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_single_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020790900000022816, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00019256999999983648, "outcome": "passed"}, "call": {"duration": 0.00015764100000037473, "outcome": "passed"}, "teardown": {"duration": 0.00013626000000011018, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_first_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015476199999975293, "outcome": "passed"}, "call": {"duration": 0.0003090229999997973, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'a' == 'ale'\n  \n  - ale\n  + a"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_first_occurrence():\n>       assert remove_Occ(\"apple\", \"p\") == \"ale\"\nE       AssertionError: assert 'a' == 'ale'\nE         \nE         - ale\nE         + a\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00017748300000031136, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_last_occurrence", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016445500000017432, "outcome": "passed"}, "call": {"duration": 0.00015394000000013008, "outcome": "passed"}, "teardown": {"duration": 0.000132228000000012, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015814599999997014, "outcome": "passed"}, "call": {"duration": 0.00014129699999987366, "outcome": "passed"}, "teardown": {"duration": 0.00012782900000019026, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001473169999997026, "outcome": "passed"}, "call": {"duration": 0.0001407669999999861, "outcome": "passed"}, "teardown": {"duration": 0.00012431199999962672, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_character", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_single_character", "run.py", "test", ""], "setup": {"duration": 0.00014620200000026173, "outcome": "passed"}, "call": {"duration": 0.00013700500000002336, "outcome": "passed"}, "teardown": {"duration": 0.00012695500000026172, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.0001442520000001224, "outcome": "passed"}, "call": {"duration": 0.0003233800000002063, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'Apple' == 'ppl'\n  \n  - ppl\n  + Apple\n  ? +   +"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_case_insensitive():\n>       assert remove_Occ(\"Apple\", \"a\") == \"ppl\"\nE       AssertionError: assert 'Apple' == 'ppl'\nE         \nE         - ppl\nE         + Apple\nE         ? +   +\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0001683899999997962, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016634100000034735, "outcome": "passed"}, "call": {"duration": 0.00035415500000013367, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'helloworld' == 'helloorld'\n  \n  - helloorld\n  + helloworld\n  ?      +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_special_characters():\n>       assert remove_Occ(\"hello@world\", \"@\") == \"helloorld\"\nE       AssertionError: assert 'helloworld' == 'helloorld'\nE         \nE         - helloorld\nE         + helloworld\nE         ?      +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.0001647609999997357, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_special_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001662780000000197, "outcome": "passed"}, "call": {"duration": 0.0003030130000003517, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'helloworld' == 'helloorldpython'\n  \n  - helloorldpython\n  + helloworld"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_special_characters():\n>       assert remove_Occ(\"hello@world@python\", \"@\") == \"helloorldpython\"\nE       AssertionError: assert 'helloworld' == 'helloorldpython'\nE         \nE         - helloorldpython\nE         + helloworld\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00021036500000004565, "outcome": "passed"}}]}, {"created": 1733296042.0634644, "duration": 0.05096435546875, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 6, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_removes_first_and_last_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_keeps_only_middle_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_removes_first_and_last_of_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_single_character", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003087510000003846, "outcome": "passed"}, "call": {"duration": 0.0004855239999996819, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00023869599999981617, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018455100000025482, "outcome": "passed"}, "call": {"duration": 0.00015811000000010011, "outcome": "passed"}, "teardown": {"duration": 0.0001441250000002725, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_returns_original_string_if_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00016109600000024926, "outcome": "passed"}, "call": {"duration": 0.00014556299999979316, "outcome": "passed"}, "teardown": {"duration": 0.00012888600000016126, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_first_and_last_occurrences", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_and_last_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015266999999985487, "outcome": "passed"}, "call": {"duration": 0.00014409099999967978, "outcome": "passed"}, "teardown": {"duration": 0.00012547200000012637, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_only_middle_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_only_middle_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00014642700000022657, "outcome": "passed"}, "call": {"duration": 0.00035020499999971477, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'baa' == 'bana'\n  \n  - bana\n  ?   -\n  + baa"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_only_middle_occurrences():\n>       assert remove_Occ(\"banana\", \"n\") == \"bana\"\nE       AssertionError: assert 'baa' == 'bana'\nE         \nE         - bana\nE         ?   -\nE         + baa\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00017368600000011725, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_first_and_last_of_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_and_last_of_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001674339999997443, "outcome": "passed"}, "call": {"duration": 0.000351043999999856, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'mssisspp'\n  \n  - mssisspp\n  + mssissipp\n  ?       +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_and_last_of_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssisspp\"\nE       AssertionError: assert 'mssissipp' == 'mssisspp'\nE         \nE         - mssisspp\nE         + mssissipp\nE         ?       +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00016782900000000822, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016422399999971304, "outcome": "passed"}, "call": {"duration": 0.0001585010000000331, "outcome": "passed"}, "teardown": {"duration": 0.00013567899999999966, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_single_character_string", "run.py", "test", ""], "setup": {"duration": 0.00015413099999994628, "outcome": "passed"}, "call": {"duration": 0.00014269099999975055, "outcome": "passed"}, "teardown": {"duration": 0.0001373080000002247, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_single_character", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_single_character", "run.py", "test", ""], "setup": {"duration": 0.00016319999999980794, "outcome": "passed"}, "call": {"duration": 0.00013945100000034572, "outcome": "passed"}, "teardown": {"duration": 0.00015507200000008936, "outcome": "passed"}}]}, {"created": 1733296043.2276247, "duration": 0.052965641021728516, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 6, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_is_first", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_is_last", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_replaced_segment_is_empty", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_single_char_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_replacement_char", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003144729999999818, "outcome": "passed"}, "call": {"duration": 0.0004121010000002201, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002016099999999632, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00020167199999976404, "outcome": "passed"}, "call": {"duration": 0.00017063600000000179, "outcome": "passed"}, "teardown": {"duration": 0.00013575199999982246, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_string_unchanged_if_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00015657699999982455, "outcome": "passed"}, "call": {"duration": 0.00014735099999985124, "outcome": "passed"}, "teardown": {"duration": 0.0001328339999999706, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_is_first", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_string_unchanged_if_char_is_first", "run.py", "test", ""], "setup": {"duration": 0.00015360900000027655, "outcome": "passed"}, "call": {"duration": 0.00014489799999983788, "outcome": "passed"}, "teardown": {"duration": 0.00013167499999999777, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_is_last", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_string_unchanged_if_char_is_last", "run.py", "test", ""], "setup": {"duration": 0.00015004099999993414, "outcome": "passed"}, "call": {"duration": 0.00038590200000010455, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_string_unchanged_if_char_is_last():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00017846800000009821, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00018032299999992674, "outcome": "passed"}, "call": {"duration": 0.00035811399999996496, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'mssisspp'\n  \n  - mssisspp\n  + mssissipp\n  ?       +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssisspp\"\nE       AssertionError: assert 'mssissipp' == 'mssisspp'\nE         \nE         - mssisspp\nE         + mssissipp\nE         ?       +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00018330300000002353, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_replaced_segment_is_empty", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_string_unchanged_if_replaced_segment_is_empty", "run.py", "test", ""], "setup": {"duration": 0.0001811929999999684, "outcome": "passed"}, "call": {"duration": 0.00018830399999991698, "outcome": "passed"}, "teardown": {"duration": 0.0001396890000000539, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015996499999992864, "outcome": "passed"}, "call": {"duration": 0.00014556199999971042, "outcome": "passed"}, "teardown": {"duration": 0.00012916200000034905, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_char_string", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_handles_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00016310200000013708, "outcome": "passed"}, "call": {"duration": 0.00014263199999975384, "outcome": "passed"}, "teardown": {"duration": 0.0001270749999999765, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_replacement_char", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_handles_string_with_only_replacement_char", "run.py", "test", ""], "setup": {"duration": 0.0001468360000003166, "outcome": "passed"}, "call": {"duration": 0.0002834899999997198, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'aa' == ''\n  \n  + aa"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_string_with_only_replacement_char():\n>       assert remove_Occ(\"aaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aa' == ''\nE         \nE         + aa\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00020273699999995287, "outcome": "passed"}}]}, {"created": 1733296040.7004614, "duration": 0.04953432083129883, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 4, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_in_string", "run.py", "test", ""], "setup": {"duration": 0.0003159790000002438, "outcome": "passed"}, "call": {"duration": 0.0004495819999998929, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_in_string():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0001993069999999264, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.0001780970000000437, "outcome": "passed"}, "call": {"duration": 0.0001548439999998763, "outcome": "passed"}, "teardown": {"duration": 0.000137372000000191, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015978599999977305, "outcome": "passed"}, "call": {"duration": 0.000330103000000026, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.0001680880000001217, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00016500500000038443, "outcome": "passed"}, "call": {"duration": 0.00029648999999976056, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'boo' == 'bookeeper'\n  \n  - bookeeper\n  + boo"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_same_char():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'boo' == 'bookeeper'\nE         \nE         - bookeeper\nE         + boo\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017046700000022952, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00018289199999976802, "outcome": "passed"}, "call": {"duration": 0.00016721899999971868, "outcome": "passed"}, "teardown": {"duration": 0.00013455200000001, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00015241299999990687, "outcome": "passed"}, "call": {"duration": 0.00014187999999970557, "outcome": "passed"}, "teardown": {"duration": 0.00013771099999981828, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.0001466610000000479, "outcome": "passed"}, "call": {"duration": 0.00013950499999992871, "outcome": "passed"}, "teardown": {"duration": 0.0001256120000001637, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00014690999999977805, "outcome": "passed"}, "call": {"duration": 0.000341595999999722, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'appl' == 'apppl'\n  \n  - apppl\n  ?    -\n  + appl"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_at_end():\n>       assert remove_Occ(\"apple\", \"e\") == \"apppl\"\nE       AssertionError: assert 'appl' == 'apppl'\nE         \nE         - apppl\nE         ?    -\nE         + appl\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0001979880000000378, "outcome": "passed"}}]}, {"created": 1733296041.513241, "duration": 0.06607723236083984, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 4, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_multiple_chars", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_in_string", "run.py", "test", ""], "setup": {"duration": 0.00035002500000036463, "outcome": "passed"}, "call": {"duration": 0.0005621470000001239, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_in_string():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00021261900000002498, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.0002285960000003584, "outcome": "passed"}, "call": {"duration": 0.00022895499999986413, "outcome": "passed"}, "teardown": {"duration": 0.0001900790000002317, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0002073199999998998, "outcome": "passed"}, "call": {"duration": 0.00045621400000017687, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00020879900000014828, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00020951599999996517, "outcome": "passed"}, "call": {"duration": 0.00019219599999997783, "outcome": "passed"}, "teardown": {"duration": 0.00019261099999967612, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00020322299999975257, "outcome": "passed"}, "call": {"duration": 0.00040702700000005976, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'es' == 'tes'\n  \n  - tes\n  ? -\n  + es"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_at_end():\n>       assert remove_Occ(\"test\", \"t\") == \"tes\"\nE       AssertionError: assert 'es' == 'tes'\nE         \nE         - tes\nE         ? -\nE         + es\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00020224299999993534, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_chars", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.0002259840000000679, "outcome": "passed"}, "call": {"duration": 0.00041276999999961816, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00020498099999999297, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00021483900000029976, "outcome": "passed"}, "call": {"duration": 0.00019473100000011456, "outcome": "passed"}, "teardown": {"duration": 0.0001729980000000353, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00020697400000013744, "outcome": "passed"}, "call": {"duration": 0.0001925260000001927, "outcome": "passed"}, "teardown": {"duration": 0.0001724530000002389, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.0002058190000000515, "outcome": "passed"}, "call": {"duration": 0.00036526800000036275, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'o' == 'op'\n  \n  - op\n  + o"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_same_char():\n>       assert remove_Occ(\"pop\", \"p\") == \"op\"\nE       AssertionError: assert 'o' == 'op'\nE         \nE         - op\nE         + o\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.0002470169999999605, "outcome": "passed"}}]}, {"created": 1733296042.8365617, "duration": 0.048436641693115234, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 5, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_string_without_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_char_at_end", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_char_at_start", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00030618500000034743, "outcome": "passed"}, "call": {"duration": 0.00046512800000009236, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020688499999987897, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019439800000053964, "outcome": "passed"}, "call": {"duration": 0.00016084800000015775, "outcome": "passed"}, "teardown": {"duration": 0.0001349890000001963, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00015572700000010542, "outcome": "passed"}, "call": {"duration": 0.00015736000000021733, "outcome": "passed"}, "teardown": {"duration": 0.0001281510000001873, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00014996500000030721, "outcome": "passed"}, "call": {"duration": 0.0001495660000001564, "outcome": "passed"}, "teardown": {"duration": 0.0001294409999994528, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_without_char", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_without_char", "run.py", "test", ""], "setup": {"duration": 0.00014830700000079133, "outcome": "passed"}, "call": {"duration": 0.00015434399999936232, "outcome": "passed"}, "teardown": {"duration": 0.0001292219999999844, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001517650000000259, "outcome": "passed"}, "call": {"duration": 0.00033422400000038266, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017499600000014937, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_char_at_end", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00017023599999976824, "outcome": "passed"}, "call": {"duration": 0.00031559800000025007, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'boo' == 'bookeeper'\n  \n  - bookeeper\n  + boo"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_char_at_end():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'boo' == 'bookeeper'\nE         \nE         - bookeeper\nE         + boo\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.0001741329999997987, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_char_at_start", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_repeated_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00016748600000049407, "outcome": "passed"}, "call": {"duration": 0.00015477699999966177, "outcome": "passed"}, "teardown": {"duration": 0.00016553800000007612, "outcome": "passed"}}]}, {"created": 1733296040.4455388, "duration": 0.04979729652404785, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 4, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_single_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_multiple_special_characters", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_single_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_with_single_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00029637699999973677, "outcome": "passed"}, "call": {"duration": 0.00046718100000031626, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_single_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00021717700000012385, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001917749999997831, "outcome": "passed"}, "call": {"duration": 0.0003867030000002103, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00017435799999976354, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017989800000028922, "outcome": "passed"}, "call": {"duration": 0.00015436099999988073, "outcome": "passed"}, "teardown": {"duration": 0.00013328200000017887, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00015386900000002868, "outcome": "passed"}, "call": {"duration": 0.00017000899999963792, "outcome": "passed"}, "teardown": {"duration": 0.0001302910000000601, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00014919000000013227, "outcome": "passed"}, "call": {"duration": 0.00014324800000009574, "outcome": "passed"}, "teardown": {"duration": 0.00013125200000008164, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00014980799999975147, "outcome": "passed"}, "call": {"duration": 0.00013764600000021332, "outcome": "passed"}, "teardown": {"duration": 0.0001340779999998709, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001550610000000674, "outcome": "passed"}, "call": {"duration": 0.0003322329999999596, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert '!#hello' == '!#hello#'\n  \n  - !#hello#\n  ?        -\n  + !#hello"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"!@#hello@#\", \"@\") == \"!#hello#\"\nE       AssertionError: assert '!#hello' == '!#hello#'\nE         \nE         - !#hello#\nE         ?        -\nE         + !#hello\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00016849500000004625, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001683830000001052, "outcome": "passed"}, "call": {"duration": 0.000297723000000083, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '!hello' == '!hello#world'\n  \n  - !hello#world\n  + !hello"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_special_characters():\n>       assert remove_Occ(\"!@#hello@#world\", \"@#\") == \"!hello#world\"\nE       AssertionError: assert '!hello' == '!hello#world'\nE         \nE         - !hello#world\nE         + !hello\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00019541499999986556, "outcome": "passed"}}]}, {"created": 1733296043.7598958, "duration": 0.1052100658416748, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 5, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_single_character", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0007281609999996164, "outcome": "passed"}, "call": {"duration": 0.0007182410000003969, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0005065559999994917, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0005636389999992275, "outcome": "passed"}, "call": {"duration": 0.00042113200000049034, "outcome": "passed"}, "teardown": {"duration": 0.0004926729999992219, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0007870589999994237, "outcome": "passed"}, "call": {"duration": 0.00046371699999969707, "outcome": "passed"}, "teardown": {"duration": 0.0010526240000006126, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00029201400000022915, "outcome": "passed"}, "call": {"duration": 0.0021488770000006596, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.000472684000000001, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0003322069999995847, "outcome": "passed"}, "call": {"duration": 0.00027344500000037186, "outcome": "passed"}, "teardown": {"duration": 0.00022505499999958545, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_character", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_single_character", "run.py", "test", ""], "setup": {"duration": 0.00028670100000027787, "outcome": "passed"}, "call": {"duration": 0.00023557100000015652, "outcome": "passed"}, "teardown": {"duration": 0.000404035999999941, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.000249582000000359, "outcome": "passed"}, "call": {"duration": 0.0002760909999999228, "outcome": "passed"}, "teardown": {"duration": 0.004264104000000657, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00121907599999993, "outcome": "passed"}, "call": {"duration": 0.0014143779999997719, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0009056379999998754, "outcome": "passed"}}]}, {"created": 1733296040.7770224, "duration": 0.06688141822814941, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 7, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_char_not_in_string", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_char_at_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_char_at_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_single_char_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_multiple_removals", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_case_insensitive", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0004144510000001489, "outcome": "passed"}, "call": {"duration": 0.0006325869999999068, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002592559999998745, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00023122700000000052, "outcome": "passed"}, "call": {"duration": 0.00023299100000007122, "outcome": "passed"}, "teardown": {"duration": 0.00018682100000000368, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_in_string", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00020863199999987536, "outcome": "passed"}, "call": {"duration": 0.00020767700000012823, "outcome": "passed"}, "teardown": {"duration": 0.00017471900000010088, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00020270399999988697, "outcome": "passed"}, "call": {"duration": 0.00045482299999988207, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'ball' == 'balun'\n  \n  - balun\n  + ball"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"balloon\", \"o\") == \"balun\"\nE       AssertionError: assert 'ball' == 'balun'\nE         \nE         - balun\nE         + ball\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.0002024519999999086, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_start", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00020494599999998364, "outcome": "passed"}, "call": {"duration": 0.00019525300000000634, "outcome": "passed"}, "teardown": {"duration": 0.00017496899999991378, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_end", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.0002001470000001504, "outcome": "passed"}, "call": {"duration": 0.0002028760000001295, "outcome": "passed"}, "teardown": {"duration": 0.00017265000000010744, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 24, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00019774999999988552, "outcome": "passed"}, "call": {"duration": 0.00020259900000008102, "outcome": "passed"}, "teardown": {"duration": 0.00017065599999988024, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string", "lineno": 27, "outcome": "passed", "keywords": ["test_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00019884499999989202, "outcome": "passed"}, "call": {"duration": 0.0001998709999999626, "outcome": "passed"}, "teardown": {"duration": 0.00016836999999991775, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_removals", "lineno": 30, "outcome": "passed", "keywords": ["test_multiple_removals", "run.py", "test", ""], "setup": {"duration": 0.0002004880000001652, "outcome": "passed"}, "call": {"duration": 0.000203895000000065, "outcome": "passed"}, "teardown": {"duration": 0.00016880699999988202, "outcome": "passed"}}, {"nodeid": "run.py::test_case_insensitive", "lineno": 33, "outcome": "failed", "keywords": ["test_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00019943500000008108, "outcome": "passed"}, "call": {"duration": 0.00039094299999997695, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'HellW' == 'HellWorld'\n  \n  - HellWorld\n  + HellW"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_case_insensitive():\n>       assert remove_Occ(\"HelloWorld\", \"o\") == \"HellWorld\"\nE       AssertionError: assert 'HellW' == 'HellWorld'\nE         \nE         - HellWorld\nE         + HellW\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.0002512089999999745, "outcome": "passed"}}]}, {"created": 1733296041.7765903, "duration": 0.053263187408447266, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 4, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_single_char", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_char_at_start", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_char_at_end", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0004722379999995141, "outcome": "passed"}, "call": {"duration": 0.0006015539999992825, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00021819299999936703, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001910180000006534, "outcome": "passed"}, "call": {"duration": 0.0004277449999996463, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00017560000000038656, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001720950000008159, "outcome": "passed"}, "call": {"duration": 0.00015413699999999864, "outcome": "passed"}, "teardown": {"duration": 0.0001300849999994469, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char", "lineno": 15, "outcome": "passed", "keywords": ["test_single_char", "run.py", "test", ""], "setup": {"duration": 0.00016321499999971678, "outcome": "passed"}, "call": {"duration": 0.00014426499999942166, "outcome": "passed"}, "teardown": {"duration": 0.00012656600000049423, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001668679999999867, "outcome": "passed"}, "call": {"duration": 0.000350411000000328, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bnanaa' == 'banan'\n  \n  - banan\n  + bnanaa"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"bananaaa\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnanaa' == 'banan'\nE         \nE         - banan\nE         + bnanaa\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00017751499999985043, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017243500000052592, "outcome": "passed"}, "call": {"duration": 0.00015206900000030998, "outcome": "passed"}, "teardown": {"duration": 0.00013237100000029756, "outcome": "passed"}}, {"nodeid": "run.py::test_char_at_start", "lineno": 24, "outcome": "passed", "keywords": ["test_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00017404000000009745, "outcome": "passed"}, "call": {"duration": 0.00015026500000026033, "outcome": "passed"}, "teardown": {"duration": 0.00012935600000041347, "outcome": "passed"}}, {"nodeid": "run.py::test_char_at_end", "lineno": 27, "outcome": "failed", "keywords": ["test_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00015061000000038405, "outcome": "passed"}, "call": {"duration": 0.0003444999999997478, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'appl' == 'apppl'\n  \n  - apppl\n  ?    -\n  + appl"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_char_at_end():\n>       assert remove_Occ(\"apple\", \"e\") == \"apppl\"\nE       AssertionError: assert 'appl' == 'apppl'\nE         \nE         - apppl\nE         ?    -\nE         + appl\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00020800099999984667, "outcome": "passed"}}]}, {"created": 1733296040.3964891, "duration": 0.05608344078063965, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 4, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_single_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_no_replacements", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_in_middle", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_single_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_with_single_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003105940000001084, "outcome": "passed"}, "call": {"duration": 0.00044095199999993895, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'hel'\n  \n  - hel\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_single_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"hel\"\nE       AssertionError: assert 'he' == 'hel'\nE         \nE         - hel\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00018872500000011172, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00019554200000015953, "outcome": "passed"}, "call": {"duration": 0.00035927700000026874, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.0001737579999998573, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016626099999994537, "outcome": "passed"}, "call": {"duration": 0.00014838100000025278, "outcome": "passed"}, "teardown": {"duration": 0.00014274100000033485, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00015380200000025823, "outcome": "passed"}, "call": {"duration": 0.0001595089999999466, "outcome": "passed"}, "teardown": {"duration": 0.00012990000000012714, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00015603699999999776, "outcome": "passed"}, "call": {"duration": 0.0003162780000001142, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'es' == 'tes'\n  \n  - tes\n  ? -\n  + es"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_at_end():\n>       assert remove_Occ(\"test\", \"t\") == \"tes\"\nE       AssertionError: assert 'es' == 'tes'\nE         \nE         - tes\nE         ? -\nE         + es\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00017034199999965693, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016450300000014906, "outcome": "passed"}, "call": {"duration": 0.00014822699999994526, "outcome": "passed"}, "teardown": {"duration": 0.00013991199999985326, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_replacements", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_no_replacements", "run.py", "test", ""], "setup": {"duration": 0.0001536049999999456, "outcome": "passed"}, "call": {"duration": 0.0003154329999999206, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'ython' == 'python'\n  \n  - python\n  ? -\n  + ython"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_no_replacements():\n>       assert remove_Occ(\"python\", \"p\") == \"python\"\nE       AssertionError: assert 'ython' == 'python'\nE         \nE         - python\nE         ? -\nE         + ython\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017160900000012802, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00016696200000021477, "outcome": "passed"}, "call": {"duration": 0.00032060699999991726, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'boo' == 'bookeeper'\n  \n  - bookeeper\n  + boo"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_char_at_end():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'boo' == 'bookeeper'\nE         \nE         - bookeeper\nE         + boo\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017245399999987754, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_in_middle", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_in_middle", "run.py", "test", ""], "setup": {"duration": 0.00017810999999978705, "outcome": "passed"}, "call": {"duration": 0.00031662799999976343, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'hara' == 'haracter'\n  \n  - haracter\n  + hara"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_char_in_middle():\n>       assert remove_Occ(\"character\", \"c\") == \"haracter\"\nE       AssertionError: assert 'hara' == 'haracter'\nE         \nE         - haracter\nE         + hara\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00018466700000008274, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_with_repeated_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00018331699999984963, "outcome": "passed"}, "call": {"duration": 0.00016720500000033667, "outcome": "passed"}, "teardown": {"duration": 0.00016193999999991604, "outcome": "passed"}}]}, {"created": 1733296041.571667, "duration": 0.06061720848083496, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 4, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_char_from_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_char_from_single_char_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_char_from_string_with_only_target_char", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_char_from_string_with_multiple_same_chars", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_char_from_string_with_no_target_char", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0004025030000001095, "outcome": "passed"}, "call": {"duration": 0.0004941529999999972, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0003295800000000515, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00023349500000002799, "outcome": "passed"}, "call": {"duration": 0.00046681300000006587, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00019327800000001893, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001787920000000387, "outcome": "passed"}, "call": {"duration": 0.00038293400000011246, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.0001776710000001014, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.0001734700000000089, "outcome": "passed"}, "call": {"duration": 0.00015647400000018408, "outcome": "passed"}, "teardown": {"duration": 0.0001340059999999088, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00017397200000002222, "outcome": "passed"}, "call": {"duration": 0.0003426539999999978, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bacab' == 'bcb'\n  \n  - bcb\n  + bacab\n  ?  + +"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_same_char():\n>       assert remove_Occ(\"abacaba\", \"a\") == \"bcb\"\nE       AssertionError: assert 'bacab' == 'bcb'\nE         \nE         - bcb\nE         + bacab\nE         ?  + +\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00018711900000001336, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_char_from_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016860500000004386, "outcome": "passed"}, "call": {"duration": 0.0001706740000000373, "outcome": "passed"}, "teardown": {"duration": 0.0001332469999999475, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_single_char_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_char_from_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00015613299999994723, "outcome": "passed"}, "call": {"duration": 0.00014572899999998334, "outcome": "passed"}, "teardown": {"duration": 0.00014720300000004016, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_string_with_only_target_char", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_char_from_string_with_only_target_char", "run.py", "test", ""], "setup": {"duration": 0.00017595100000011854, "outcome": "passed"}, "call": {"duration": 0.0002974440000000911, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'aaa' == ''\n  \n  + aaa"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_char_from_string_with_only_target_char():\n>       assert remove_Occ(\"aaaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aaa' == ''\nE         \nE         + aaa\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00018357799999990654, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_string_with_multiple_same_chars", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_char_from_string_with_multiple_same_chars", "run.py", "test", ""], "setup": {"duration": 0.00016748499999996724, "outcome": "passed"}, "call": {"duration": 0.0003372609999998666, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_char_from_string_with_multiple_same_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017040199999995842, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_string_with_no_target_char", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_char_from_string_with_no_target_char", "run.py", "test", ""], "setup": {"duration": 0.0001658319999999769, "outcome": "passed"}, "call": {"duration": 0.00016729999999998135, "outcome": "passed"}, "teardown": {"duration": 0.00018367699999988218, "outcome": "passed"}}]}, {"created": 1733296041.5038207, "duration": 0.054094791412353516, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 5, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_no_occurrence", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_empty_string", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_char_not_in_string", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_multiple_chars", "type": "Function", "lineno": 31}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00035080199999981687, "outcome": "passed"}, "call": {"duration": 0.00044606800000002167, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'hello'\n  \n  - hello\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"hello\"\nE       AssertionError: assert 'he' == 'hello'\nE         \nE         - hello\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00023591199999994927, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019487899999992564, "outcome": "passed"}, "call": {"duration": 0.00016317399999987714, "outcome": "passed"}, "teardown": {"duration": 0.00013689699999996918, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015436400000012895, "outcome": "passed"}, "call": {"duration": 0.00031747099999979156, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'he' == 'hello'\n  \n  - hello\n  + he"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"hello\"\nE       AssertionError: assert 'he' == 'hello'\nE         \nE         - hello\nE         + he\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00018839799999970097, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_no_occurrence", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016814399999987018, "outcome": "passed"}, "call": {"duration": 0.000152619000000076, "outcome": "passed"}, "teardown": {"duration": 0.00013041800000035408, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 19, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015626600000029356, "outcome": "passed"}, "call": {"duration": 0.000350540999999982, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 21, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 21, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:21: AssertionError"}, "teardown": {"duration": 0.00016561900000011676, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00022224300000006636, "outcome": "passed"}, "call": {"duration": 0.00015090399999984072, "outcome": "passed"}, "teardown": {"duration": 0.00013055900000003007, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_empty_string", "lineno": 25, "outcome": "passed", "keywords": ["test_remove_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015132699999975685, "outcome": "passed"}, "call": {"duration": 0.0001434759999998647, "outcome": "passed"}, "teardown": {"duration": 0.00012764199999981685, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_in_string", "lineno": 28, "outcome": "passed", "keywords": ["test_remove_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.0001470879999998509, "outcome": "passed"}, "call": {"duration": 0.00013869200000016235, "outcome": "passed"}, "teardown": {"duration": 0.00012817300000023124, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_chars", "lineno": 31, "outcome": "failed", "keywords": ["test_remove_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00014590799999991688, "outcome": "passed"}, "call": {"duration": 0.0003472019999999354, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 33, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 33, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:33: AssertionError"}, "teardown": {"duration": 0.00020846599999968518, "outcome": "passed"}}]}, {"created": 1733296042.9572475, "duration": 0.06025075912475586, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 7, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_keeps_case_sensitive", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_single_character", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_first_character", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_last_character", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_middle_character", "type": "Function", "lineno": 36}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_one_character", "type": "Function", "lineno": 39}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0011967799999998974, "outcome": "passed"}, "call": {"duration": 0.00047737900000033306, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00024028700000044978, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018800399999996387, "outcome": "passed"}, "call": {"duration": 0.00016094300000002448, "outcome": "passed"}, "teardown": {"duration": 0.00013588699999989018, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00016106800000059707, "outcome": "passed"}, "call": {"duration": 0.00015066700000065936, "outcome": "passed"}, "teardown": {"duration": 0.00013351699999919475, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_case_sensitive", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_case_sensitive", "run.py", "test", ""], "setup": {"duration": 0.00016557100000014202, "outcome": "passed"}, "call": {"duration": 0.00032148699999989816, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'HellW' == 'HellWorld'\n  \n  - HellWorld\n  + HellW"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_case_sensitive():\n>       assert remove_Occ(\"HelloWorld\", \"o\") == \"HellWorld\"\nE       AssertionError: assert 'HellW' == 'HellWorld'\nE         \nE         - HellWorld\nE         + HellW\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017858800000070119, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017054000000005232, "outcome": "passed"}, "call": {"duration": 0.00016013699999994913, "outcome": "passed"}, "teardown": {"duration": 0.0001356140000003947, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001557550000006458, "outcome": "passed"}, "call": {"duration": 0.00014603899999965364, "outcome": "passed"}, "teardown": {"duration": 0.00014719600000034916, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015509500000021603, "outcome": "passed"}, "call": {"duration": 0.0003384269999999745, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.0001758370000004561, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_character", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_single_character", "run.py", "test", ""], "setup": {"duration": 0.00017006400000063593, "outcome": "passed"}, "call": {"duration": 0.0001648510000000769, "outcome": "passed"}, "teardown": {"duration": 0.0001337189999999211, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_first_character", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_first_character", "run.py", "test", ""], "setup": {"duration": 0.00015912299999953916, "outcome": "passed"}, "call": {"duration": 0.0003101829999998529, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'a' == 'aab'\n  \n  - aab\n  + a"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_first_character():\n>       assert remove_Occ(\"aaab\", \"a\") == \"aab\"\nE       AssertionError: assert 'a' == 'aab'\nE         \nE         - aab\nE         + a\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017306999999977535, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_last_character", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_handles_repeated_last_character", "run.py", "test", ""], "setup": {"duration": 0.0001780880000001872, "outcome": "passed"}, "call": {"duration": 0.00015079099999937284, "outcome": "passed"}, "teardown": {"duration": 0.00013087599999916932, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_middle_character", "lineno": 36, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_middle_character", "run.py", "test", ""], "setup": {"duration": 0.00015175099999975572, "outcome": "passed"}, "call": {"duration": 0.000297642999999681, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 38, "message": "AssertionError: assert 'abba' == 'bb'\n  \n  - bb\n  + abba"}, "traceback": [{"path": "run.py", "lineno": 38, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_middle_character():\n>       assert remove_Occ(\"aabbaa\", \"a\") == \"bb\"\nE       AssertionError: assert 'abba' == 'bb'\nE         \nE         - bb\nE         + abba\n\nrun.py:38: AssertionError"}, "teardown": {"duration": 0.000176981000000076, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_one_character", "lineno": 39, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_only_one_character", "run.py", "test", ""], "setup": {"duration": 0.00017227100000027917, "outcome": "passed"}, "call": {"duration": 0.00015095699999978507, "outcome": "passed"}, "teardown": {"duration": 0.0001647439999992173, "outcome": "passed"}}]}, {"created": 1733296042.2452178, "duration": 0.059548377990722656, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 4, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_case_insensitivity", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_special_characters", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002837660000003517, "outcome": "passed"}, "call": {"duration": 0.0004517410000000055, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00021821900000018601, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018849500000017727, "outcome": "passed"}, "call": {"duration": 0.00017284099999992364, "outcome": "passed"}, "teardown": {"duration": 0.0001335000000000086, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00016428600000040205, "outcome": "passed"}, "call": {"duration": 0.0003485659999999946, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'hell w' == 'hell world'\n  \n  - hell world\n  ?       ----\n  + hell w"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"hello world\", \"o\") == \"hell world\"\nE       AssertionError: assert 'hell w' == 'hell world'\nE         \nE         - hell world\nE         ?       ----\nE         + hell w\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00017712799999980433, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016808700000003896, "outcome": "passed"}, "call": {"duration": 0.0001497569999999726, "outcome": "passed"}, "teardown": {"duration": 0.00014416900000036037, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018183400000015837, "outcome": "passed"}, "call": {"duration": 0.0001470669999998897, "outcome": "passed"}, "teardown": {"duration": 0.00012879300000001592, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015402700000022307, "outcome": "passed"}, "call": {"duration": 0.00014262299999989736, "outcome": "passed"}, "teardown": {"duration": 0.0001257369999998481, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_case_insensitivity", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_handles_case_insensitivity", "run.py", "test", ""], "setup": {"duration": 0.00014583000000012447, "outcome": "passed"}, "call": {"duration": 0.00033363600000013705, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'Hell W' == 'Hell World'\n  \n  - Hell World\n  ?       ----\n  + Hell W"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_case_insensitivity():\n>       assert remove_Occ(\"Hello World\", \"o\") == \"Hell World\"\nE       AssertionError: assert 'Hell W' == 'Hell World'\nE         \nE         - Hell World\nE         ?       ----\nE         + Hell W\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017181500000029715, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016976499999987738, "outcome": "passed"}, "call": {"duration": 0.0003407070000003287, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '!#$hello' == '!$hello%'\n  \n  - !$hello%\n  ?        -\n  + !#$hello\n  ?  +"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_special_characters():\n>       assert remove_Occ(\"!@#$hello@#%\", \"@\") == \"!$hello%\"\nE       AssertionError: assert '!#$hello' == '!$hello%'\nE         \nE         - !$hello%\nE         ?        -\nE         + !#$hello\nE         ?  +\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017344799999996496, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016603899999978466, "outcome": "passed"}, "call": {"duration": 0.00034204099999968207, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert '!hello!' == 'hello!!'\n  \n  - hello!!\n  ?       -\n  + !hello!\n  ? +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_special_characters():\n>       assert remove_Occ(\"!!hello!!\", \"!\") == \"hello!!\"\nE       AssertionError: assert '!hello!' == 'hello!!'\nE         \nE         - hello!!\nE         ?       -\nE         + !hello!\nE         ? +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00019843700000032882, "outcome": "passed"}}]}, {"created": 1733296041.9504635, "duration": 0.055906057357788086, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 6, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_returns_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_single_character", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_single_character_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_repeated_characters", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_Occ_with_same_char_first_and_last", "type": "Function", "lineno": 36}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003570509999999416, "outcome": "passed"}, "call": {"duration": 0.00038118800000042086, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'banna'\n  \n  - banna\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banna\"\nE       AssertionError: assert 'bnan' == 'banna'\nE         \nE         - banna\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00018618500000000537, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017266500000001628, "outcome": "passed"}, "call": {"duration": 0.00037061700000018405, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00017446400000009632, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00018200200000029199, "outcome": "passed"}, "call": {"duration": 0.00015532400000006774, "outcome": "passed"}, "teardown": {"duration": 0.00013328800000023122, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_returns_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_returns_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015614500000005194, "outcome": "passed"}, "call": {"duration": 0.00014822900000011074, "outcome": "passed"}, "teardown": {"duration": 0.000132274999999904, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015395900000036988, "outcome": "passed"}, "call": {"duration": 0.0003463340000000592, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.0001745720000001505, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001827830000000752, "outcome": "passed"}, "call": {"duration": 0.00016814999999992253, "outcome": "passed"}, "teardown": {"duration": 0.000131381000000097, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017496499999980486, "outcome": "passed"}, "call": {"duration": 0.00014758900000000352, "outcome": "passed"}, "teardown": {"duration": 0.0001258810000002164, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_character", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_character", "run.py", "test", ""], "setup": {"duration": 0.00014901499999986356, "outcome": "passed"}, "call": {"duration": 0.0001516420000000629, "outcome": "passed"}, "teardown": {"duration": 0.00012960799999994776, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_character_string", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_character_string", "run.py", "test", ""], "setup": {"duration": 0.00015060000000000073, "outcome": "passed"}, "call": {"duration": 0.0001395240000001685, "outcome": "passed"}, "teardown": {"duration": 0.00013419000000025605, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_characters", "run.py", "test", ""], "setup": {"duration": 0.00015163399999984506, "outcome": "passed"}, "call": {"duration": 0.0003061280000000721, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'aaab' == 'aaaabbbccc'\n  \n  - aaaabbbccc\n  + aaab"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_characters():\n>       assert remove_Occ(\"aaabbbccc\", \"b\") == \"aaaabbbccc\"\nE       AssertionError: assert 'aaab' == 'aaaabbbccc'\nE         \nE         - aaaabbbccc\nE         + aaab\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.0001768229999998816, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_same_char_first_and_last", "lineno": 36, "outcome": "failed", "keywords": ["test_remove_Occ_with_same_char_first_and_last", "run.py", "test", ""], "setup": {"duration": 0.0001822499999999394, "outcome": "passed"}, "call": {"duration": 0.00028091699999999165, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 38, "message": "AssertionError: assert '' == 'a'\n  \n  - a"}, "traceback": [{"path": "run.py", "lineno": 38, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_same_char_first_and_last():\n>       assert remove_Occ(\"aa\", \"a\") == \"a\"\nE       AssertionError: assert '' == 'a'\nE         \nE         - a\n\nrun.py:38: AssertionError"}, "teardown": {"duration": 0.0002084499999996936, "outcome": "passed"}}]}, {"created": 1733296042.432166, "duration": 0.05660414695739746, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_case_sensitivity", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_numeric_string", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003475630000000507, "outcome": "passed"}, "call": {"duration": 0.00047392400000001444, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00023956599999985784, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00020228999999982733, "outcome": "passed"}, "call": {"duration": 0.0001972519999999811, "outcome": "passed"}, "teardown": {"duration": 0.00015907500000000852, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00016401899999962666, "outcome": "passed"}, "call": {"duration": 0.00038400499999990956, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'helo wor' == 'heo world'\n  \n  - heo world\n  ?        --\n  + helo wor\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"hello world\", \"l\") == \"heo world\"\nE       AssertionError: assert 'helo wor' == 'heo world'\nE         \nE         - heo world\nE         ?        --\nE         + helo wor\nE         ?   +\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00018840200000003193, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001719339999999292, "outcome": "passed"}, "call": {"duration": 0.0001504269999998975, "outcome": "passed"}, "teardown": {"duration": 0.0001339410000000818, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrences", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015900799999979398, "outcome": "passed"}, "call": {"duration": 0.0001452479999999312, "outcome": "passed"}, "teardown": {"duration": 0.0001316000000000095, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015715499999968685, "outcome": "passed"}, "call": {"duration": 0.00016975300000021676, "outcome": "passed"}, "teardown": {"duration": 0.00013293000000036415, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_characters", "run.py", "test", ""], "setup": {"duration": 0.00015204000000013096, "outcome": "passed"}, "call": {"duration": 0.00035575199999993146, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_characters():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017893299999993673, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_case_sensitivity", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_handles_case_sensitivity", "run.py", "test", ""], "setup": {"duration": 0.00017581199999971986, "outcome": "passed"}, "call": {"duration": 0.00034927499999959366, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'Hell W' == 'Hell World'\n  \n  - Hell World\n  ?       ----\n  + Hell W"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_case_sensitivity():\n>       assert remove_Occ(\"Hello World\", \"o\") == \"Hell World\"\nE       AssertionError: assert 'Hell W' == 'Hell World'\nE         \nE         - Hell World\nE         ?       ----\nE         + Hell W\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017863900000003596, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001712430000000431, "outcome": "passed"}, "call": {"duration": 0.0003507599999998945, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert '!#$hello' == '!#$hello#'\n  \n  - !#$hello#\n  ?         -\n  + !#$hello"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_special_characters():\n>       assert remove_Occ(\"!@#$hello@#\", \"@\") == \"!#$hello#\"\nE       AssertionError: assert '!#$hello' == '!#$hello#'\nE         \nE         - !#$hello#\nE         ?         -\nE         + !#$hello\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017945200000024641, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_numeric_string", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_handles_numeric_string", "run.py", "test", ""], "setup": {"duration": 0.00017011200000016657, "outcome": "passed"}, "call": {"duration": 0.00015160600000019286, "outcome": "passed"}, "teardown": {"duration": 0.00017047399999992052, "outcome": "passed"}}]}, {"created": 1733296042.7209597, "duration": 0.05561470985412598, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 6, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_char_not_in_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_single_char_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_string_with_multiple_chars_to_remove", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_string_with_repeated_first_char", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_string_with_repeated_last_char", "type": "Function", "lineno": 36}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003562199999995741, "outcome": "passed"}, "call": {"duration": 0.0003989750000004122, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00019480999999998971, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019465899999993042, "outcome": "passed"}, "call": {"duration": 0.00016397799999978702, "outcome": "passed"}, "teardown": {"duration": 0.0001327120000000903, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001554270000001523, "outcome": "passed"}, "call": {"duration": 0.0003560960000008606, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'ball' == 'balln'\n  \n  - balln\n  ?     -\n  + ball"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"balloon\", \"o\") == \"balln\"\nE       AssertionError: assert 'ball' == 'balln'\nE         \nE         - balln\nE         ?     -\nE         + ball\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00016863200000027945, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_in_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00016750899999973257, "outcome": "passed"}, "call": {"duration": 0.00015083799999970893, "outcome": "passed"}, "teardown": {"duration": 0.00012868499999996175, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00016047300000021636, "outcome": "passed"}, "call": {"duration": 0.00014371099999976877, "outcome": "passed"}, "teardown": {"duration": 0.0001295729999997164, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00014676300000004971, "outcome": "passed"}, "call": {"duration": 0.0003497880000002951, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'msssspp'\n  \n  - msssspp\n  + mssissipp\n  ?    +  +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"msssspp\"\nE       AssertionError: assert 'mssissipp' == 'msssspp'\nE         \nE         - msssspp\nE         + mssissipp\nE         ?    +  +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017150100000051793, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 24, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017242399999961577, "outcome": "passed"}, "call": {"duration": 0.0001524439999993632, "outcome": "passed"}, "teardown": {"duration": 0.00013163499999979678, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string", "lineno": 27, "outcome": "passed", "keywords": ["test_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00016011400000071063, "outcome": "passed"}, "call": {"duration": 0.00014304300000045345, "outcome": "passed"}, "teardown": {"duration": 0.0001301260000001747, "outcome": "passed"}}, {"nodeid": "run.py::test_string_with_multiple_chars_to_remove", "lineno": 30, "outcome": "passed", "keywords": ["test_string_with_multiple_chars_to_remove", "run.py", "test", ""], "setup": {"duration": 0.00015437800000039914, "outcome": "passed"}, "call": {"duration": 0.00015473500000062756, "outcome": "passed"}, "teardown": {"duration": 0.0001293140000004911, "outcome": "passed"}}, {"nodeid": "run.py::test_string_with_repeated_first_char", "lineno": 33, "outcome": "failed", "keywords": ["test_string_with_repeated_first_char", "run.py", "test", ""], "setup": {"duration": 0.0001474489999999662, "outcome": "passed"}, "call": {"duration": 0.00028563099999967534, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'a' == 'aaabbbccc'\n  \n  - aaabbbccc\n  + a"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_string_with_repeated_first_char():\n>       assert remove_Occ(\"aaabbbccc\", \"a\") == \"aaabbbccc\"\nE       AssertionError: assert 'a' == 'aaabbbccc'\nE         \nE         - aaabbbccc\nE         + a\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00018493199999980448, "outcome": "passed"}}, {"nodeid": "run.py::test_string_with_repeated_last_char", "lineno": 36, "outcome": "failed", "keywords": ["test_string_with_repeated_last_char", "run.py", "test", ""], "setup": {"duration": 0.00017456600000009814, "outcome": "passed"}, "call": {"duration": 0.00033191299999923984, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 38, "message": "AssertionError: assert 'aaabbbc' == 'aaabbbcc'\n  \n  - aaabbbcc\n  ?        -\n  + aaabbbc"}, "traceback": [{"path": "run.py", "lineno": 38, "message": "AssertionError"}], "longrepr": "def test_string_with_repeated_last_char():\n>       assert remove_Occ(\"aaabbbccc\", \"c\") == \"aaabbbcc\"\nE       AssertionError: assert 'aaabbbc' == 'aaabbbcc'\nE         \nE         - aaabbbcc\nE         ?        -\nE         + aaabbbc\n\nrun.py:38: AssertionError"}, "teardown": {"duration": 0.00019622500000071597, "outcome": "passed"}}]}, {"created": 1733296042.603912, "duration": 0.056191205978393555, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 4, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_case_sensitivity", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00034205700000011774, "outcome": "passed"}, "call": {"duration": 0.000451691999999948, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020707500000005652, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017968000000001538, "outcome": "passed"}, "call": {"duration": 0.00016176100000020455, "outcome": "passed"}, "teardown": {"duration": 0.00013832700000016018, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00016222800000020854, "outcome": "passed"}, "call": {"duration": 0.00036688899999992586, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'hell w' == 'hell world'\n  \n  - hell world\n  ?       ----\n  + hell w"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"hello world\", \"o\") == \"hell world\"\nE       AssertionError: assert 'hell w' == 'hell world'\nE         \nE         - hell world\nE         ?       ----\nE         + hell w\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.0001807330000000995, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001689489999998628, "outcome": "passed"}, "call": {"duration": 0.0001498159999999693, "outcome": "passed"}, "teardown": {"duration": 0.00013159200000023574, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015603200000002815, "outcome": "passed"}, "call": {"duration": 0.0001428150000002404, "outcome": "passed"}, "teardown": {"duration": 0.00013305299999988307, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001520410000002137, "outcome": "passed"}, "call": {"duration": 0.00032363600000007153, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.0001700789999996566, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_handles_single_character_string", "run.py", "test", ""], "setup": {"duration": 0.000167982000000233, "outcome": "passed"}, "call": {"duration": 0.00014963099999976137, "outcome": "passed"}, "teardown": {"duration": 0.00012927900000025971, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_characters", "run.py", "test", ""], "setup": {"duration": 0.0001696569999998232, "outcome": "passed"}, "call": {"duration": 0.0003282969999998109, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_characters():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00018080400000020092, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_case_sensitivity", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_case_sensitivity", "run.py", "test", ""], "setup": {"duration": 0.0001703200000000571, "outcome": "passed"}, "call": {"duration": 0.0003347819999999224, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'HeloWor' == 'HeoWorld'\n  \n  - HeoWorld\n  ?       --\n  + HeloWor\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_case_sensitivity():\n>       assert remove_Occ(\"HelloWorld\", \"l\") == \"HeoWorld\"\nE       AssertionError: assert 'HeloWor' == 'HeoWorld'\nE         \nE         - HeoWorld\nE         ?       --\nE         + HeloWor\nE         ?   +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00018269999999986908, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016771399999981895, "outcome": "passed"}, "call": {"duration": 0.000328210000000162, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert '!#hello' == '!#hello#$'\n  \n  - !#hello#$\n  ?        --\n  + !#hello"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_special_characters():\n>       assert remove_Occ(\"!@#hello@#$\", \"@\") == \"!#hello#$\"\nE       AssertionError: assert '!#hello' == '!#hello#$'\nE         \nE         - !#hello#$\nE         ?        --\nE         + !#hello\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00019743000000005395, "outcome": "passed"}}]}, {"created": 1733296043.2964568, "duration": 0.05524849891662598, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 4, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_single_character", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_leading_occurrence", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_trailing_occurrence", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_case_sensitive", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00029926500000065914, "outcome": "passed"}, "call": {"duration": 0.0004046490000000347, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00018613900000019612, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001830589999993748, "outcome": "passed"}, "call": {"duration": 0.0003442969999998269, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00017218800000051715, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00016653900000029864, "outcome": "passed"}, "call": {"duration": 0.0003272619999998838, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'a' == 'aple'\n  \n  - aple\n  + a"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"apple\", \"p\") == \"aple\"\nE       AssertionError: assert 'a' == 'aple'\nE         \nE         - aple\nE         + a\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.0001695580000005137, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016447199999980455, "outcome": "passed"}, "call": {"duration": 0.00015228200000017011, "outcome": "passed"}, "teardown": {"duration": 0.00013851600000069908, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017330799999992763, "outcome": "passed"}, "call": {"duration": 0.0001560620000002899, "outcome": "passed"}, "teardown": {"duration": 0.0001298190000005306, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_character", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_single_character", "run.py", "test", ""], "setup": {"duration": 0.00015201999999980842, "outcome": "passed"}, "call": {"duration": 0.00014225699999936836, "outcome": "passed"}, "teardown": {"duration": 0.00013883600000053065, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00014737299999989517, "outcome": "passed"}, "call": {"duration": 0.00033184299999966527, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.0001715139999998172, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_leading_occurrence", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_leading_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016525400000055868, "outcome": "passed"}, "call": {"duration": 0.00016603699999961918, "outcome": "passed"}, "teardown": {"duration": 0.00013339100000031578, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_trailing_occurrence", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_trailing_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015236299999976666, "outcome": "passed"}, "call": {"duration": 0.0003339479999997508, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_trailing_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017427900000033247, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_sensitive", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_case_sensitive", "run.py", "test", ""], "setup": {"duration": 0.00016854700000035194, "outcome": "passed"}, "call": {"duration": 0.00033044599999954016, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'Bnan' == 'Bnanan'\n  \n  - Bnanan\n  ?     --\n  + Bnan"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_case_sensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnanan\"\nE       AssertionError: assert 'Bnan' == 'Bnanan'\nE         \nE         - Bnanan\nE         ?     --\nE         + Bnan\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00020117499999994237, "outcome": "passed"}}]}, {"created": 1733296041.747558, "duration": 0.04922604560852051, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 4, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_single_character", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_multiple_same_characters", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002884029999998816, "outcome": "passed"}, "call": {"duration": 0.00043927699999990466, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002043229999997287, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018096199999995122, "outcome": "passed"}, "call": {"duration": 0.00015415799999995983, "outcome": "passed"}, "teardown": {"duration": 0.00013330700000002693, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.0001526379999998717, "outcome": "passed"}, "call": {"duration": 0.0003252179999999605, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00017131199999997904, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001666230000001434, "outcome": "passed"}, "call": {"duration": 0.0002465830000000224, "outcome": "passed"}, "teardown": {"duration": 0.00014004099999986863, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001544830000002051, "outcome": "passed"}, "call": {"duration": 0.0001407339999999202, "outcome": "passed"}, "teardown": {"duration": 0.00012971299999975372, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_character", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_single_character", "run.py", "test", ""], "setup": {"duration": 0.00015771700000000166, "outcome": "passed"}, "call": {"duration": 0.0001514630000003514, "outcome": "passed"}, "teardown": {"duration": 0.00013939000000018353, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00014907700000010848, "outcome": "passed"}, "call": {"duration": 0.00032312000000001007, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017430900000015015, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_same_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_same_characters", "run.py", "test", ""], "setup": {"duration": 0.0001689749999997936, "outcome": "passed"}, "call": {"duration": 0.00029137199999995644, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'aa' == ''\n  \n  + aa"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_same_characters():\n>       assert remove_Occ(\"aaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aa' == ''\nE         \nE         + aa\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00020033400000007973, "outcome": "passed"}}]}, {"created": 1733296042.701915, "duration": 0.05758976936340332, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 3, "failed": 7, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_case_insensitive", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_repeated_chars", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_char_same", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0003126870000000892, "outcome": "passed"}, "call": {"duration": 0.0001788519999998961, "outcome": "passed"}, "teardown": {"duration": 0.00016694200000033632, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017608799999990765, "outcome": "passed"}, "call": {"duration": 0.00014537800000002932, "outcome": "passed"}, "teardown": {"duration": 0.00013011799999995688, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001505449999998909, "outcome": "passed"}, "call": {"duration": 0.0003731240000002245, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00018867400000033285, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_with_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016822400000027216, "outcome": "passed"}, "call": {"duration": 0.0003591790000001538, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'baa' == 'banba'\n  \n  - banba\n  ?   --\n  + baa"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_last_occurrence():\n>       assert remove_Occ(\"banana\", \"n\") == \"banba\"\nE       AssertionError: assert 'baa' == 'banba'\nE         \nE         - banba\nE         ?   --\nE         + baa\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017687600000027004, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017086299999968801, "outcome": "passed"}, "call": {"duration": 0.0003264259999999908, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00016699200000003245, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_case_insensitive", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_with_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00016337300000035526, "outcome": "passed"}, "call": {"duration": 0.0003359539999996386, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'Bnan' == 'Bnana'\n  \n  - Bnana\n  ?     -\n  + Bnan"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_case_insensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnana\"\nE       AssertionError: assert 'Bnan' == 'Bnana'\nE         \nE         - Bnana\nE         ?     -\nE         + Bnan\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017123599999990802, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016940599999992756, "outcome": "passed"}, "call": {"duration": 0.00029359700000020084, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'bn' == 'b@nna'\n  \n  - b@nna\n  + bn"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"b@n@na\", \"@\") == \"b@nna\"\nE       AssertionError: assert 'bn' == 'b@nna'\nE         \nE         - b@nna\nE         + bn\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.0001746050000002164, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_with_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00016610399999983372, "outcome": "passed"}, "call": {"duration": 0.0001482959999998812, "outcome": "passed"}, "teardown": {"duration": 0.00013991100000021461, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_chars", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_chars", "run.py", "test", ""], "setup": {"duration": 0.00015318899999972047, "outcome": "passed"}, "call": {"duration": 0.00029447500000001625, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'aa' == 'aaacc'\n  \n  - aaacc\n  + aa"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_chars():\n>       assert remove_Occ(\"aabbcc\", \"b\") == \"aaacc\"\nE       AssertionError: assert 'aa' == 'aaacc'\nE         \nE         - aaacc\nE         + aa\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.0001675969999999083, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_char_same", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_char_same", "run.py", "test", ""], "setup": {"duration": 0.00016390399999988148, "outcome": "passed"}, "call": {"duration": 0.0003371690000002481, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'bacab' == 'baca'\n  \n  - baca\n  + bacab\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_char_same():\n>       assert remove_Occ(\"abacaba\", \"a\") == \"baca\"\nE       AssertionError: assert 'bacab' == 'baca'\nE         \nE         - baca\nE         + bacab\nE         ?     +\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00019351499999986643, "outcome": "passed"}}]}, {"created": 1733296041.5598564, "duration": 0.06597352027893066, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 4, "failed": 8, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_both_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_multiple_same_char", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_only_one_char", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_Occ_with_numeric_string", "type": "Function", "lineno": 36}, {"nodeid": "run.py::test_remove_Occ_with_multiple_same_chars_at_end", "type": "Function", "lineno": 39}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0004069620000000107, "outcome": "passed"}, "call": {"duration": 0.00018800399999996387, "outcome": "passed"}, "teardown": {"duration": 0.00016338399999993314, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016473800000005312, "outcome": "passed"}, "call": {"duration": 0.00017342900000016925, "outcome": "passed"}, "teardown": {"duration": 0.00016863899999997045, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001640979999999459, "outcome": "passed"}, "call": {"duration": 0.0004228879999996771, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.0002859889999999865, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_with_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019073099999999954, "outcome": "passed"}, "call": {"duration": 0.00042265900000026946, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'baa' == 'banba'\n  \n  - banba\n  ?   --\n  + baa"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_last_occurrence():\n>       assert remove_Occ(\"banana\", \"n\") == \"banba\"\nE       AssertionError: assert 'baa' == 'banba'\nE         \nE         - banba\nE         ?   --\nE         + baa\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00019003699999986523, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_both_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_both_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00018348800000023147, "outcome": "passed"}, "call": {"duration": 0.0003806889999999896, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bracadabr' == 'brcdbr'\n  \n  - brcdbr\n  + bracadabr\n  ?   + + +"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_both_occurrences():\n>       assert remove_Occ(\"abracadabra\", \"a\") == \"brcdbr\"\nE       AssertionError: assert 'bracadabr' == 'brcdbr'\nE         \nE         - brcdbr\nE         + bracadabr\nE         ?   + + +\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.0001936769999999477, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_same_char", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_same_char", "run.py", "test", ""], "setup": {"duration": 0.00017359799999994152, "outcome": "passed"}, "call": {"duration": 0.0003503880000002013, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_same_char():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017904500000032186, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00018151899999985233, "outcome": "passed"}, "call": {"duration": 0.0003166409999999509, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'eve' == 'levl'\n  \n  - levl\n  + eve"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_same_char():\n>       assert remove_Occ(\"level\", \"l\") == \"levl\"\nE       AssertionError: assert 'eve' == 'levl'\nE         \nE         - levl\nE         + eve\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00019710499999980868, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_only_one_char", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_only_one_char", "run.py", "test", ""], "setup": {"duration": 0.00017661000000002147, "outcome": "passed"}, "call": {"duration": 0.0003187159999997746, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'aaa' == ''\n  \n  + aaa"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_only_one_char():\n>       assert remove_Occ(\"aaaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aaa' == ''\nE         \nE         + aaa\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017832399999972992, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00017444100000041374, "outcome": "passed"}, "call": {"duration": 0.0001586620000000316, "outcome": "passed"}, "teardown": {"duration": 0.00013751500000003247, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00020866299999999782, "outcome": "passed"}, "call": {"duration": 0.00035906300000032587, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert '!#$%a' == '!#$%a#'\n  \n  - !#$%a#\n  ?      -\n  + !#$%a"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"!@#$%a@#\", \"@\") == \"!#$%a#\"\nE       AssertionError: assert '!#$%a' == '!#$%a#'\nE         \nE         - !#$%a#\nE         ?      -\nE         + !#$%a\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00017827099999978557, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_numeric_string", "lineno": 36, "outcome": "passed", "keywords": ["test_remove_Occ_with_numeric_string", "run.py", "test", ""], "setup": {"duration": 0.00017809200000007408, "outcome": "passed"}, "call": {"duration": 0.00015460000000011576, "outcome": "passed"}, "teardown": {"duration": 0.00013350999999994784, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_same_chars_at_end", "lineno": 39, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_same_chars_at_end", "run.py", "test", ""], "setup": {"duration": 0.00015911900000009638, "outcome": "passed"}, "call": {"duration": 0.0003405530000000212, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 41, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 41, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_same_chars_at_end():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:41: AssertionError"}, "teardown": {"duration": 0.00020894900000012484, "outcome": "passed"}}]}, {"created": 1733296042.726965, "duration": 0.054868221282958984, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 6, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_case_insensitive", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_consecutive_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003439739999997471, "outcome": "passed"}, "call": {"duration": 0.0003874740000000543, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heloo'\n  \n  - heloo\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\nE       AssertionError: assert 'he' == 'heloo'\nE         \nE         - heloo\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002795569999998193, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00021284299999990708, "outcome": "passed"}, "call": {"duration": 0.0001811759999998941, "outcome": "passed"}, "teardown": {"duration": 0.00013699799999988826, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_returns_original_string_if_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00016158599999993584, "outcome": "passed"}, "call": {"duration": 0.00014908800000013045, "outcome": "passed"}, "teardown": {"duration": 0.0001294530000000016, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016446700000027903, "outcome": "passed"}, "call": {"duration": 0.00014544900000013072, "outcome": "passed"}, "teardown": {"duration": 0.00012996199999992797, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_single_character_string", "run.py", "test", ""], "setup": {"duration": 0.0001509460000002072, "outcome": "passed"}, "call": {"duration": 0.0001631660000001034, "outcome": "passed"}, "teardown": {"duration": 0.000148064999999864, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015366500000002503, "outcome": "passed"}, "call": {"duration": 0.0003933830000000249, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00019565100000029645, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrences", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017287699999979367, "outcome": "passed"}, "call": {"duration": 0.00017548199999994907, "outcome": "passed"}, "teardown": {"duration": 0.00014559800000002454, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_case_insensitive", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_handles_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00016605699999994172, "outcome": "passed"}, "call": {"duration": 0.0003558150000002591, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'He' == 'Heo'\n  \n  - Heo\n  ?   -\n  + He"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_case_insensitive():\n>       assert remove_Occ(\"Hello\", \"l\") == \"Heo\"\nE       AssertionError: assert 'He' == 'Heo'\nE         \nE         - Heo\nE         ?   -\nE         + He\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0001755889999999205, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016908200000020912, "outcome": "passed"}, "call": {"duration": 0.00017009699999981365, "outcome": "passed"}, "teardown": {"duration": 0.00013568299999988653, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_consecutive_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_handles_consecutive_characters", "run.py", "test", ""], "setup": {"duration": 0.00016401700000034936, "outcome": "passed"}, "call": {"duration": 0.0003652530000000098, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'bookkep' == 'bookkeepr'\n  \n  - bookkeepr\n  ?       - -\n  + bookkep"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_consecutive_characters():\n>       assert remove_Occ(\"bookkeeper\", \"e\") == \"bookkeepr\"\nE       AssertionError: assert 'bookkep' == 'bookkeepr'\nE         \nE         - bookkeepr\nE         ?       - -\nE         + bookkep\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.0002035679999998763, "outcome": "passed"}}]}, {"created": 1733296043.9340525, "duration": 0.050888776779174805, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 4, "failed": 4, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_no_char", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_first_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_last_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_both_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_no_char", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_char", "run.py", "test", ""], "setup": {"duration": 0.0003178330000004337, "outcome": "passed"}, "call": {"duration": 0.00018091100000017235, "outcome": "passed"}, "teardown": {"duration": 0.00015232300000000976, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_first_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016483599999972398, "outcome": "passed"}, "call": {"duration": 0.00045908499999924857, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00018664900000064932, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_last_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017669899999983585, "outcome": "passed"}, "call": {"duration": 0.0003687260000004855, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'baa' == 'banba'\n  \n  - banba\n  ?   --\n  + baa"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_last_occurrence():\n>       assert remove_Occ(\"banana\", \"n\") == \"banba\"\nE       AssertionError: assert 'baa' == 'banba'\nE         \nE         - banba\nE         ?   --\nE         + baa\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00017376000000002279, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_both_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_both_occurrences", "run.py", "test", ""], "setup": {"duration": 0.000165921999999874, "outcome": "passed"}, "call": {"duration": 0.00034692699999983034, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'hara' == 'harater'\n  \n  - harater\n  + hara"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_both_occurrences():\n>       assert remove_Occ(\"character\", \"c\") == \"harater\"\nE       AssertionError: assert 'hara' == 'harater'\nE         \nE         - harater\nE         + hara\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017160699999951845, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00017534499999971587, "outcome": "passed"}, "call": {"duration": 0.00015322399999995184, "outcome": "passed"}, "teardown": {"duration": 0.00013279999999937786, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015119899999938013, "outcome": "passed"}, "call": {"duration": 0.0003489320000005236, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.0001758509999998381, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.0001829909999999657, "outcome": "passed"}, "call": {"duration": 0.00015425600000007478, "outcome": "passed"}, "teardown": {"duration": 0.00013178299999960785, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001542380000003618, "outcome": "passed"}, "call": {"duration": 0.00014884500000000855, "outcome": "passed"}, "teardown": {"duration": 0.0001575099999993057, "outcome": "passed"}}]}, {"created": 1733296043.38938, "duration": 0.061547040939331055, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 2, "failed": 8, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_case_insensitive", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_multiple_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_special_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00030653199999974845, "outcome": "passed"}, "call": {"duration": 0.00025033500000049, "outcome": "passed"}, "teardown": {"duration": 0.00015360500000038968, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017275799999971753, "outcome": "passed"}, "call": {"duration": 0.00016993400000053782, "outcome": "passed"}, "teardown": {"duration": 0.00013346499999933314, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.000162214999999577, "outcome": "passed"}, "call": {"duration": 0.00036023800000073436, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.0001761910000004363, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_with_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001873940000001184, "outcome": "passed"}, "call": {"duration": 0.00037040199999971435, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'baa' == 'banba'\n  \n  - banba\n  ?   --\n  + baa"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_last_occurrence():\n>       assert remove_Occ(\"banana\", \"n\") == \"banba\"\nE       AssertionError: assert 'baa' == 'banba'\nE         \nE         - banba\nE         ?   --\nE         + baa\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.0001725659999998186, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016752300000000275, "outcome": "passed"}, "call": {"duration": 0.0003239610000003168, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.0001703840000004675, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_case_insensitive", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_with_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00016540000000020427, "outcome": "passed"}, "call": {"duration": 0.00032164300000037116, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'Bnan' == 'Bnana'\n  \n  - Bnana\n  ?     -\n  + Bnan"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_case_insensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnana\"\nE       AssertionError: assert 'Bnan' == 'Bnana'\nE         \nE         - Bnana\nE         ?     -\nE         + Bnan\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017105299999986556, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016580899999940613, "outcome": "passed"}, "call": {"duration": 0.00035066199999977954, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'helloworld' == 'hello@worl'\n  \n  - hello@worl\n  ?      -\n  + helloworld\n  ?          +"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"hello@world\", \"@\") == \"hello@worl\"\nE       AssertionError: assert 'helloworld' == 'hello@worl'\nE         \nE         - hello@worl\nE         ?      -\nE         + helloworld\nE         ?          +\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017410999999967203, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001658649999995987, "outcome": "passed"}, "call": {"duration": 0.00030825199999995334, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'hello' == 'hello@worl'\n  \n  - hello@worl\n  + hello"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_special_characters():\n>       assert remove_Occ(\"hello@@world\", \"@\") == \"hello@worl\"\nE       AssertionError: assert 'hello' == 'hello@worl'\nE         \nE         - hello@worl\nE         + hello\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00016125399999999956, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001675200000006427, "outcome": "passed"}, "call": {"duration": 0.0003292029999997226, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'hello@' == 'hello@worl'\n  \n  - hello@worl\n  ?       ----\n  + hello@"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_special_characters():\n>       assert remove_Occ(\"hello@@@world\", \"@\") == \"hello@worl\"\nE       AssertionError: assert 'hello@' == 'hello@worl'\nE         \nE         - hello@worl\nE         ?       ----\nE         + hello@\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00016652199999978023, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_special_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016514699999969906, "outcome": "passed"}, "call": {"duration": 0.00033295199999994196, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'hello@world' == 'hello@worl'\n  \n  - hello@worl\n  + hello@world\n  ?           +"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_special_characters():\n>       assert remove_Occ(\"@hello@world@\", \"@\") == \"hello@worl\"\nE       AssertionError: assert 'hello@world' == 'hello@worl'\nE         \nE         - hello@worl\nE         + hello@world\nE         ?           +\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00019959499999977481, "outcome": "passed"}}]}, {"created": 1733296043.3744595, "duration": 0.04132342338562012, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 1, "passed": 4, "total": 5, "collected": 5}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test1", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test2", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test3", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test4", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test5", "type": "Function", "lineno": 18}]}], "tests": [{"nodeid": "run.py::test1", "lineno": 6, "outcome": "failed", "keywords": ["test1", "run.py", "test", ""], "setup": {"duration": 0.00029765100000034295, "outcome": "passed"}, "call": {"duration": 0.0004544930000003333, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test1():\n>       assert remove_Occ(\"hello\",\"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002108919999992409, "outcome": "passed"}}, {"nodeid": "run.py::test2", "lineno": 9, "outcome": "passed", "keywords": ["test2", "run.py", "test", ""], "setup": {"duration": 0.00024274599999962732, "outcome": "passed"}, "call": {"duration": 0.00019358299999971962, "outcome": "passed"}, "teardown": {"duration": 0.00014179399999925124, "outcome": "passed"}}, {"nodeid": "run.py::test3", "lineno": 12, "outcome": "passed", "keywords": ["test3", "run.py", "test", ""], "setup": {"duration": 0.00016086200000042794, "outcome": "passed"}, "call": {"duration": 0.0001483320000001953, "outcome": "passed"}, "teardown": {"duration": 0.0001438110000000492, "outcome": "passed"}}, {"nodeid": "run.py::test4", "lineno": 15, "outcome": "passed", "keywords": ["test4", "run.py", "test", ""], "setup": {"duration": 0.000158556000000587, "outcome": "passed"}, "call": {"duration": 0.00014531199999989752, "outcome": "passed"}, "teardown": {"duration": 0.00013998200000031602, "outcome": "passed"}}, {"nodeid": "run.py::test5", "lineno": 18, "outcome": "passed", "keywords": ["test5", "run.py", "test", ""], "setup": {"duration": 0.0001556630000001391, "outcome": "passed"}, "call": {"duration": 0.0001598890000007458, "outcome": "passed"}, "teardown": {"duration": 0.0001612589999995251, "outcome": "passed"}}]}, {"created": 1733296042.74588, "duration": 0.05696392059326172, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 8, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_char_at_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_char_at_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_case_sensitive", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_special_chars", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_multiple_special_chars", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_whole_string", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_Occ_empty_string_input", "type": "Function", "lineno": 36}, {"nodeid": "run.py::test_remove_Occ_string_with_no_removal", "type": "Function", "lineno": 39}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00038430399999977993, "outcome": "passed"}, "call": {"duration": 0.0003901600000002503, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_single_char():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0001997459999998341, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00019791600000029774, "outcome": "passed"}, "call": {"duration": 0.00015878299999982914, "outcome": "passed"}, "teardown": {"duration": 0.00013604499999964048, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017082399999956976, "outcome": "passed"}, "call": {"duration": 0.00014479299999958783, "outcome": "passed"}, "teardown": {"duration": 0.0001329359999999724, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001554840000004276, "outcome": "passed"}, "call": {"duration": 0.00014641900000000874, "outcome": "passed"}, "teardown": {"duration": 0.0001274139999996038, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_at_start", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00014806799999966813, "outcome": "passed"}, "call": {"duration": 0.00014202600000068344, "outcome": "passed"}, "teardown": {"duration": 0.00012987499999983498, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_at_end", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.0001481080000003132, "outcome": "passed"}, "call": {"duration": 0.00014085300000044043, "outcome": "passed"}, "teardown": {"duration": 0.00012665800000011274, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_sensitive", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_case_sensitive", "run.py", "test", ""], "setup": {"duration": 0.0001487660000005775, "outcome": "passed"}, "call": {"duration": 0.0008734209999996523, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'He' == 'Heo'\n  \n  - Heo\n  ?   -\n  + He"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_case_sensitive():\n>       assert remove_Occ(\"Hello\", \"l\") == \"Heo\"\nE       AssertionError: assert 'He' == 'Heo'\nE         \nE         - Heo\nE         ?   -\nE         + He\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00018198899999966045, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_special_chars", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_special_chars", "run.py", "test", ""], "setup": {"duration": 0.00017310699999928403, "outcome": "passed"}, "call": {"duration": 0.0003629519999996944, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '!#hello' == '!#hello#$'\n  \n  - !#hello#$\n  ?        --\n  + !#hello"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_special_chars():\n>       assert remove_Occ(\"!@#hello@#$\", \"@\") == \"!#hello#$\"\nE       AssertionError: assert '!#hello' == '!#hello#$'\nE         \nE         - !#hello#$\nE         ?        --\nE         + !#hello\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0001743100000002329, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_special_chars", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_special_chars", "run.py", "test", ""], "setup": {"duration": 0.00017371799999921222, "outcome": "passed"}, "call": {"duration": 0.0003368130000005465, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert '!hello!' == 'hello!!'\n  \n  - hello!!\n  ?       -\n  + !hello!\n  ? +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_special_chars():\n>       assert remove_Occ(\"!!hello!!\", \"!\") == \"hello!!\"\nE       AssertionError: assert '!hello!' == 'hello!!'\nE         \nE         - hello!!\nE         ?       -\nE         + !hello!\nE         ? +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017176299999999145, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_whole_string", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_whole_string", "run.py", "test", ""], "setup": {"duration": 0.00016580800000021156, "outcome": "passed"}, "call": {"duration": 0.0001531360000006643, "outcome": "passed"}, "teardown": {"duration": 0.00013392500000009022, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string_input", "lineno": 36, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string_input", "run.py", "test", ""], "setup": {"duration": 0.00015621299999946103, "outcome": "passed"}, "call": {"duration": 0.00014626200000034117, "outcome": "passed"}, "teardown": {"duration": 0.0001286130000002217, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_string_with_no_removal", "lineno": 39, "outcome": "passed", "keywords": ["test_remove_Occ_string_with_no_removal", "run.py", "test", ""], "setup": {"duration": 0.0001570189999995364, "outcome": "passed"}, "call": {"duration": 0.0001410480000005876, "outcome": "passed"}, "teardown": {"duration": 0.0001566730000002181, "outcome": "passed"}}]}, {"created": 1733296043.9029465, "duration": 0.056435585021972656, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 5, "failed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_single_character_from_start", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_middle", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_OCC_removes_single_character_from_end", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_start", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_middle", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_leaves_string_unchanged_if_no_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_single_character", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_multiple_same_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_single_character_from_start", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_removes_single_character_from_start", "run.py", "test", ""], "setup": {"duration": 0.0003584380000001275, "outcome": "passed"}, "call": {"duration": 0.0002482220000001867, "outcome": "passed"}, "teardown": {"duration": 0.00015403899999988369, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_middle", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_single_character_from_middle", "run.py", "test", ""], "setup": {"duration": 0.00018274700000020516, "outcome": "passed"}, "call": {"duration": 0.0004185049999998469, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_single_character_from_middle():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00026111800000006014, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_OCC_removes_single_character_from_end", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_OCC_removes_single_character_from_end", "run.py", "test", ""], "setup": {"duration": 0.0001895739999997481, "outcome": "passed"}, "call": {"duration": 0.0001642799999999056, "outcome": "passed"}, "teardown": {"duration": 0.00013556499999989313, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_start", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_start", "run.py", "test", ""], "setup": {"duration": 0.00015298600000024365, "outcome": "passed"}, "call": {"duration": 0.0003240199999998694, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'b' == 'bkkeeper'\n  \n  - bkkeeper\n  + b"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_start():\n>       assert remove_Occ(\"bookkeeper\", \"o\") == \"bkkeeper\"\nE       AssertionError: assert 'b' == 'bkkeeper'\nE         \nE         - bkkeeper\nE         + b\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017973400000004247, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_middle", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_middle", "run.py", "test", ""], "setup": {"duration": 0.00020021200000019945, "outcome": "passed"}, "call": {"duration": 0.0003565569999999241, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_middle():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00018084899999992743, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_end", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_end", "run.py", "test", ""], "setup": {"duration": 0.0001698719999998488, "outcome": "passed"}, "call": {"duration": 0.00034101699999977697, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'chaacte' == 'chacter'\n  \n  - chacter\n  ?       -\n  + chaacte\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_end():\n>       assert remove_Occ(\"character\", \"r\") == \"chacter\"\nE       AssertionError: assert 'chaacte' == 'chacter'\nE         \nE         - chacter\nE         ?       -\nE         + chaacte\nE         ?   +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00016808699999959487, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_leaves_string_unchanged_if_no_occurrences", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_leaves_string_unchanged_if_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016280599999962675, "outcome": "passed"}, "call": {"duration": 0.00015758199999993394, "outcome": "passed"}, "teardown": {"duration": 0.00013171000000022914, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015023699999971996, "outcome": "passed"}, "call": {"duration": 0.00014100600000022112, "outcome": "passed"}, "teardown": {"duration": 0.00013573599999983088, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_single_character", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_single_character", "run.py", "test", ""], "setup": {"duration": 0.00014980300000022595, "outcome": "passed"}, "call": {"duration": 0.00014026499999975073, "outcome": "passed"}, "teardown": {"duration": 0.00012459100000006273, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_multiple_same_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_handles_string_with_multiple_same_characters", "run.py", "test", ""], "setup": {"duration": 0.00015601300000023244, "outcome": "passed"}, "call": {"duration": 0.00026818999999989046, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'a' == ''\n  \n  + a"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_string_with_multiple_same_characters():\n>       assert remove_Occ(\"aaa\", \"a\") == \"\"\nE       AssertionError: assert 'a' == ''\nE         \nE         + a\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00020829599999983017, "outcome": "passed"}}]}, {"created": 1733296043.3283925, "duration": 0.09256172180175781, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 4, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence_from_left", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_first_occurrence_from_right", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_case_sensitive", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_string_without_target_character", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_removes_all_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_characters", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence_from_left", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence_from_left", "run.py", "test", ""], "setup": {"duration": 0.000991240000000282, "outcome": "passed"}, "call": {"duration": 0.00066377899999992, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence_from_left():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.000543579999999988, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_first_occurrence_from_right", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence_from_right", "run.py", "test", ""], "setup": {"duration": 0.00035386000000015017, "outcome": "passed"}, "call": {"duration": 0.00035039999999986193, "outcome": "passed"}, "teardown": {"duration": 0.0002984500000002832, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_case_sensitive", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_case_sensitive", "run.py", "test", ""], "setup": {"duration": 0.00038265999999964606, "outcome": "passed"}, "call": {"duration": 0.0005540800000001234, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'HeLO' == 'HeLo'\n  \n  - HeLo\n  ?    ^\n  + HeLO\n  ?    ^"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_case_sensitive():\n>       assert remove_Occ(\"HeLlO\", \"l\") == \"HeLo\"\nE       AssertionError: assert 'HeLO' == 'HeLo'\nE         \nE         - HeLo\nE         ?    ^\nE         + HeLO\nE         ?    ^\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.0002761709999998807, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00027163000000030024, "outcome": "passed"}, "call": {"duration": 0.00032693999999988677, "outcome": "passed"}, "teardown": {"duration": 0.0002533800000001918, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_without_target_character", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_without_target_character", "run.py", "test", ""], "setup": {"duration": 0.00024135000000002904, "outcome": "passed"}, "call": {"duration": 0.00022766999999968007, "outcome": "passed"}, "teardown": {"duration": 0.0002807700000002633, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_all_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_removes_all_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00022858999999986196, "outcome": "passed"}, "call": {"duration": 0.0005225100000001426, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'bnan' == 'bnn'\n  \n  - bnn\n  + bnan\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_all_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnn\"\nE       AssertionError: assert 'bnan' == 'bnn'\nE         \nE         - bnn\nE         + bnan\nE         ?   +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.0002709300000001136, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_characters", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_characters", "run.py", "test", ""], "setup": {"duration": 0.00024160999999978117, "outcome": "passed"}, "call": {"duration": 0.00046554999999992575, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'msssspp'\n  \n  - msssspp\n  + mssissipp\n  ?    +  +"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_characters():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"msssspp\"\nE       AssertionError: assert 'mssissipp' == 'msssspp'\nE         \nE         - msssspp\nE         + mssissipp\nE         ?    +  +\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.0002844600000000419, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_characters", "run.py", "test", ""], "setup": {"duration": 0.0002565509999996607, "outcome": "passed"}, "call": {"duration": 0.0005316400000001664, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'aaa' == ''\n  \n  + aaa"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_characters():\n>       assert remove_Occ(\"aaaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aaa' == ''\nE         \nE         + aaa\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00029855000000011955, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00031450999999993456, "outcome": "passed"}, "call": {"duration": 0.00023748999999995135, "outcome": "passed"}, "teardown": {"duration": 0.00034717999999989146, "outcome": "passed"}}]}, {"created": 1733296042.3359373, "duration": 0.05847787857055664, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 7, "failed": 5, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_single_character_from_start", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_end", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_middle", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_character_not_present", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_middle", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_target_character", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_no_target_character", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_multiple_target_characters", "type": "Function", "lineno": 36}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_target_character_at_end", "type": "Function", "lineno": 39}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_single_character_from_start", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_removes_single_character_from_start", "run.py", "test", ""], "setup": {"duration": 0.0003828359999999975, "outcome": "passed"}, "call": {"duration": 0.0001867399999992969, "outcome": "passed"}, "teardown": {"duration": 0.00015329100000016638, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_end", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_single_character_from_end", "run.py", "test", ""], "setup": {"duration": 0.0001656670000000915, "outcome": "passed"}, "call": {"duration": 0.00014682000000032502, "outcome": "passed"}, "teardown": {"duration": 0.00012910299999990826, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_middle", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_removes_single_character_from_middle", "run.py", "test", ""], "setup": {"duration": 0.00016450100000042767, "outcome": "passed"}, "call": {"duration": 0.0003723469999998841, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'che' == 'chey'\n  \n  - chey\n  ?    -\n  + che"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_single_character_from_middle():\n>       assert remove_Occ(\"cherry\", \"r\") == \"chey\"\nE       AssertionError: assert 'che' == 'chey'\nE         \nE         - chey\nE         ?    -\nE         + che\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00019721600000011108, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_character_not_present", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_returns_original_string_if_character_not_present", "run.py", "test", ""], "setup": {"duration": 0.00018345200000080553, "outcome": "passed"}, "call": {"duration": 0.0001674739999995012, "outcome": "passed"}, "teardown": {"duration": 0.00015148400000075668, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_start", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_start", "run.py", "test", ""], "setup": {"duration": 0.00018931800000032695, "outcome": "passed"}, "call": {"duration": 0.0003848129999992622, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_start():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00017815699999967904, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_end", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_end", "run.py", "test", ""], "setup": {"duration": 0.0001806619999999981, "outcome": "passed"}, "call": {"duration": 0.00034821800000006675, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mississi' == 'missisi'\n  \n  - missisi\n  + mississi\n  ?       +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_end():\n>       assert remove_Occ(\"mississippi\", \"p\") == \"missisi\"\nE       AssertionError: assert 'mississi' == 'missisi'\nE         \nE         - missisi\nE         + mississi\nE         ?       +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00018026400000081821, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_middle", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_middle", "run.py", "test", ""], "setup": {"duration": 0.00017133800000035393, "outcome": "passed"}, "call": {"duration": 0.000312596999999748, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'misis' == 'miiippi'\n  \n  - miiippi\n  + misis"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_middle():\n>       assert remove_Occ(\"mississippi\", \"s\") == \"miiippi\"\nE       AssertionError: assert 'misis' == 'miiippi'\nE         \nE         - miiippi\nE         + misis\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017699799999970622, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016917200000055033, "outcome": "passed"}, "call": {"duration": 0.00016571799999987036, "outcome": "passed"}, "teardown": {"duration": 0.00013070100000067697, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_target_character", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_string_with_only_target_character", "run.py", "test", ""], "setup": {"duration": 0.00015409900000040722, "outcome": "passed"}, "call": {"duration": 0.0002966869999996291, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'aa' == ''\n  \n  + aa"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_string_with_only_target_character():\n>       assert remove_Occ(\"aaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aa' == ''\nE         \nE         + aa\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017208299999982302, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_no_target_character", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_no_target_character", "run.py", "test", ""], "setup": {"duration": 0.00017903700000054812, "outcome": "passed"}, "call": {"duration": 0.00015443499999978627, "outcome": "passed"}, "teardown": {"duration": 0.000135025999999705, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_multiple_target_characters", "lineno": 36, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_multiple_target_characters", "run.py", "test", ""], "setup": {"duration": 0.0001602969999998649, "outcome": "passed"}, "call": {"duration": 0.00016224900000061382, "outcome": "passed"}, "teardown": {"duration": 0.00013005799999987744, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_target_character_at_end", "lineno": 39, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_target_character_at_end", "run.py", "test", ""], "setup": {"duration": 0.00015135599999993588, "outcome": "passed"}, "call": {"duration": 0.0001436809999999511, "outcome": "passed"}, "teardown": {"duration": 0.00016283700000041534, "outcome": "passed"}}]}, {"created": 1733296043.472264, "duration": 0.05523991584777832, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_single_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_first_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_single_character", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_special_characters", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_multiple_special_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_single_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_single_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003217519999996199, "outcome": "passed"}, "call": {"duration": 0.0004886600000002517, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_single_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00021280399999934474, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00018567700000016174, "outcome": "passed"}, "call": {"duration": 0.00020650200000016383, "outcome": "passed"}, "teardown": {"duration": 0.00014075200000007726, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_first_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001605970000007062, "outcome": "passed"}, "call": {"duration": 0.0003372239999999138, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'a' == 'ale'\n  \n  - ale\n  + a"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_first_occurrence():\n>       assert remove_Occ(\"apple\", \"p\") == \"ale\"\nE       AssertionError: assert 'a' == 'ale'\nE         \nE         - ale\nE         + a\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00017602399999994134, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_last_occurrence", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001832689999998749, "outcome": "passed"}, "call": {"duration": 0.00015340300000055151, "outcome": "passed"}, "teardown": {"duration": 0.00013129899999952954, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015318099999994672, "outcome": "passed"}, "call": {"duration": 0.0001460970000000117, "outcome": "passed"}, "teardown": {"duration": 0.00012995300000007148, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015179300000056628, "outcome": "passed"}, "call": {"duration": 0.00014645899999976564, "outcome": "passed"}, "teardown": {"duration": 0.0001307700000001688, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_character", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_single_character", "run.py", "test", ""], "setup": {"duration": 0.00015204199999985235, "outcome": "passed"}, "call": {"duration": 0.0001390710000004347, "outcome": "passed"}, "teardown": {"duration": 0.00012466400000032962, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00014930100000043467, "outcome": "passed"}, "call": {"duration": 0.00032498399999969507, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'Apple' == 'ppl'\n  \n  - ppl\n  + Apple\n  ? +   +"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_case_insensitive():\n>       assert remove_Occ(\"Apple\", \"a\") == \"ppl\"\nE       AssertionError: assert 'Apple' == 'ppl'\nE         \nE         - ppl\nE         + Apple\nE         ? +   +\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017930200000026986, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016893399999950987, "outcome": "passed"}, "call": {"duration": 0.00035796299999990566, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'helloworld' == 'helloorld'\n  \n  - helloorld\n  + helloworld\n  ?      +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_special_characters():\n>       assert remove_Occ(\"hello@world\", \"@\") == \"helloorld\"\nE       AssertionError: assert 'helloworld' == 'helloorld'\nE         \nE         - helloorld\nE         + helloworld\nE         ?      +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.0001817449999998999, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_special_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017119199999982015, "outcome": "passed"}, "call": {"duration": 0.0003263229999994621, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'helloworld' == 'helloorldpython'\n  \n  - helloorldpython\n  + helloworld"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_special_characters():\n>       assert remove_Occ(\"hello@world@python\", \"@\") == \"helloorldpython\"\nE       AssertionError: assert 'helloworld' == 'helloorldpython'\nE         \nE         - helloorldpython\nE         + helloworld\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00020007200000016212, "outcome": "passed"}}]}, {"created": 1733296042.8937511, "duration": 0.0533289909362793, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 6, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_removes_first_and_last_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_keeps_only_middle_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_removes_first_and_last_of_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_single_character", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0004359679999996757, "outcome": "passed"}, "call": {"duration": 0.0005415680000000478, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002854059999997105, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002061329999998307, "outcome": "passed"}, "call": {"duration": 0.0001928389999994451, "outcome": "passed"}, "teardown": {"duration": 0.00014128699999993444, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_returns_original_string_if_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00016373999999963473, "outcome": "passed"}, "call": {"duration": 0.00015318400000019494, "outcome": "passed"}, "teardown": {"duration": 0.00013864199999957805, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_first_and_last_occurrences", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_and_last_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017098599999965103, "outcome": "passed"}, "call": {"duration": 0.00016916099999964018, "outcome": "passed"}, "teardown": {"duration": 0.0001324120000001372, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_only_middle_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_only_middle_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015430900000001913, "outcome": "passed"}, "call": {"duration": 0.0003937370000004492, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'baa' == 'bana'\n  \n  - bana\n  ?   -\n  + baa"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_only_middle_occurrences():\n>       assert remove_Occ(\"banana\", \"n\") == \"bana\"\nE       AssertionError: assert 'baa' == 'bana'\nE         \nE         - bana\nE         ?   -\nE         + baa\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00019507699999987693, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_first_and_last_of_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_and_last_of_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017536100000015153, "outcome": "passed"}, "call": {"duration": 0.0003666660000005706, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'mssisspp'\n  \n  - mssisspp\n  + mssissipp\n  ?       +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_and_last_of_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssisspp\"\nE       AssertionError: assert 'mssissipp' == 'mssisspp'\nE         \nE         - mssisspp\nE         + mssissipp\nE         ?       +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017457100000051184, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016757000000033884, "outcome": "passed"}, "call": {"duration": 0.00016329800000036698, "outcome": "passed"}, "teardown": {"duration": 0.0001332310000004, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_single_character_string", "run.py", "test", ""], "setup": {"duration": 0.0001626919999999643, "outcome": "passed"}, "call": {"duration": 0.00014955299999996896, "outcome": "passed"}, "teardown": {"duration": 0.00014486900000054703, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_single_character", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_single_character", "run.py", "test", ""], "setup": {"duration": 0.00016973399999997696, "outcome": "passed"}, "call": {"duration": 0.00014755000000032936, "outcome": "passed"}, "teardown": {"duration": 0.00018175299999967365, "outcome": "passed"}}]}, {"created": 1733296043.9402566, "duration": 0.053731679916381836, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 6, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_is_first", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_is_last", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_replaced_segment_is_empty", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_single_char_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_replacement_char", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003596010000002092, "outcome": "passed"}, "call": {"duration": 0.0005193650000001604, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00019335200000014652, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018082199999991388, "outcome": "passed"}, "call": {"duration": 0.00015811400000020903, "outcome": "passed"}, "teardown": {"duration": 0.0001344219999999119, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_string_unchanged_if_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00016545800000011823, "outcome": "passed"}, "call": {"duration": 0.00014822000000003221, "outcome": "passed"}, "teardown": {"duration": 0.00013145500000000254, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_is_first", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_string_unchanged_if_char_is_first", "run.py", "test", ""], "setup": {"duration": 0.00015043600000019808, "outcome": "passed"}, "call": {"duration": 0.00015389300000001604, "outcome": "passed"}, "teardown": {"duration": 0.0001264460000001133, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_is_last", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_string_unchanged_if_char_is_last", "run.py", "test", ""], "setup": {"duration": 0.0001489439999999842, "outcome": "passed"}, "call": {"duration": 0.00036321599999999954, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_string_unchanged_if_char_is_last():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00017772599999998917, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001797619999999167, "outcome": "passed"}, "call": {"duration": 0.0003575120000001153, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'mssisspp'\n  \n  - mssisspp\n  + mssissipp\n  ?       +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssisspp\"\nE       AssertionError: assert 'mssissipp' == 'mssisspp'\nE         \nE         - mssisspp\nE         + mssissipp\nE         ?       +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017946300000004634, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_replaced_segment_is_empty", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_string_unchanged_if_replaced_segment_is_empty", "run.py", "test", ""], "setup": {"duration": 0.00017014399999992769, "outcome": "passed"}, "call": {"duration": 0.00015357700000007135, "outcome": "passed"}, "teardown": {"duration": 0.00013196000000004204, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016278800000013582, "outcome": "passed"}, "call": {"duration": 0.00014745800000004472, "outcome": "passed"}, "teardown": {"duration": 0.00012856999999999452, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_char_string", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_handles_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00015800900000018103, "outcome": "passed"}, "call": {"duration": 0.0001435939999998581, "outcome": "passed"}, "teardown": {"duration": 0.00013003600000005555, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_replacement_char", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_handles_string_with_only_replacement_char", "run.py", "test", ""], "setup": {"duration": 0.00014932200000017382, "outcome": "passed"}, "call": {"duration": 0.000289285000000028, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'aa' == ''\n  \n  + aa"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_string_with_only_replacement_char():\n>       assert remove_Occ(\"aaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aa' == ''\nE         \nE         + aa\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00020489999999995234, "outcome": "passed"}}]}, {"created": 1733296042.978183, "duration": 0.0646669864654541, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 4, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_in_string", "run.py", "test", ""], "setup": {"duration": 0.0004958610000000974, "outcome": "passed"}, "call": {"duration": 0.0006701060000002812, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_in_string():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002712400000000059, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00025418600000026714, "outcome": "passed"}, "call": {"duration": 0.00026130399999946263, "outcome": "passed"}, "teardown": {"duration": 0.00019833599999952156, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00021118300000022572, "outcome": "passed"}, "call": {"duration": 0.0004720900000005912, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00020510800000028695, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.0002153260000001822, "outcome": "passed"}, "call": {"duration": 0.00039801299999986384, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'boo' == 'bookeeper'\n  \n  - bookeeper\n  + boo"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_same_char():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'boo' == 'bookeeper'\nE         \nE         - bookeeper\nE         + boo\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00020431100000006808, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00021042200000032096, "outcome": "passed"}, "call": {"duration": 0.00020704800000004298, "outcome": "passed"}, "teardown": {"duration": 0.00017697299999941407, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.0002049859999999626, "outcome": "passed"}, "call": {"duration": 0.00020481600000010758, "outcome": "passed"}, "teardown": {"duration": 0.00017097800000076546, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00020465500000010906, "outcome": "passed"}, "call": {"duration": 0.0001952669999996104, "outcome": "passed"}, "teardown": {"duration": 0.00017045299999995933, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00020675699999994634, "outcome": "passed"}, "call": {"duration": 0.0004330679999995368, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'appl' == 'apppl'\n  \n  - apppl\n  ?    -\n  + appl"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_at_end():\n>       assert remove_Occ(\"apple\", \"e\") == \"apppl\"\nE       AssertionError: assert 'appl' == 'apppl'\nE         \nE         - apppl\nE         ?    -\nE         + appl\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0002510679999998544, "outcome": "passed"}}]}, {"created": 1733296043.5739975, "duration": 0.05267739295959473, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 4, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_multiple_chars", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_in_string", "run.py", "test", ""], "setup": {"duration": 0.0003305239999999987, "outcome": "passed"}, "call": {"duration": 0.0005123999999998574, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_in_string():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002107380000000436, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00017635900000012583, "outcome": "passed"}, "call": {"duration": 0.00018352899999984906, "outcome": "passed"}, "teardown": {"duration": 0.0001416800000000329, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015454900000011484, "outcome": "passed"}, "call": {"duration": 0.0003401600000001448, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00017423599999988326, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.0001673069999998944, "outcome": "passed"}, "call": {"duration": 0.00016918099999996272, "outcome": "passed"}, "teardown": {"duration": 0.0001363750000000774, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00015254699999989185, "outcome": "passed"}, "call": {"duration": 0.00032747300000002255, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'es' == 'tes'\n  \n  - tes\n  ? -\n  + es"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_at_end():\n>       assert remove_Occ(\"test\", \"t\") == \"tes\"\nE       AssertionError: assert 'es' == 'tes'\nE         \nE         - tes\nE         ? -\nE         + es\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00016994200000008952, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_chars", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00016691299999993525, "outcome": "passed"}, "call": {"duration": 0.0003362289999999657, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00016427800000018422, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016926599999989023, "outcome": "passed"}, "call": {"duration": 0.00015066300000010635, "outcome": "passed"}, "teardown": {"duration": 0.00013190100000004534, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.0001594369999999845, "outcome": "passed"}, "call": {"duration": 0.000144029000000101, "outcome": "passed"}, "teardown": {"duration": 0.0001265269999999319, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00014732999999989005, "outcome": "passed"}, "call": {"duration": 0.00029901400000009737, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'o' == 'op'\n  \n  - op\n  + o"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_same_char():\n>       assert remove_Occ(\"pop\", \"p\") == \"op\"\nE       AssertionError: assert 'o' == 'op'\nE         \nE         - op\nE         + o\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00022564000000002693, "outcome": "passed"}}]}, {"created": 1733296042.2923155, "duration": 0.0480194091796875, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 5, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_string_without_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_char_at_end", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_char_at_start", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00030199000000052934, "outcome": "passed"}, "call": {"duration": 0.0004726009999993508, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020514800000004385, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018035400000027124, "outcome": "passed"}, "call": {"duration": 0.00016735500000031323, "outcome": "passed"}, "teardown": {"duration": 0.0001368949999998037, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00015709400000041285, "outcome": "passed"}, "call": {"duration": 0.00014746400000031912, "outcome": "passed"}, "teardown": {"duration": 0.00014278400000033997, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001574470000003103, "outcome": "passed"}, "call": {"duration": 0.00014659200000011197, "outcome": "passed"}, "teardown": {"duration": 0.00013097899999969798, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_without_char", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_without_char", "run.py", "test", ""], "setup": {"duration": 0.00015533200000028557, "outcome": "passed"}, "call": {"duration": 0.00015626800000045904, "outcome": "passed"}, "teardown": {"duration": 0.00013118099999953614, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015923299999975882, "outcome": "passed"}, "call": {"duration": 0.0003308029999997686, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00019214000000022935, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_char_at_end", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00017394200000087068, "outcome": "passed"}, "call": {"duration": 0.00031075999999963244, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'boo' == 'bookeeper'\n  \n  - bookeeper\n  + boo"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_char_at_end():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'boo' == 'bookeeper'\nE         \nE         - bookeeper\nE         + boo\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017475799999999708, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_char_at_start", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_repeated_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00016833699999985186, "outcome": "passed"}, "call": {"duration": 0.00017157799999978351, "outcome": "passed"}, "teardown": {"duration": 0.00018609800000035648, "outcome": "passed"}}]}, {"created": 1733296042.4951196, "duration": 0.04926753044128418, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 4, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_single_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_multiple_special_characters", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_single_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_with_single_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003039729999998464, "outcome": "passed"}, "call": {"duration": 0.00046839100000006795, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_single_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00019609200000036964, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017504099999987588, "outcome": "passed"}, "call": {"duration": 0.0003913440000000712, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.0001752590000001497, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016904200000000813, "outcome": "passed"}, "call": {"duration": 0.00015135800000010136, "outcome": "passed"}, "teardown": {"duration": 0.0001307389999998243, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00017207700000021475, "outcome": "passed"}, "call": {"duration": 0.00016582399999975905, "outcome": "passed"}, "teardown": {"duration": 0.0001336789999997201, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.0001538270000001063, "outcome": "passed"}, "call": {"duration": 0.00015617800000011783, "outcome": "passed"}, "teardown": {"duration": 0.00012799900000004527, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00014915200000009676, "outcome": "passed"}, "call": {"duration": 0.00013925299999995033, "outcome": "passed"}, "teardown": {"duration": 0.0001301869999998928, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00014641299999995638, "outcome": "passed"}, "call": {"duration": 0.0003392600000000634, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert '!#hello' == '!#hello#'\n  \n  - !#hello#\n  ?        -\n  + !#hello"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"!@#hello@#\", \"@\") == \"!#hello#\"\nE       AssertionError: assert '!#hello' == '!#hello#'\nE         \nE         - !#hello#\nE         ?        -\nE         + !#hello\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017649000000030668, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001669390000000881, "outcome": "passed"}, "call": {"duration": 0.0003233210000002096, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '!hello' == '!hello#world'\n  \n  - !hello#world\n  + !hello"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_special_characters():\n>       assert remove_Occ(\"!@#hello@#world\", \"@#\") == \"!hello#world\"\nE       AssertionError: assert '!hello' == '!hello#world'\nE         \nE         - !hello#world\nE         + !hello\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00020071699999979487, "outcome": "passed"}}]}, {"created": 1733296044.1318996, "duration": 0.05649733543395996, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 5, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_single_character", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0004180890000000659, "outcome": "passed"}, "call": {"duration": 0.0005732269999998429, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00033207000000001763, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00022974300000000447, "outcome": "passed"}, "call": {"duration": 0.000222131999999986, "outcome": "passed"}, "teardown": {"duration": 0.0001662829999999893, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019613399999984793, "outcome": "passed"}, "call": {"duration": 0.00020376699999991033, "outcome": "passed"}, "teardown": {"duration": 0.00016172300000016904, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00019851000000015162, "outcome": "passed"}, "call": {"duration": 0.00045316500000014415, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.0001985270000000039, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00019797800000009858, "outcome": "passed"}, "call": {"duration": 0.00019546500000000577, "outcome": "passed"}, "teardown": {"duration": 0.00015876599999997687, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_character", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_single_character", "run.py", "test", ""], "setup": {"duration": 0.0001884899999999856, "outcome": "passed"}, "call": {"duration": 0.00019019500000005962, "outcome": "passed"}, "teardown": {"duration": 0.0001568899999999651, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00018536799999990805, "outcome": "passed"}, "call": {"duration": 0.00017743499999989254, "outcome": "passed"}, "teardown": {"duration": 0.00016199399999994313, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00018590299999998727, "outcome": "passed"}, "call": {"duration": 0.0004513240000001417, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0002546379999999182, "outcome": "passed"}}]}, {"created": 1733296042.9825184, "duration": 0.0532839298248291, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 7, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_char_not_in_string", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_char_at_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_char_at_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_single_char_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_multiple_removals", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_case_insensitive", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00038786400000012655, "outcome": "passed"}, "call": {"duration": 0.0005336839999998677, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002516390000000257, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002059349999998794, "outcome": "passed"}, "call": {"duration": 0.0001855790000000468, "outcome": "passed"}, "teardown": {"duration": 0.00014015199999994898, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_in_string", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015853699999990312, "outcome": "passed"}, "call": {"duration": 0.00017008699999987442, "outcome": "passed"}, "teardown": {"duration": 0.00013627999999998863, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015733799999995135, "outcome": "passed"}, "call": {"duration": 0.0003576860000000792, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'ball' == 'balun'\n  \n  - balun\n  + ball"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"balloon\", \"o\") == \"balun\"\nE       AssertionError: assert 'ball' == 'balun'\nE         \nE         - balun\nE         + ball\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00018822500000004183, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_start", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00016972400000003773, "outcome": "passed"}, "call": {"duration": 0.00015449599999994845, "outcome": "passed"}, "teardown": {"duration": 0.00013304799999991346, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_end", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00015561600000002507, "outcome": "passed"}, "call": {"duration": 0.00014572099999998755, "outcome": "passed"}, "teardown": {"duration": 0.00015461600000010733, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 24, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016437600000007713, "outcome": "passed"}, "call": {"duration": 0.00014759099999994696, "outcome": "passed"}, "teardown": {"duration": 0.00012955500000000342, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string", "lineno": 27, "outcome": "passed", "keywords": ["test_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.0001500469999999865, "outcome": "passed"}, "call": {"duration": 0.00015333300000008876, "outcome": "passed"}, "teardown": {"duration": 0.00012904199999996813, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_removals", "lineno": 30, "outcome": "passed", "keywords": ["test_multiple_removals", "run.py", "test", ""], "setup": {"duration": 0.00014729899999998963, "outcome": "passed"}, "call": {"duration": 0.00014222100000016447, "outcome": "passed"}, "teardown": {"duration": 0.00013645600000011804, "outcome": "passed"}}, {"nodeid": "run.py::test_case_insensitive", "lineno": 33, "outcome": "failed", "keywords": ["test_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00014444300000016064, "outcome": "passed"}, "call": {"duration": 0.00030831599999991965, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'HellW' == 'HellWorld'\n  \n  - HellWorld\n  + HellW"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_case_insensitive():\n>       assert remove_Occ(\"HelloWorld\", \"o\") == \"HellWorld\"\nE       AssertionError: assert 'HellW' == 'HellWorld'\nE         \nE         - HellWorld\nE         + HellW\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00021263899999990343, "outcome": "passed"}}]}, {"created": 1733296042.663775, "duration": 0.050894737243652344, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 4, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_single_char", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_char_at_start", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_char_at_end", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003565530000000372, "outcome": "passed"}, "call": {"duration": 0.0005283819999999384, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00019722999999993718, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017635600000009966, "outcome": "passed"}, "call": {"duration": 0.00038165499999998076, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00018137399999984538, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001742640000002016, "outcome": "passed"}, "call": {"duration": 0.00015792200000008805, "outcome": "passed"}, "teardown": {"duration": 0.00013415300000008124, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char", "lineno": 15, "outcome": "passed", "keywords": ["test_single_char", "run.py", "test", ""], "setup": {"duration": 0.00017227799999997018, "outcome": "passed"}, "call": {"duration": 0.00015027900000008643, "outcome": "passed"}, "teardown": {"duration": 0.0001336790000001642, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001640139999998791, "outcome": "passed"}, "call": {"duration": 0.0003328260000001748, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bnanaa' == 'banan'\n  \n  - banan\n  + bnanaa"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"bananaaa\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnanaa' == 'banan'\nE         \nE         - banan\nE         + bnanaa\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00017819099999982768, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017273299999986946, "outcome": "passed"}, "call": {"duration": 0.0001551200000000641, "outcome": "passed"}, "teardown": {"duration": 0.0001323280000000704, "outcome": "passed"}}, {"nodeid": "run.py::test_char_at_start", "lineno": 24, "outcome": "passed", "keywords": ["test_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00017713600000002216, "outcome": "passed"}, "call": {"duration": 0.0001509729999999987, "outcome": "passed"}, "teardown": {"duration": 0.00013103599999997328, "outcome": "passed"}}, {"nodeid": "run.py::test_char_at_end", "lineno": 27, "outcome": "failed", "keywords": ["test_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00016209400000000151, "outcome": "passed"}, "call": {"duration": 0.0003354500000001259, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'appl' == 'apppl'\n  \n  - apppl\n  ?    -\n  + appl"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_char_at_end():\n>       assert remove_Occ(\"apple\", \"e\") == \"apppl\"\nE       AssertionError: assert 'appl' == 'apppl'\nE         \nE         - apppl\nE         ?    -\nE         + appl\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0002122410000000574, "outcome": "passed"}}]}, {"created": 1733296042.8114777, "duration": 0.058319807052612305, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 4, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_single_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_no_replacements", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_in_middle", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_single_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_with_single_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00038189300000013304, "outcome": "passed"}, "call": {"duration": 0.0005161890000002778, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'hel'\n  \n  - hel\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_single_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"hel\"\nE       AssertionError: assert 'he' == 'hel'\nE         \nE         - hel\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002774809999999128, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00020533900000030414, "outcome": "passed"}, "call": {"duration": 0.0004177100000002376, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.000183912999999869, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001712190000002778, "outcome": "passed"}, "call": {"duration": 0.000156549999999811, "outcome": "passed"}, "teardown": {"duration": 0.0001481309999999958, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00016247300000005183, "outcome": "passed"}, "call": {"duration": 0.00014718999999985272, "outcome": "passed"}, "teardown": {"duration": 0.00014868399999956594, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00015415400000007295, "outcome": "passed"}, "call": {"duration": 0.00033049600000012447, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'es' == 'tes'\n  \n  - tes\n  ? -\n  + es"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_at_end():\n>       assert remove_Occ(\"test\", \"t\") == \"tes\"\nE       AssertionError: assert 'es' == 'tes'\nE         \nE         - tes\nE         ? -\nE         + es\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00017689799999986988, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016960100000007472, "outcome": "passed"}, "call": {"duration": 0.00014982099999993892, "outcome": "passed"}, "teardown": {"duration": 0.00014302700000001778, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_replacements", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_no_replacements", "run.py", "test", ""], "setup": {"duration": 0.000152315000000236, "outcome": "passed"}, "call": {"duration": 0.00032187399999994426, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'ython' == 'python'\n  \n  - python\n  ? -\n  + ython"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_no_replacements():\n>       assert remove_Occ(\"python\", \"p\") == \"python\"\nE       AssertionError: assert 'ython' == 'python'\nE         \nE         - python\nE         ? -\nE         + ython\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017586799999991243, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00016759399999966007, "outcome": "passed"}, "call": {"duration": 0.00031002899999998945, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'boo' == 'bookeeper'\n  \n  - bookeeper\n  + boo"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_char_at_end():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'boo' == 'bookeeper'\nE         \nE         - bookeeper\nE         + boo\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017610000000001236, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_in_middle", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_in_middle", "run.py", "test", ""], "setup": {"duration": 0.00017889300000017982, "outcome": "passed"}, "call": {"duration": 0.0003003920000002047, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'hara' == 'haracter'\n  \n  - haracter\n  + hara"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_char_in_middle():\n>       assert remove_Occ(\"character\", \"c\") == \"haracter\"\nE       AssertionError: assert 'hara' == 'haracter'\nE         \nE         - haracter\nE         + hara\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017588000000001713, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_with_repeated_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00017028599999990846, "outcome": "passed"}, "call": {"duration": 0.00015148700000011672, "outcome": "passed"}, "teardown": {"duration": 0.00016726100000008515, "outcome": "passed"}}]}, {"created": 1733296042.3822775, "duration": 0.05854392051696777, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 4, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_char_from_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_char_from_single_char_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_char_from_string_with_only_target_char", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_char_from_string_with_multiple_same_chars", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_char_from_string_with_no_target_char", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00035633000000023785, "outcome": "passed"}, "call": {"duration": 0.0004407689999998965, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00023569900000008914, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002044180000000395, "outcome": "passed"}, "call": {"duration": 0.0003977440000002552, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00018325299999988331, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00018397400000003117, "outcome": "passed"}, "call": {"duration": 0.00034819400000030143, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00017442300000025668, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00017040199999973638, "outcome": "passed"}, "call": {"duration": 0.0001517909999999567, "outcome": "passed"}, "teardown": {"duration": 0.0001372909999997063, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00015495300000001322, "outcome": "passed"}, "call": {"duration": 0.00033614200000009475, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bacab' == 'bcb'\n  \n  - bcb\n  + bacab\n  ?  + +"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_same_char():\n>       assert remove_Occ(\"abacaba\", \"a\") == \"bcb\"\nE       AssertionError: assert 'bacab' == 'bcb'\nE         \nE         - bcb\nE         + bacab\nE         ?  + +\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00017848100000028566, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_char_from_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017126700000025252, "outcome": "passed"}, "call": {"duration": 0.00016479599999996708, "outcome": "passed"}, "teardown": {"duration": 0.00014960300000010918, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_single_char_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_char_from_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00016054499999995642, "outcome": "passed"}, "call": {"duration": 0.00014704700000001125, "outcome": "passed"}, "teardown": {"duration": 0.00014587399999976824, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_string_with_only_target_char", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_char_from_string_with_only_target_char", "run.py", "test", ""], "setup": {"duration": 0.00016834099999973873, "outcome": "passed"}, "call": {"duration": 0.0003048439999999708, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'aaa' == ''\n  \n  + aaa"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_char_from_string_with_only_target_char():\n>       assert remove_Occ(\"aaaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aaa' == ''\nE         \nE         + aaa\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0001805510000001398, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_string_with_multiple_same_chars", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_char_from_string_with_multiple_same_chars", "run.py", "test", ""], "setup": {"duration": 0.00017235799999992807, "outcome": "passed"}, "call": {"duration": 0.00035057500000013064, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_char_from_string_with_multiple_same_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017979000000023504, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_string_with_no_target_char", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_char_from_string_with_no_target_char", "run.py", "test", ""], "setup": {"duration": 0.00017493799999979132, "outcome": "passed"}, "call": {"duration": 0.0001549550000001787, "outcome": "passed"}, "teardown": {"duration": 0.00016837199999963914, "outcome": "passed"}}]}, {"created": 1733296044.3784313, "duration": 0.054965972900390625, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 5, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_no_occurrence", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_empty_string", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_char_not_in_string", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_multiple_chars", "type": "Function", "lineno": 31}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002960169999997042, "outcome": "passed"}, "call": {"duration": 0.000436583000000379, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'hello'\n  \n  - hello\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"hello\"\nE       AssertionError: assert 'he' == 'hello'\nE         \nE         - hello\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002506339999999163, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00020044499999993803, "outcome": "passed"}, "call": {"duration": 0.00016967499999998026, "outcome": "passed"}, "teardown": {"duration": 0.0001342570000000265, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.000168152000000088, "outcome": "passed"}, "call": {"duration": 0.0003512059999999373, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'he' == 'hello'\n  \n  - hello\n  + he"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"hello\"\nE       AssertionError: assert 'he' == 'hello'\nE         \nE         - hello\nE         + he\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.0001768489999998124, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_no_occurrence", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016832799999999537, "outcome": "passed"}, "call": {"duration": 0.00015321000000012575, "outcome": "passed"}, "teardown": {"duration": 0.00014369700000038677, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 19, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015302600000000055, "outcome": "passed"}, "call": {"duration": 0.00034032300000008675, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 21, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 21, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:21: AssertionError"}, "teardown": {"duration": 0.00025394500000031073, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00020913600000005417, "outcome": "passed"}, "call": {"duration": 0.00016973899999994657, "outcome": "passed"}, "teardown": {"duration": 0.00013614600000000365, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_empty_string", "lineno": 25, "outcome": "passed", "keywords": ["test_remove_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015551699999960533, "outcome": "passed"}, "call": {"duration": 0.0001473080000002902, "outcome": "passed"}, "teardown": {"duration": 0.00013958099999999973, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_in_string", "lineno": 28, "outcome": "passed", "keywords": ["test_remove_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00016324899999986542, "outcome": "passed"}, "call": {"duration": 0.00016030100000019587, "outcome": "passed"}, "teardown": {"duration": 0.00013844599999979224, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_chars", "lineno": 31, "outcome": "failed", "keywords": ["test_remove_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00015795199999990572, "outcome": "passed"}, "call": {"duration": 0.00038915599999977957, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 33, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 33, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:33: AssertionError"}, "teardown": {"duration": 0.0002134879999999839, "outcome": "passed"}}]}, {"created": 1733296044.1355724, "duration": 0.05787515640258789, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 7, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_keeps_case_sensitive", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_single_character", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_first_character", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_last_character", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_middle_character", "type": "Function", "lineno": 36}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_one_character", "type": "Function", "lineno": 39}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00041784400000000055, "outcome": "passed"}, "call": {"duration": 0.0004628749999999737, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00019553500000002444, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001885569999999781, "outcome": "passed"}, "call": {"duration": 0.00018373000000004858, "outcome": "passed"}, "teardown": {"duration": 0.0001414870000000512, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.0001637770000000316, "outcome": "passed"}, "call": {"duration": 0.00016527700000001921, "outcome": "passed"}, "teardown": {"duration": 0.00013401000000001773, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_case_sensitive", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_case_sensitive", "run.py", "test", ""], "setup": {"duration": 0.0001551589999999603, "outcome": "passed"}, "call": {"duration": 0.0003460820000000808, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'HellW' == 'HellWorld'\n  \n  - HellWorld\n  + HellW"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_case_sensitive():\n>       assert remove_Occ(\"HelloWorld\", \"o\") == \"HellWorld\"\nE       AssertionError: assert 'HellW' == 'HellWorld'\nE         \nE         - HellWorld\nE         + HellW\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00018133799999997535, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017573799999981432, "outcome": "passed"}, "call": {"duration": 0.0001544899999998961, "outcome": "passed"}, "teardown": {"duration": 0.00013581499999992808, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016951000000009486, "outcome": "passed"}, "call": {"duration": 0.0001468880000001782, "outcome": "passed"}, "teardown": {"duration": 0.00013579399999996689, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015664599999998252, "outcome": "passed"}, "call": {"duration": 0.00035122199999992887, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017637200000009123, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_character", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_single_character", "run.py", "test", ""], "setup": {"duration": 0.00017191799999993762, "outcome": "passed"}, "call": {"duration": 0.00015403899999988369, "outcome": "passed"}, "teardown": {"duration": 0.00013153600000004317, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_first_character", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_first_character", "run.py", "test", ""], "setup": {"duration": 0.00017393899999995632, "outcome": "passed"}, "call": {"duration": 0.00030118799999989676, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'a' == 'aab'\n  \n  - aab\n  + a"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_first_character():\n>       assert remove_Occ(\"aaab\", \"a\") == \"aab\"\nE       AssertionError: assert 'a' == 'aab'\nE         \nE         - aab\nE         + a\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017711899999994785, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_last_character", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_handles_repeated_last_character", "run.py", "test", ""], "setup": {"duration": 0.00016973299999989422, "outcome": "passed"}, "call": {"duration": 0.00015458999999995449, "outcome": "passed"}, "teardown": {"duration": 0.00014492500000007347, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_middle_character", "lineno": 36, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_middle_character", "run.py", "test", ""], "setup": {"duration": 0.00015601999999992344, "outcome": "passed"}, "call": {"duration": 0.00030002300000009363, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 38, "message": "AssertionError: assert 'abba' == 'bb'\n  \n  - bb\n  + abba"}, "traceback": [{"path": "run.py", "lineno": 38, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_middle_character():\n>       assert remove_Occ(\"aabbaa\", \"a\") == \"bb\"\nE       AssertionError: assert 'abba' == 'bb'\nE         \nE         - bb\nE         + abba\n\nrun.py:38: AssertionError"}, "teardown": {"duration": 0.00017930000000010438, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_one_character", "lineno": 39, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_only_one_character", "run.py", "test", ""], "setup": {"duration": 0.0001712970000000702, "outcome": "passed"}, "call": {"duration": 0.00016376200000012275, "outcome": "passed"}, "teardown": {"duration": 0.00016507600000004174, "outcome": "passed"}}]}, {"created": 1733296043.9301379, "duration": 0.05254340171813965, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 4, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_case_insensitivity", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_special_characters", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002840050000001426, "outcome": "passed"}, "call": {"duration": 0.0004525810000002295, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020593800000057172, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001756340000005352, "outcome": "passed"}, "call": {"duration": 0.00016936300000036653, "outcome": "passed"}, "teardown": {"duration": 0.0001485770000000386, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.0001564649999998835, "outcome": "passed"}, "call": {"duration": 0.0003469209999993339, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'hell w' == 'hell world'\n  \n  - hell world\n  ?       ----\n  + hell w"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"hello world\", \"o\") == \"hell world\"\nE       AssertionError: assert 'hell w' == 'hell world'\nE         \nE         - hell world\nE         ?       ----\nE         + hell w\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00017070399999941088, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001666700000004795, "outcome": "passed"}, "call": {"duration": 0.00016064999999976237, "outcome": "passed"}, "teardown": {"duration": 0.0001317509999996247, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001498470000003138, "outcome": "passed"}, "call": {"duration": 0.00014260699999990578, "outcome": "passed"}, "teardown": {"duration": 0.0001306159999998613, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00014611399999964192, "outcome": "passed"}, "call": {"duration": 0.00014057200000028303, "outcome": "passed"}, "teardown": {"duration": 0.00012499599999937772, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_case_insensitivity", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_handles_case_insensitivity", "run.py", "test", ""], "setup": {"duration": 0.00014686799999985567, "outcome": "passed"}, "call": {"duration": 0.00033043399999943546, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'Hell W' == 'Hell World'\n  \n  - Hell World\n  ?       ----\n  + Hell W"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_case_insensitivity():\n>       assert remove_Occ(\"Hello World\", \"o\") == \"Hell World\"\nE       AssertionError: assert 'Hell W' == 'Hell World'\nE         \nE         - Hell World\nE         ?       ----\nE         + Hell W\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017737900000014406, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001640599999994663, "outcome": "passed"}, "call": {"duration": 0.0003631310000002941, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '!#$hello' == '!$hello%'\n  \n  - !$hello%\n  ?        -\n  + !#$hello\n  ?  +"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_special_characters():\n>       assert remove_Occ(\"!@#$hello@#%\", \"@\") == \"!$hello%\"\nE       AssertionError: assert '!#$hello' == '!$hello%'\nE         \nE         - !$hello%\nE         ?        -\nE         + !#$hello\nE         ?  +\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00016845700000001074, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001645490000008465, "outcome": "passed"}, "call": {"duration": 0.00034711299999923284, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert '!hello!' == 'hello!!'\n  \n  - hello!!\n  ?       -\n  + !hello!\n  ? +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_special_characters():\n>       assert remove_Occ(\"!!hello!!\", \"!\") == \"hello!!\"\nE       AssertionError: assert '!hello!' == 'hello!!'\nE         \nE         - hello!!\nE         ?       -\nE         + !hello!\nE         ? +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.0002086129999998576, "outcome": "passed"}}]}, {"created": 1733296044.1406217, "duration": 0.05901074409484863, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 6, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_returns_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_single_character", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_single_character_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_repeated_characters", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_Occ_with_same_char_first_and_last", "type": "Function", "lineno": 36}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0004623639999996598, "outcome": "passed"}, "call": {"duration": 0.00047126499999983196, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'banna'\n  \n  - banna\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banna\"\nE       AssertionError: assert 'bnan' == 'banna'\nE         \nE         - banna\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002630019999996236, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002088630000001146, "outcome": "passed"}, "call": {"duration": 0.00039317099999980343, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.0001859729999997839, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00018038300000000618, "outcome": "passed"}, "call": {"duration": 0.00016622700000024082, "outcome": "passed"}, "teardown": {"duration": 0.0001377469999996883, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_returns_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_returns_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015733600000000791, "outcome": "passed"}, "call": {"duration": 0.00014589400000009078, "outcome": "passed"}, "teardown": {"duration": 0.00012829200000030738, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015318200000002946, "outcome": "passed"}, "call": {"duration": 0.00034921400000031966, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00017530299999979349, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016964900000004945, "outcome": "passed"}, "call": {"duration": 0.00015447700000015274, "outcome": "passed"}, "teardown": {"duration": 0.00013753400000027227, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015622699999973122, "outcome": "passed"}, "call": {"duration": 0.00014771899999965754, "outcome": "passed"}, "teardown": {"duration": 0.00013315500000032898, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_character", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_character", "run.py", "test", ""], "setup": {"duration": 0.00015786599999989548, "outcome": "passed"}, "call": {"duration": 0.00014262499999961875, "outcome": "passed"}, "teardown": {"duration": 0.00012760499999986408, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_character_string", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_character_string", "run.py", "test", ""], "setup": {"duration": 0.0001625220000001093, "outcome": "passed"}, "call": {"duration": 0.00014132100000008307, "outcome": "passed"}, "teardown": {"duration": 0.0001276099999998337, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_characters", "run.py", "test", ""], "setup": {"duration": 0.00014733999999982927, "outcome": "passed"}, "call": {"duration": 0.0003194830000001758, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'aaab' == 'aaaabbbccc'\n  \n  - aaaabbbccc\n  + aaab"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_characters():\n>       assert remove_Occ(\"aaabbbccc\", \"b\") == \"aaaabbbccc\"\nE       AssertionError: assert 'aaab' == 'aaaabbbccc'\nE         \nE         - aaaabbbccc\nE         + aaab\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00017000699999991653, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_same_char_first_and_last", "lineno": 36, "outcome": "failed", "keywords": ["test_remove_Occ_with_same_char_first_and_last", "run.py", "test", ""], "setup": {"duration": 0.00016981099999968663, "outcome": "passed"}, "call": {"duration": 0.00029345299999983254, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 38, "message": "AssertionError: assert '' == 'a'\n  \n  - a"}, "traceback": [{"path": "run.py", "lineno": 38, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_same_char_first_and_last():\n>       assert remove_Occ(\"aa\", \"a\") == \"a\"\nE       AssertionError: assert '' == 'a'\nE         \nE         - a\n\nrun.py:38: AssertionError"}, "teardown": {"duration": 0.0002038680000002735, "outcome": "passed"}}]}, {"created": 1733296043.8265858, "duration": 0.05488324165344238, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_case_sensitivity", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_numeric_string", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003040930000000053, "outcome": "passed"}, "call": {"duration": 0.00047167999999997434, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00019199400000013966, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018434100000019882, "outcome": "passed"}, "call": {"duration": 0.00018315500000021245, "outcome": "passed"}, "teardown": {"duration": 0.00014037999999994, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.0001714009999997934, "outcome": "passed"}, "call": {"duration": 0.0003556450000004041, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'helo wor' == 'heo world'\n  \n  - heo world\n  ?        --\n  + helo wor\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"hello world\", \"l\") == \"heo world\"\nE       AssertionError: assert 'helo wor' == 'heo world'\nE         \nE         - heo world\nE         ?        --\nE         + helo wor\nE         ?   +\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.0001837149999999177, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017647800000020197, "outcome": "passed"}, "call": {"duration": 0.00015316600000003788, "outcome": "passed"}, "teardown": {"duration": 0.00013404800000005324, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrences", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001650820000000941, "outcome": "passed"}, "call": {"duration": 0.00014739799999974323, "outcome": "passed"}, "teardown": {"duration": 0.00012890900000028793, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00014926000000015094, "outcome": "passed"}, "call": {"duration": 0.00017081199999990915, "outcome": "passed"}, "teardown": {"duration": 0.00012951800000005065, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_characters", "run.py", "test", ""], "setup": {"duration": 0.00014789000000003938, "outcome": "passed"}, "call": {"duration": 0.0003447790000001838, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_characters():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017282800000018028, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_case_sensitivity", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_handles_case_sensitivity", "run.py", "test", ""], "setup": {"duration": 0.0001657189999999531, "outcome": "passed"}, "call": {"duration": 0.0003471829999996956, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'Hell W' == 'Hell World'\n  \n  - Hell World\n  ?       ----\n  + Hell W"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_case_sensitivity():\n>       assert remove_Occ(\"Hello World\", \"o\") == \"Hell World\"\nE       AssertionError: assert 'Hell W' == 'Hell World'\nE         \nE         - Hell World\nE         ?       ----\nE         + Hell W\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017715900000014884, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017267100000006863, "outcome": "passed"}, "call": {"duration": 0.0003560460000002763, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert '!#$hello' == '!#$hello#'\n  \n  - !#$hello#\n  ?         -\n  + !#$hello"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_special_characters():\n>       assert remove_Occ(\"!@#$hello@#\", \"@\") == \"!#$hello#\"\nE       AssertionError: assert '!#$hello' == '!#$hello#'\nE         \nE         - !#$hello#\nE         ?         -\nE         + !#$hello\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00018040799999985424, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_numeric_string", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_handles_numeric_string", "run.py", "test", ""], "setup": {"duration": 0.00017221199999983838, "outcome": "passed"}, "call": {"duration": 0.00015524400000010985, "outcome": "passed"}, "teardown": {"duration": 0.00016841400000000561, "outcome": "passed"}}]}, {"created": 1733296043.601135, "duration": 0.05627131462097168, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 6, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_char_not_in_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_single_char_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_string_with_multiple_chars_to_remove", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_string_with_repeated_first_char", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_string_with_repeated_last_char", "type": "Function", "lineno": 36}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0004114450000001213, "outcome": "passed"}, "call": {"duration": 0.00039152499999994816, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020532199999978573, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001950220000002112, "outcome": "passed"}, "call": {"duration": 0.00017701099999989367, "outcome": "passed"}, "teardown": {"duration": 0.00015521600000001357, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017328499999980096, "outcome": "passed"}, "call": {"duration": 0.0003374720000000053, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'ball' == 'balln'\n  \n  - balln\n  ?     -\n  + ball"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"balloon\", \"o\") == \"balln\"\nE       AssertionError: assert 'ball' == 'balln'\nE         \nE         - balln\nE         ?     -\nE         + ball\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.0001737109999999653, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_in_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00016524099999992714, "outcome": "passed"}, "call": {"duration": 0.0001485629999997684, "outcome": "passed"}, "teardown": {"duration": 0.0001441930000001257, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00015232500000017524, "outcome": "passed"}, "call": {"duration": 0.0001469819999999622, "outcome": "passed"}, "teardown": {"duration": 0.00012935099999999977, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015285299999989732, "outcome": "passed"}, "call": {"duration": 0.0003423280000003359, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'msssspp'\n  \n  - msssspp\n  + mssissipp\n  ?    +  +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"msssspp\"\nE       AssertionError: assert 'mssissipp' == 'msssspp'\nE         \nE         - msssspp\nE         + mssissipp\nE         ?    +  +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017327999999983135, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 24, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016595600000002264, "outcome": "passed"}, "call": {"duration": 0.00015010999999987007, "outcome": "passed"}, "teardown": {"duration": 0.0001428980000000024, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string", "lineno": 27, "outcome": "passed", "keywords": ["test_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00015107300000005708, "outcome": "passed"}, "call": {"duration": 0.0001409839999997331, "outcome": "passed"}, "teardown": {"duration": 0.00012691000000009112, "outcome": "passed"}}, {"nodeid": "run.py::test_string_with_multiple_chars_to_remove", "lineno": 30, "outcome": "passed", "keywords": ["test_string_with_multiple_chars_to_remove", "run.py", "test", ""], "setup": {"duration": 0.0001610799999998136, "outcome": "passed"}, "call": {"duration": 0.0001438320000000104, "outcome": "passed"}, "teardown": {"duration": 0.00013007399999986902, "outcome": "passed"}}, {"nodeid": "run.py::test_string_with_repeated_first_char", "lineno": 33, "outcome": "failed", "keywords": ["test_string_with_repeated_first_char", "run.py", "test", ""], "setup": {"duration": 0.0001490750000003871, "outcome": "passed"}, "call": {"duration": 0.00029221199999973635, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'a' == 'aaabbbccc'\n  \n  - aaabbbccc\n  + a"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_string_with_repeated_first_char():\n>       assert remove_Occ(\"aaabbbccc\", \"a\") == \"aaabbbccc\"\nE       AssertionError: assert 'a' == 'aaabbbccc'\nE         \nE         - aaabbbccc\nE         + a\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00017744300000011037, "outcome": "passed"}}, {"nodeid": "run.py::test_string_with_repeated_last_char", "lineno": 36, "outcome": "failed", "keywords": ["test_string_with_repeated_last_char", "run.py", "test", ""], "setup": {"duration": 0.00016972199999987225, "outcome": "passed"}, "call": {"duration": 0.0003481430000000785, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 38, "message": "AssertionError: assert 'aaabbbc' == 'aaabbbcc'\n  \n  - aaabbbcc\n  ?        -\n  + aaabbbc"}, "traceback": [{"path": "run.py", "lineno": 38, "message": "AssertionError"}], "longrepr": "def test_string_with_repeated_last_char():\n>       assert remove_Occ(\"aaabbbccc\", \"c\") == \"aaabbbcc\"\nE       AssertionError: assert 'aaabbbc' == 'aaabbbcc'\nE         \nE         - aaabbbcc\nE         ?        -\nE         + aaabbbc\n\nrun.py:38: AssertionError"}, "teardown": {"duration": 0.00019689499999975268, "outcome": "passed"}}]}, {"created": 1733296044.0537806, "duration": 0.05938005447387695, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 4, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_case_sensitivity", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003332120000001382, "outcome": "passed"}, "call": {"duration": 0.0005580780000000729, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0003116089999997129, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00024428099999962427, "outcome": "passed"}, "call": {"duration": 0.00020528000000030744, "outcome": "passed"}, "teardown": {"duration": 0.00014048099999985908, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00017423300000007913, "outcome": "passed"}, "call": {"duration": 0.0004182479999998989, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'hell w' == 'hell world'\n  \n  - hell world\n  ?       ----\n  + hell w"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"hello world\", \"o\") == \"hell world\"\nE       AssertionError: assert 'hell w' == 'hell world'\nE         \nE         - hell world\nE         ?       ----\nE         + hell w\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00017877400000010368, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016318399999981636, "outcome": "passed"}, "call": {"duration": 0.00015430900000001913, "outcome": "passed"}, "teardown": {"duration": 0.00013511200000060342, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015448200000012235, "outcome": "passed"}, "call": {"duration": 0.00014337300000022424, "outcome": "passed"}, "teardown": {"duration": 0.00013949700000015497, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001536639999999423, "outcome": "passed"}, "call": {"duration": 0.0003448309999996013, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017599800000045462, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_handles_single_character_string", "run.py", "test", ""], "setup": {"duration": 0.00017035500000073256, "outcome": "passed"}, "call": {"duration": 0.0001523900000002243, "outcome": "passed"}, "teardown": {"duration": 0.00013646199999950426, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_characters", "run.py", "test", ""], "setup": {"duration": 0.00016251300000025282, "outcome": "passed"}, "call": {"duration": 0.00034704300000054644, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_characters():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0001731559999997856, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_case_sensitivity", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_case_sensitivity", "run.py", "test", ""], "setup": {"duration": 0.0001694869999999682, "outcome": "passed"}, "call": {"duration": 0.00035507199999962324, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'HeloWor' == 'HeoWorld'\n  \n  - HeoWorld\n  ?       --\n  + HeloWor\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_case_sensitivity():\n>       assert remove_Occ(\"HelloWorld\", \"l\") == \"HeoWorld\"\nE       AssertionError: assert 'HeloWor' == 'HeoWorld'\nE         \nE         - HeoWorld\nE         ?       --\nE         + HeloWor\nE         ?   +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017941900000018052, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00018455699999986308, "outcome": "passed"}, "call": {"duration": 0.0003391109999997255, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert '!#hello' == '!#hello#$'\n  \n  - !#hello#$\n  ?        --\n  + !#hello"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_special_characters():\n>       assert remove_Occ(\"!@#hello@#$\", \"@\") == \"!#hello#$\"\nE       AssertionError: assert '!#hello' == '!#hello#$'\nE         \nE         - !#hello#$\nE         ?        --\nE         + !#hello\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.000207037000000021, "outcome": "passed"}}]}, {"created": 1733296043.9654996, "duration": 0.05861306190490723, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 4, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_single_character", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_leading_occurrence", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_trailing_occurrence", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_case_sensitive", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00037669499999992695, "outcome": "passed"}, "call": {"duration": 0.0004592279999995341, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00022047499999988673, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019274699999982658, "outcome": "passed"}, "call": {"duration": 0.0003937769999993179, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00019050100000050918, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00018531299999935413, "outcome": "passed"}, "call": {"duration": 0.00031518699999999455, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'a' == 'aple'\n  \n  - aple\n  + a"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"apple\", \"p\") == \"aple\"\nE       AssertionError: assert 'a' == 'aple'\nE         \nE         - aple\nE         + a\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00018473400000029727, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017455200000071613, "outcome": "passed"}, "call": {"duration": 0.0001761220000000563, "outcome": "passed"}, "teardown": {"duration": 0.00014957700000017837, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001593420000007839, "outcome": "passed"}, "call": {"duration": 0.00015121400000062124, "outcome": "passed"}, "teardown": {"duration": 0.00014369900000055225, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_character", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_single_character", "run.py", "test", ""], "setup": {"duration": 0.00015696599999959204, "outcome": "passed"}, "call": {"duration": 0.00014546299999995682, "outcome": "passed"}, "teardown": {"duration": 0.00013035999999999603, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016640900000020054, "outcome": "passed"}, "call": {"duration": 0.00035473800000040967, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00019355299999990194, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_leading_occurrence", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_leading_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001741609999994509, "outcome": "passed"}, "call": {"duration": 0.00015603699999999776, "outcome": "passed"}, "teardown": {"duration": 0.00014555599999965807, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_trailing_occurrence", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_trailing_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001673120000003081, "outcome": "passed"}, "call": {"duration": 0.0003374379999998567, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_trailing_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.0001961120000002481, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_sensitive", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_case_sensitive", "run.py", "test", ""], "setup": {"duration": 0.00017679399999970258, "outcome": "passed"}, "call": {"duration": 0.0003441420000003248, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'Bnan' == 'Bnanan'\n  \n  - Bnanan\n  ?     --\n  + Bnan"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_case_sensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnanan\"\nE       AssertionError: assert 'Bnan' == 'Bnanan'\nE         \nE         - Bnanan\nE         ?     --\nE         + Bnan\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.0002130839999994194, "outcome": "passed"}}]}, {"created": 1733296044.9676995, "duration": 0.05064058303833008, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 4, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_single_character", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_multiple_same_characters", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0004264909999998068, "outcome": "passed"}, "call": {"duration": 0.0005092909999993012, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00024992699999959456, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019343100000046576, "outcome": "passed"}, "call": {"duration": 0.0001867310000003286, "outcome": "passed"}, "teardown": {"duration": 0.00013931699999947256, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00016108899999967008, "outcome": "passed"}, "call": {"duration": 0.00038308500000017176, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00017877099999985546, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016891000000018863, "outcome": "passed"}, "call": {"duration": 0.0001512720000000911, "outcome": "passed"}, "teardown": {"duration": 0.000135414000000722, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015467299999993855, "outcome": "passed"}, "call": {"duration": 0.00014417299999980315, "outcome": "passed"}, "teardown": {"duration": 0.00012925800000029852, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_character", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_single_character", "run.py", "test", ""], "setup": {"duration": 0.00015415900000004257, "outcome": "passed"}, "call": {"duration": 0.00014349499999966042, "outcome": "passed"}, "teardown": {"duration": 0.00012656399999944057, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016189299999957996, "outcome": "passed"}, "call": {"duration": 0.00034585399999986777, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00018502100000006294, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_same_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_same_characters", "run.py", "test", ""], "setup": {"duration": 0.0001677669999997633, "outcome": "passed"}, "call": {"duration": 0.00029306600000023053, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'aa' == ''\n  \n  + aa"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_same_characters():\n>       assert remove_Occ(\"aaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aa' == ''\nE         \nE         + aa\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0002007870000007017, "outcome": "passed"}}]}, {"created": 1733296043.0525627, "duration": 0.056871891021728516, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 3, "failed": 7, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_case_insensitive", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_repeated_chars", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_char_same", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0002990390000001675, "outcome": "passed"}, "call": {"duration": 0.00018746499999977573, "outcome": "passed"}, "teardown": {"duration": 0.00015262000000015874, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00019101099999963012, "outcome": "passed"}, "call": {"duration": 0.0001595629999999737, "outcome": "passed"}, "teardown": {"duration": 0.00013005799999987744, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001486899999996183, "outcome": "passed"}, "call": {"duration": 0.0003563170000000504, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00018317799999989504, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_with_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018363899999984667, "outcome": "passed"}, "call": {"duration": 0.00037320500000026513, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'baa' == 'banba'\n  \n  - banba\n  ?   --\n  + baa"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_last_occurrence():\n>       assert remove_Occ(\"banana\", \"n\") == \"banba\"\nE       AssertionError: assert 'baa' == 'banba'\nE         \nE         - banba\nE         ?   --\nE         + baa\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017592500000018774, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001691589999999188, "outcome": "passed"}, "call": {"duration": 0.0003446610000001904, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00017380600000027613, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_case_insensitive", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_with_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00016841500000008836, "outcome": "passed"}, "call": {"duration": 0.0003365349999997491, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'Bnan' == 'Bnana'\n  \n  - Bnana\n  ?     -\n  + Bnan"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_case_insensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnana\"\nE       AssertionError: assert 'Bnan' == 'Bnana'\nE         \nE         - Bnana\nE         ?     -\nE         + Bnan\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.0001762450000000193, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.000171200000000038, "outcome": "passed"}, "call": {"duration": 0.00032410800000004514, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'bn' == 'b@nna'\n  \n  - b@nna\n  + bn"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"b@n@na\", \"@\") == \"b@nna\"\nE       AssertionError: assert 'bn' == 'b@nna'\nE         \nE         - b@nna\nE         + bn\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017859100000006123, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_with_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00018230099999971827, "outcome": "passed"}, "call": {"duration": 0.00015284400000004084, "outcome": "passed"}, "teardown": {"duration": 0.0001316430000000146, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_chars", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_chars", "run.py", "test", ""], "setup": {"duration": 0.0001524400000003645, "outcome": "passed"}, "call": {"duration": 0.00029663199999996337, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'aa' == 'aaacc'\n  \n  - aaacc\n  + aa"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_chars():\n>       assert remove_Occ(\"aabbcc\", \"b\") == \"aaacc\"\nE       AssertionError: assert 'aa' == 'aaacc'\nE         \nE         - aaacc\nE         + aa\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017437999999980747, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_char_same", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_char_same", "run.py", "test", ""], "setup": {"duration": 0.00017021800000005527, "outcome": "passed"}, "call": {"duration": 0.00032843599999976547, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'bacab' == 'baca'\n  \n  - baca\n  + bacab\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_char_same():\n>       assert remove_Occ(\"abacaba\", \"a\") == \"baca\"\nE       AssertionError: assert 'bacab' == 'baca'\nE         \nE         - baca\nE         + bacab\nE         ?     +\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.0002129590000001791, "outcome": "passed"}}]}, {"created": 1733296043.5840166, "duration": 0.06439614295959473, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 4, "failed": 8, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_both_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_multiple_same_char", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_only_one_char", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_Occ_with_numeric_string", "type": "Function", "lineno": 36}, {"nodeid": "run.py::test_remove_Occ_with_multiple_same_chars_at_end", "type": "Function", "lineno": 39}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0003925050000002095, "outcome": "passed"}, "call": {"duration": 0.00018009000000018816, "outcome": "passed"}, "teardown": {"duration": 0.0001552519999998836, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016681700000020783, "outcome": "passed"}, "call": {"duration": 0.00014583499999965, "outcome": "passed"}, "teardown": {"duration": 0.00013595199999993923, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001556250000001036, "outcome": "passed"}, "call": {"duration": 0.0003951570000002569, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00019688499999981346, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_with_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018119799999993802, "outcome": "passed"}, "call": {"duration": 0.0003746949999996474, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'baa' == 'banba'\n  \n  - banba\n  ?   --\n  + baa"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_last_occurrence():\n>       assert remove_Occ(\"banana\", \"n\") == \"banba\"\nE       AssertionError: assert 'baa' == 'banba'\nE         \nE         - banba\nE         ?   --\nE         + baa\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00019838800000027135, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_both_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_both_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017580299999986337, "outcome": "passed"}, "call": {"duration": 0.0004318060000003676, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bracadabr' == 'brcdbr'\n  \n  - brcdbr\n  + bracadabr\n  ?   + + +"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_both_occurrences():\n>       assert remove_Occ(\"abracadabra\", \"a\") == \"brcdbr\"\nE       AssertionError: assert 'bracadabr' == 'brcdbr'\nE         \nE         - brcdbr\nE         + bracadabr\nE         ?   + + +\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00018766100000000563, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_same_char", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_same_char", "run.py", "test", ""], "setup": {"duration": 0.0001731280000001334, "outcome": "passed"}, "call": {"duration": 0.00034165400000008006, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_same_char():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.0001820679999999797, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00017431600000028524, "outcome": "passed"}, "call": {"duration": 0.0003381909999999877, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'eve' == 'levl'\n  \n  - levl\n  + eve"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_same_char():\n>       assert remove_Occ(\"level\", \"l\") == \"levl\"\nE       AssertionError: assert 'eve' == 'levl'\nE         \nE         - levl\nE         + eve\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.0001956139999998996, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_only_one_char", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_only_one_char", "run.py", "test", ""], "setup": {"duration": 0.00017608600000018626, "outcome": "passed"}, "call": {"duration": 0.0002915269999999026, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'aaa' == ''\n  \n  + aaa"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_only_one_char():\n>       assert remove_Occ(\"aaaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aaa' == ''\nE         \nE         + aaa\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00018097400000005592, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00017375200000024904, "outcome": "passed"}, "call": {"duration": 0.00015455700000011063, "outcome": "passed"}, "teardown": {"duration": 0.00013847999999994087, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016612599999987765, "outcome": "passed"}, "call": {"duration": 0.0003327340000001122, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert '!#$%a' == '!#$%a#'\n  \n  - !#$%a#\n  ?      -\n  + !#$%a"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"!@#$%a@#\", \"@\") == \"!#$%a#\"\nE       AssertionError: assert '!#$%a' == '!#$%a#'\nE         \nE         - !#$%a#\nE         ?      -\nE         + !#$%a\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00017846599999993273, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_numeric_string", "lineno": 36, "outcome": "passed", "keywords": ["test_remove_Occ_with_numeric_string", "run.py", "test", ""], "setup": {"duration": 0.00019837599999972255, "outcome": "passed"}, "call": {"duration": 0.0001591100000002399, "outcome": "passed"}, "teardown": {"duration": 0.00018630999999968978, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_same_chars_at_end", "lineno": 39, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_same_chars_at_end", "run.py", "test", ""], "setup": {"duration": 0.00016440599999967276, "outcome": "passed"}, "call": {"duration": 0.0003626099999998189, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 41, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 41, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_same_chars_at_end():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:41: AssertionError"}, "teardown": {"duration": 0.0002124609999998306, "outcome": "passed"}}]}, {"created": 1733296043.241968, "duration": 0.0525813102722168, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 6, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_case_insensitive", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_consecutive_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002899670000000576, "outcome": "passed"}, "call": {"duration": 0.0003588649999999305, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heloo'\n  \n  - heloo\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\nE       AssertionError: assert 'he' == 'heloo'\nE         \nE         - heloo\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.000199819000000101, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017989599999967965, "outcome": "passed"}, "call": {"duration": 0.00017036599999986635, "outcome": "passed"}, "teardown": {"duration": 0.00014821299999967508, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_returns_original_string_if_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.0001671839999999314, "outcome": "passed"}, "call": {"duration": 0.0001494550000002981, "outcome": "passed"}, "teardown": {"duration": 0.00013067200000005386, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016514000000000806, "outcome": "passed"}, "call": {"duration": 0.00014160899999993148, "outcome": "passed"}, "teardown": {"duration": 0.00012868499999996175, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_single_character_string", "run.py", "test", ""], "setup": {"duration": 0.00014608899999979386, "outcome": "passed"}, "call": {"duration": 0.00015835100000005653, "outcome": "passed"}, "teardown": {"duration": 0.00012929699999997268, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00014678200000028951, "outcome": "passed"}, "call": {"duration": 0.0003450720000000018, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017315499999970285, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrences", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001650559999997192, "outcome": "passed"}, "call": {"duration": 0.00016628000000018517, "outcome": "passed"}, "teardown": {"duration": 0.0001344910000002919, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_case_insensitive", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_handles_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.0001522650000000958, "outcome": "passed"}, "call": {"duration": 0.0003191000000000166, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'He' == 'Heo'\n  \n  - Heo\n  ?   -\n  + He"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_case_insensitive():\n>       assert remove_Occ(\"Hello\", \"l\") == \"Heo\"\nE       AssertionError: assert 'He' == 'Heo'\nE         \nE         - Heo\nE         ?   -\nE         + He\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017241000000023377, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00018904200000013915, "outcome": "passed"}, "call": {"duration": 0.00017516100000003476, "outcome": "passed"}, "teardown": {"duration": 0.00013247900000035173, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_consecutive_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_handles_consecutive_characters", "run.py", "test", ""], "setup": {"duration": 0.000169209000000059, "outcome": "passed"}, "call": {"duration": 0.00035059600000009183, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'bookkep' == 'bookkeepr'\n  \n  - bookkeepr\n  ?       - -\n  + bookkep"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_consecutive_characters():\n>       assert remove_Occ(\"bookkeeper\", \"e\") == \"bookkeepr\"\nE       AssertionError: assert 'bookkep' == 'bookkeepr'\nE         \nE         - bookkeepr\nE         ?       - -\nE         + bookkep\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.0001974099999997314, "outcome": "passed"}}]}, {"created": 1733296043.7217739, "duration": 0.06358528137207031, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 4, "failed": 4, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_no_char", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_first_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_last_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_both_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_no_char", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_char", "run.py", "test", ""], "setup": {"duration": 0.00034672399999990944, "outcome": "passed"}, "call": {"duration": 0.00021513700000053149, "outcome": "passed"}, "teardown": {"duration": 0.00019871900000012488, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_first_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00022630600000006496, "outcome": "passed"}, "call": {"duration": 0.0005447160000002782, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00032035500000038297, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_last_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002617499999999495, "outcome": "passed"}, "call": {"duration": 0.0005620689999998874, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'baa' == 'banba'\n  \n  - banba\n  ?   --\n  + baa"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_last_occurrence():\n>       assert remove_Occ(\"banana\", \"n\") == \"banba\"\nE       AssertionError: assert 'baa' == 'banba'\nE         \nE         - banba\nE         ?   --\nE         + baa\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00021076800000052742, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_both_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_both_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00022192399999987344, "outcome": "passed"}, "call": {"duration": 0.0003996410000004502, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'hara' == 'harater'\n  \n  - harater\n  + hara"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_both_occurrences():\n>       assert remove_Occ(\"character\", \"c\") == \"harater\"\nE       AssertionError: assert 'hara' == 'harater'\nE         \nE         - harater\nE         + hara\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.000206290999999581, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00021174800000078875, "outcome": "passed"}, "call": {"duration": 0.00019730800000061777, "outcome": "passed"}, "teardown": {"duration": 0.0001775170000000159, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00020366099999957754, "outcome": "passed"}, "call": {"duration": 0.00041669900000051996, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00020520800000056738, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.0002201370000003422, "outcome": "passed"}, "call": {"duration": 0.00019585399999932918, "outcome": "passed"}, "teardown": {"duration": 0.00017443299999975181, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00020513800000010463, "outcome": "passed"}, "call": {"duration": 0.0001913300000007112, "outcome": "passed"}, "teardown": {"duration": 0.0002165740000004135, "outcome": "passed"}}]}, {"created": 1733296045.2542276, "duration": 0.06375551223754883, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 2, "failed": 8, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_case_insensitive", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_multiple_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_special_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00030739299999993364, "outcome": "passed"}, "call": {"duration": 0.0002441239999999567, "outcome": "passed"}, "teardown": {"duration": 0.0004797060000001352, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002406929999994034, "outcome": "passed"}, "call": {"duration": 0.00018233400000067235, "outcome": "passed"}, "teardown": {"duration": 0.00014555599999965807, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001601770000005942, "outcome": "passed"}, "call": {"duration": 0.00046196599999959176, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.0003288480000005478, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_with_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00022039499999948475, "outcome": "passed"}, "call": {"duration": 0.00048202199999991535, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'baa' == 'banba'\n  \n  - banba\n  ?   --\n  + baa"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_last_occurrence():\n>       assert remove_Occ(\"banana\", \"n\") == \"banba\"\nE       AssertionError: assert 'baa' == 'banba'\nE         \nE         - banba\nE         ?   --\nE         + baa\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.0001948309999999509, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00019284500000082971, "outcome": "passed"}, "call": {"duration": 0.0003858489999997161, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00018256300000007997, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_case_insensitive", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_with_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00017688699999940383, "outcome": "passed"}, "call": {"duration": 0.0003675560000004907, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'Bnan' == 'Bnana'\n  \n  - Bnana\n  ?     -\n  + Bnan"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_case_insensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnana\"\nE       AssertionError: assert 'Bnan' == 'Bnana'\nE         \nE         - Bnana\nE         ?     -\nE         + Bnan\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.0001739089999999166, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017888100000007512, "outcome": "passed"}, "call": {"duration": 0.0003641320000005166, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'helloworld' == 'hello@worl'\n  \n  - hello@worl\n  ?      -\n  + helloworld\n  ?          +"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"hello@world\", \"@\") == \"hello@worl\"\nE       AssertionError: assert 'helloworld' == 'hello@worl'\nE         \nE         - hello@worl\nE         ?      -\nE         + helloworld\nE         ?          +\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00020844199999991986, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017962399999937873, "outcome": "passed"}, "call": {"duration": 0.0003362679999998619, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'hello' == 'hello@worl'\n  \n  - hello@worl\n  + hello"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_special_characters():\n>       assert remove_Occ(\"hello@@world\", \"@\") == \"hello@worl\"\nE       AssertionError: assert 'hello' == 'hello@worl'\nE         \nE         - hello@worl\nE         + hello\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0001718280000000405, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017990499999953613, "outcome": "passed"}, "call": {"duration": 0.0003421049999996484, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'hello@' == 'hello@worl'\n  \n  - hello@worl\n  ?       ----\n  + hello@"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_special_characters():\n>       assert remove_Occ(\"hello@@@world\", \"@\") == \"hello@worl\"\nE       AssertionError: assert 'hello@' == 'hello@worl'\nE         \nE         - hello@worl\nE         ?       ----\nE         + hello@\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017787099999999612, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_special_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017100600000041766, "outcome": "passed"}, "call": {"duration": 0.00034192499999985415, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'hello@world' == 'hello@worl'\n  \n  - hello@worl\n  + hello@world\n  ?           +"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_special_characters():\n>       assert remove_Occ(\"@hello@world@\", \"@\") == \"hello@worl\"\nE       AssertionError: assert 'hello@world' == 'hello@worl'\nE         \nE         - hello@worl\nE         + hello@world\nE         ?           +\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00021632799999959929, "outcome": "passed"}}]}, {"created": 1733296043.3327558, "duration": 0.04091930389404297, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 1, "passed": 4, "total": 5, "collected": 5}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test1", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test2", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test3", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test4", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test5", "type": "Function", "lineno": 18}]}], "tests": [{"nodeid": "run.py::test1", "lineno": 6, "outcome": "failed", "keywords": ["test1", "run.py", "test", ""], "setup": {"duration": 0.00029059299999989463, "outcome": "passed"}, "call": {"duration": 0.0004233400000002163, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test1():\n>       assert remove_Occ(\"hello\",\"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0001950669999999377, "outcome": "passed"}}, {"nodeid": "run.py::test2", "lineno": 9, "outcome": "passed", "keywords": ["test2", "run.py", "test", ""], "setup": {"duration": 0.00017395999999969547, "outcome": "passed"}, "call": {"duration": 0.00017741399999948726, "outcome": "passed"}, "teardown": {"duration": 0.00014174300000036055, "outcome": "passed"}}, {"nodeid": "run.py::test3", "lineno": 12, "outcome": "passed", "keywords": ["test3", "run.py", "test", ""], "setup": {"duration": 0.00015670199999995305, "outcome": "passed"}, "call": {"duration": 0.00015267199999957626, "outcome": "passed"}, "teardown": {"duration": 0.00014139600000007135, "outcome": "passed"}}, {"nodeid": "run.py::test4", "lineno": 15, "outcome": "passed", "keywords": ["test4", "run.py", "test", ""], "setup": {"duration": 0.0001523429999998882, "outcome": "passed"}, "call": {"duration": 0.00014042600000063743, "outcome": "passed"}, "teardown": {"duration": 0.00012671500000038805, "outcome": "passed"}}, {"nodeid": "run.py::test5", "lineno": 18, "outcome": "passed", "keywords": ["test5", "run.py", "test", ""], "setup": {"duration": 0.00014888300000048815, "outcome": "passed"}, "call": {"duration": 0.0001387900000002773, "outcome": "passed"}, "teardown": {"duration": 0.0001702240000005517, "outcome": "passed"}}]}, {"created": 1733296044.4250994, "duration": 0.05582451820373535, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 8, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_char_at_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_char_at_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_case_sensitive", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_special_chars", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_multiple_special_chars", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_whole_string", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_Occ_empty_string_input", "type": "Function", "lineno": 36}, {"nodeid": "run.py::test_remove_Occ_string_with_no_removal", "type": "Function", "lineno": 39}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.0008559779999997019, "outcome": "passed"}, "call": {"duration": 0.0004058620000000346, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_single_char():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020912600000055903, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00017823099999958458, "outcome": "passed"}, "call": {"duration": 0.0001584990000003117, "outcome": "passed"}, "teardown": {"duration": 0.00013250800000008667, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015386399999961498, "outcome": "passed"}, "call": {"duration": 0.00014208199999998783, "outcome": "passed"}, "teardown": {"duration": 0.00012717399999928602, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015510100000071247, "outcome": "passed"}, "call": {"duration": 0.00014012799999996162, "outcome": "passed"}, "teardown": {"duration": 0.00012465799999983318, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_at_start", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00014899600000006785, "outcome": "passed"}, "call": {"duration": 0.0001497710000002428, "outcome": "passed"}, "teardown": {"duration": 0.00012700100000007097, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_at_end", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00015178200000054431, "outcome": "passed"}, "call": {"duration": 0.00014275199999946864, "outcome": "passed"}, "teardown": {"duration": 0.00013547799999980015, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_sensitive", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_case_sensitive", "run.py", "test", ""], "setup": {"duration": 0.00014810899999950777, "outcome": "passed"}, "call": {"duration": 0.00035088599999966164, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'He' == 'Heo'\n  \n  - Heo\n  ?   -\n  + He"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_case_sensitive():\n>       assert remove_Occ(\"Hello\", \"l\") == \"Heo\"\nE       AssertionError: assert 'He' == 'Heo'\nE         \nE         - Heo\nE         ?   -\nE         + He\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017855599999982985, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_special_chars", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_special_chars", "run.py", "test", ""], "setup": {"duration": 0.0001684869999998284, "outcome": "passed"}, "call": {"duration": 0.0003467280000002404, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '!#hello' == '!#hello#$'\n  \n  - !#hello#$\n  ?        --\n  + !#hello"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_special_chars():\n>       assert remove_Occ(\"!@#hello@#$\", \"@\") == \"!#hello#$\"\nE       AssertionError: assert '!#hello' == '!#hello#$'\nE         \nE         - !#hello#$\nE         ?        --\nE         + !#hello\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00016654199999965869, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_special_chars", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_special_chars", "run.py", "test", ""], "setup": {"duration": 0.00016635800000042167, "outcome": "passed"}, "call": {"duration": 0.0003260059999998788, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert '!hello!' == 'hello!!'\n  \n  - hello!!\n  ?       -\n  + !hello!\n  ? +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_special_chars():\n>       assert remove_Occ(\"!!hello!!\", \"!\") == \"hello!!\"\nE       AssertionError: assert '!hello!' == 'hello!!'\nE         \nE         - hello!!\nE         ?       -\nE         + !hello!\nE         ? +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00016968899999980636, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_whole_string", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_whole_string", "run.py", "test", ""], "setup": {"duration": 0.00016287700000017225, "outcome": "passed"}, "call": {"duration": 0.00015028700000030426, "outcome": "passed"}, "teardown": {"duration": 0.00013743500000007458, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string_input", "lineno": 36, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string_input", "run.py", "test", ""], "setup": {"duration": 0.00015633800000003362, "outcome": "passed"}, "call": {"duration": 0.00014097099999954565, "outcome": "passed"}, "teardown": {"duration": 0.0001272210000005103, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_string_with_no_removal", "lineno": 39, "outcome": "passed", "keywords": ["test_remove_Occ_string_with_no_removal", "run.py", "test", ""], "setup": {"duration": 0.0001515740000002097, "outcome": "passed"}, "call": {"duration": 0.00013884999999991265, "outcome": "passed"}, "teardown": {"duration": 0.000156123000000008, "outcome": "passed"}}]}, {"created": 1733296044.1695993, "duration": 0.05623936653137207, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 5, "failed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_single_character_from_start", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_middle", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_OCC_removes_single_character_from_end", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_start", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_middle", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_leaves_string_unchanged_if_no_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_single_character", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_multiple_same_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_single_character_from_start", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_removes_single_character_from_start", "run.py", "test", ""], "setup": {"duration": 0.00033919999999998396, "outcome": "passed"}, "call": {"duration": 0.00025605200000011763, "outcome": "passed"}, "teardown": {"duration": 0.0001551700000002043, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_middle", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_single_character_from_middle", "run.py", "test", ""], "setup": {"duration": 0.00016005500000026984, "outcome": "passed"}, "call": {"duration": 0.0004243820000002785, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_single_character_from_middle():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00018569599999995745, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_OCC_removes_single_character_from_end", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_OCC_removes_single_character_from_end", "run.py", "test", ""], "setup": {"duration": 0.00017269699999999943, "outcome": "passed"}, "call": {"duration": 0.00018328500000031056, "outcome": "passed"}, "teardown": {"duration": 0.0001367839999995013, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_start", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_start", "run.py", "test", ""], "setup": {"duration": 0.00015532000000018087, "outcome": "passed"}, "call": {"duration": 0.00032082099999986013, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'b' == 'bkkeeper'\n  \n  - bkkeeper\n  + b"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_start():\n>       assert remove_Occ(\"bookkeeper\", \"o\") == \"bkkeeper\"\nE       AssertionError: assert 'b' == 'bkkeeper'\nE         \nE         - bkkeeper\nE         + b\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00018748400000045962, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_middle", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_middle", "run.py", "test", ""], "setup": {"duration": 0.0001812939999998875, "outcome": "passed"}, "call": {"duration": 0.00037920499999977153, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_middle():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00018335999999941066, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_end", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_end", "run.py", "test", ""], "setup": {"duration": 0.0001785600000001608, "outcome": "passed"}, "call": {"duration": 0.0003657549999998011, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'chaacte' == 'chacter'\n  \n  - chacter\n  ?       -\n  + chaacte\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_end():\n>       assert remove_Occ(\"character\", \"r\") == \"chacter\"\nE       AssertionError: assert 'chaacte' == 'chacter'\nE         \nE         - chacter\nE         ?       -\nE         + chaacte\nE         ?   +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00018437300000062606, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_leaves_string_unchanged_if_no_occurrences", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_leaves_string_unchanged_if_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017196499999982962, "outcome": "passed"}, "call": {"duration": 0.0001536880000001517, "outcome": "passed"}, "teardown": {"duration": 0.000139416999999753, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015611199999998604, "outcome": "passed"}, "call": {"duration": 0.00014833600000052627, "outcome": "passed"}, "teardown": {"duration": 0.00014036700000019664, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_single_character", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_single_character", "run.py", "test", ""], "setup": {"duration": 0.00015582500000022037, "outcome": "passed"}, "call": {"duration": 0.00016205399999957848, "outcome": "passed"}, "teardown": {"duration": 0.00012774799999970554, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_multiple_same_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_handles_string_with_multiple_same_characters", "run.py", "test", ""], "setup": {"duration": 0.00016271799999945102, "outcome": "passed"}, "call": {"duration": 0.00027519800000064265, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'a' == ''\n  \n  + a"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_string_with_multiple_same_characters():\n>       assert remove_Occ(\"aaa\", \"a\") == \"\"\nE       AssertionError: assert 'a' == ''\nE         \nE         + a\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00023260499999988582, "outcome": "passed"}}]}, {"created": 1733296043.3325255, "duration": 0.0560300350189209, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 4, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence_from_left", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_first_occurrence_from_right", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_case_sensitive", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_string_without_target_character", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_removes_all_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_characters", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence_from_left", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence_from_left", "run.py", "test", ""], "setup": {"duration": 0.0003402129999998671, "outcome": "passed"}, "call": {"duration": 0.0005016430000002181, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence_from_left():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002600429999999321, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_first_occurrence_from_right", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence_from_right", "run.py", "test", ""], "setup": {"duration": 0.00022230599999994993, "outcome": "passed"}, "call": {"duration": 0.00019220100000039153, "outcome": "passed"}, "teardown": {"duration": 0.00013769899999971358, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_case_sensitive", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_case_sensitive", "run.py", "test", ""], "setup": {"duration": 0.00015987100000014465, "outcome": "passed"}, "call": {"duration": 0.0003790979999998001, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'HeLO' == 'HeLo'\n  \n  - HeLo\n  ?    ^\n  + HeLO\n  ?    ^"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_case_sensitive():\n>       assert remove_Occ(\"HeLlO\", \"l\") == \"HeLo\"\nE       AssertionError: assert 'HeLO' == 'HeLo'\nE         \nE         - HeLo\nE         ?    ^\nE         + HeLO\nE         ?    ^\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00017757499999992987, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016632900000024264, "outcome": "passed"}, "call": {"duration": 0.00015025099999999014, "outcome": "passed"}, "teardown": {"duration": 0.00014220499999995084, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_without_target_character", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_without_target_character", "run.py", "test", ""], "setup": {"duration": 0.00015312100000031137, "outcome": "passed"}, "call": {"duration": 0.00014285199999974907, "outcome": "passed"}, "teardown": {"duration": 0.000126779999999993, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_all_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_removes_all_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016110000000013613, "outcome": "passed"}, "call": {"duration": 0.0003365869999996107, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'bnan' == 'bnn'\n  \n  - bnn\n  + bnan\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_all_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnn\"\nE       AssertionError: assert 'bnan' == 'bnn'\nE         \nE         - bnn\nE         + bnan\nE         ?   +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00018329900000013666, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_characters", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_characters", "run.py", "test", ""], "setup": {"duration": 0.00016935600000023143, "outcome": "passed"}, "call": {"duration": 0.00034939099999986567, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'msssspp'\n  \n  - msssspp\n  + mssissipp\n  ?    +  +"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_characters():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"msssspp\"\nE       AssertionError: assert 'mssissipp' == 'msssspp'\nE         \nE         - msssspp\nE         + mssissipp\nE         ?    +  +\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.0001723780000002506, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_characters", "run.py", "test", ""], "setup": {"duration": 0.00016585699999982495, "outcome": "passed"}, "call": {"duration": 0.0003133809999997794, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'aaa' == ''\n  \n  + aaa"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_characters():\n>       assert remove_Occ(\"aaaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aaa' == ''\nE         \nE         + aaa\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017783799999993022, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0002146060000001171, "outcome": "passed"}, "call": {"duration": 0.00015621199999982238, "outcome": "passed"}, "teardown": {"duration": 0.00016811199999988702, "outcome": "passed"}}]}, {"created": 1733296043.167338, "duration": 0.057893991470336914, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 7, "failed": 5, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_single_character_from_start", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_end", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_middle", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_character_not_present", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_middle", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_target_character", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_no_target_character", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_multiple_target_characters", "type": "Function", "lineno": 36}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_target_character_at_end", "type": "Function", "lineno": 39}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_single_character_from_start", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_removes_single_character_from_start", "run.py", "test", ""], "setup": {"duration": 0.00038817899999976646, "outcome": "passed"}, "call": {"duration": 0.00017718999999960516, "outcome": "passed"}, "teardown": {"duration": 0.0001544519999994165, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_end", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_single_character_from_end", "run.py", "test", ""], "setup": {"duration": 0.00018387199999914117, "outcome": "passed"}, "call": {"duration": 0.00014849600000044205, "outcome": "passed"}, "teardown": {"duration": 0.000129944000000215, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_middle", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_removes_single_character_from_middle", "run.py", "test", ""], "setup": {"duration": 0.00016382300000028494, "outcome": "passed"}, "call": {"duration": 0.0003689729999996061, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'che' == 'chey'\n  \n  - chey\n  ?    -\n  + che"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_single_character_from_middle():\n>       assert remove_Occ(\"cherry\", \"r\") == \"chey\"\nE       AssertionError: assert 'che' == 'chey'\nE         \nE         - chey\nE         ?    -\nE         + che\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00018299000000077115, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_character_not_present", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_returns_original_string_if_character_not_present", "run.py", "test", ""], "setup": {"duration": 0.00017735000000040912, "outcome": "passed"}, "call": {"duration": 0.00015588100000041294, "outcome": "passed"}, "teardown": {"duration": 0.00013543399999971228, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_start", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_start", "run.py", "test", ""], "setup": {"duration": 0.00018583500000080022, "outcome": "passed"}, "call": {"duration": 0.0003522299999998424, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_start():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00017792800000027142, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_end", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_end", "run.py", "test", ""], "setup": {"duration": 0.00016929199999982103, "outcome": "passed"}, "call": {"duration": 0.0003558089999993186, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mississi' == 'missisi'\n  \n  - missisi\n  + mississi\n  ?       +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_end():\n>       assert remove_Occ(\"mississippi\", \"p\") == \"missisi\"\nE       AssertionError: assert 'mississi' == 'missisi'\nE         \nE         - missisi\nE         + mississi\nE         ?       +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017695900000003206, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_middle", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_middle", "run.py", "test", ""], "setup": {"duration": 0.00017218099999993797, "outcome": "passed"}, "call": {"duration": 0.0003112640000004774, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'misis' == 'miiippi'\n  \n  - miiippi\n  + misis"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_middle():\n>       assert remove_Occ(\"mississippi\", \"s\") == \"miiippi\"\nE       AssertionError: assert 'misis' == 'miiippi'\nE         \nE         - miiippi\nE         + misis\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.000178851999999452, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017006199999958227, "outcome": "passed"}, "call": {"duration": 0.0001496510000000839, "outcome": "passed"}, "teardown": {"duration": 0.0001428580000002455, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_target_character", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_string_with_only_target_character", "run.py", "test", ""], "setup": {"duration": 0.0001538739999995542, "outcome": "passed"}, "call": {"duration": 0.0002847169999995458, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'aa' == ''\n  \n  + aa"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_string_with_only_target_character():\n>       assert remove_Occ(\"aaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aa' == ''\nE         \nE         + aa\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017207900000038023, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_no_target_character", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_no_target_character", "run.py", "test", ""], "setup": {"duration": 0.00016734899999981678, "outcome": "passed"}, "call": {"duration": 0.00015334899999963625, "outcome": "passed"}, "teardown": {"duration": 0.0001368099999998762, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_multiple_target_characters", "lineno": 36, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_multiple_target_characters", "run.py", "test", ""], "setup": {"duration": 0.00015576299999953136, "outcome": "passed"}, "call": {"duration": 0.00015087400000002305, "outcome": "passed"}, "teardown": {"duration": 0.00012765700000016977, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_target_character_at_end", "lineno": 39, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_target_character_at_end", "run.py", "test", ""], "setup": {"duration": 0.00015521499999948674, "outcome": "passed"}, "call": {"duration": 0.0001399669999999631, "outcome": "passed"}, "teardown": {"duration": 0.00017123400000063072, "outcome": "passed"}}]}, {"created": 1733296042.9974248, "duration": 0.056026458740234375, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_single_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_first_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_single_character", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_special_characters", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_multiple_special_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_single_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_single_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003151259999998324, "outcome": "passed"}, "call": {"duration": 0.0005093759999996728, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_single_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002554830000001118, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00025714300000023727, "outcome": "passed"}, "call": {"duration": 0.00019016499999979786, "outcome": "passed"}, "teardown": {"duration": 0.00015209599999987944, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_first_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017286999999965857, "outcome": "passed"}, "call": {"duration": 0.00034157799999956495, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'a' == 'ale'\n  \n  - ale\n  + a"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_first_occurrence():\n>       assert remove_Occ(\"apple\", \"p\") == \"ale\"\nE       AssertionError: assert 'a' == 'ale'\nE         \nE         - ale\nE         + a\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00017605099999995488, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_last_occurrence", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001707849999998956, "outcome": "passed"}, "call": {"duration": 0.00017164899999988492, "outcome": "passed"}, "teardown": {"duration": 0.00013604199999983635, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015273799999970805, "outcome": "passed"}, "call": {"duration": 0.00014103100000006918, "outcome": "passed"}, "teardown": {"duration": 0.00013844099999982262, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00014988499999990523, "outcome": "passed"}, "call": {"duration": 0.00013886699999998697, "outcome": "passed"}, "teardown": {"duration": 0.00012585900000017247, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_character", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_single_character", "run.py", "test", ""], "setup": {"duration": 0.00015861299999997414, "outcome": "passed"}, "call": {"duration": 0.00013764599999976923, "outcome": "passed"}, "teardown": {"duration": 0.0001250950000000195, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.0001448349999999543, "outcome": "passed"}, "call": {"duration": 0.00035299600000016085, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'Apple' == 'ppl'\n  \n  - ppl\n  + Apple\n  ? +   +"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_case_insensitive():\n>       assert remove_Occ(\"Apple\", \"a\") == \"ppl\"\nE       AssertionError: assert 'Apple' == 'ppl'\nE         \nE         - ppl\nE         + Apple\nE         ? +   +\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017150300000023933, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017355600000001914, "outcome": "passed"}, "call": {"duration": 0.00034815699999990457, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'helloworld' == 'helloorld'\n  \n  - helloorld\n  + helloworld\n  ?      +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_special_characters():\n>       assert remove_Occ(\"hello@world\", \"@\") == \"helloorld\"\nE       AssertionError: assert 'helloworld' == 'helloorld'\nE         \nE         - helloorld\nE         + helloworld\nE         ?      +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.0001881250000002055, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_special_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001815769999997663, "outcome": "passed"}, "call": {"duration": 0.00033989099999987005, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'helloworld' == 'helloorldpython'\n  \n  - helloorldpython\n  + helloworld"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_special_characters():\n>       assert remove_Occ(\"hello@world@python\", \"@\") == \"helloorldpython\"\nE       AssertionError: assert 'helloworld' == 'helloorldpython'\nE         \nE         - helloorldpython\nE         + helloworld\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00021585299999982155, "outcome": "passed"}}]}, {"created": 1733296043.5868523, "duration": 0.05060911178588867, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 6, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_removes_first_and_last_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_keeps_only_middle_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_removes_first_and_last_of_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_single_character", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003526099999993093, "outcome": "passed"}, "call": {"duration": 0.0004981050000001375, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00021788000000011465, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018246499999996502, "outcome": "passed"}, "call": {"duration": 0.00016396699999976505, "outcome": "passed"}, "teardown": {"duration": 0.00014151700000031298, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_returns_original_string_if_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.0001550349999996925, "outcome": "passed"}, "call": {"duration": 0.00015458499999976283, "outcome": "passed"}, "teardown": {"duration": 0.00013249499999989922, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_first_and_last_occurrences", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_and_last_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016191500000051207, "outcome": "passed"}, "call": {"duration": 0.00014886099999955604, "outcome": "passed"}, "teardown": {"duration": 0.00014280500000030116, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_only_middle_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_only_middle_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001509339999996584, "outcome": "passed"}, "call": {"duration": 0.0003478530000000646, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'baa' == 'bana'\n  \n  - bana\n  ?   -\n  + baa"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_only_middle_occurrences():\n>       assert remove_Occ(\"banana\", \"n\") == \"bana\"\nE       AssertionError: assert 'baa' == 'bana'\nE         \nE         - bana\nE         ?   -\nE         + baa\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.0001773629999997084, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_first_and_last_of_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_and_last_of_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016908699999973464, "outcome": "passed"}, "call": {"duration": 0.00036531299999964517, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'mssisspp'\n  \n  - mssisspp\n  + mssissipp\n  ?       +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_and_last_of_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssisspp\"\nE       AssertionError: assert 'mssissipp' == 'mssisspp'\nE         \nE         - mssisspp\nE         + mssissipp\nE         ?       +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017041100000003695, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001662239999999926, "outcome": "passed"}, "call": {"duration": 0.0001519979999997645, "outcome": "passed"}, "teardown": {"duration": 0.000133828000000058, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_single_character_string", "run.py", "test", ""], "setup": {"duration": 0.00017177200000073611, "outcome": "passed"}, "call": {"duration": 0.00014839700000024436, "outcome": "passed"}, "teardown": {"duration": 0.00013305899999949133, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_single_character", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_single_character", "run.py", "test", ""], "setup": {"duration": 0.0001506769999997104, "outcome": "passed"}, "call": {"duration": 0.00015870599999967538, "outcome": "passed"}, "teardown": {"duration": 0.00017229500000048859, "outcome": "passed"}}]}, {"created": 1733296045.057787, "duration": 0.056932926177978516, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 6, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_is_first", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_is_last", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_replaced_segment_is_empty", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_single_char_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_replacement_char", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00034622899999980916, "outcome": "passed"}, "call": {"duration": 0.00045843599999972895, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002807740000001502, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00020854400000036577, "outcome": "passed"}, "call": {"duration": 0.00020261899999951538, "outcome": "passed"}, "teardown": {"duration": 0.00014282300000001413, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_string_unchanged_if_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00016242999999960261, "outcome": "passed"}, "call": {"duration": 0.00014731799999978534, "outcome": "passed"}, "teardown": {"duration": 0.00013326299999949498, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_is_first", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_string_unchanged_if_char_is_first", "run.py", "test", ""], "setup": {"duration": 0.0001528069999991999, "outcome": "passed"}, "call": {"duration": 0.00014132899999985682, "outcome": "passed"}, "teardown": {"duration": 0.00013388999999985884, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_is_last", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_string_unchanged_if_char_is_last", "run.py", "test", ""], "setup": {"duration": 0.00014792400000018802, "outcome": "passed"}, "call": {"duration": 0.0003851580000002741, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_string_unchanged_if_char_is_last():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00017992999999982828, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016818499999970982, "outcome": "passed"}, "call": {"duration": 0.0003614179999997802, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'mssisspp'\n  \n  - mssisspp\n  + mssissipp\n  ?       +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssisspp\"\nE       AssertionError: assert 'mssissipp' == 'mssisspp'\nE         \nE         - mssisspp\nE         + mssissipp\nE         ?       +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00016991499999985393, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_replaced_segment_is_empty", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_string_unchanged_if_replaced_segment_is_empty", "run.py", "test", ""], "setup": {"duration": 0.00016815000000036662, "outcome": "passed"}, "call": {"duration": 0.00015089700000014972, "outcome": "passed"}, "teardown": {"duration": 0.00013203999999955585, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.000171912999999968, "outcome": "passed"}, "call": {"duration": 0.00014603400000012812, "outcome": "passed"}, "teardown": {"duration": 0.00013202599999928566, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_char_string", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_handles_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00014815200000040107, "outcome": "passed"}, "call": {"duration": 0.0001439379999998991, "outcome": "passed"}, "teardown": {"duration": 0.0001285089999996103, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_replacement_char", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_handles_string_with_only_replacement_char", "run.py", "test", ""], "setup": {"duration": 0.00014636199999973343, "outcome": "passed"}, "call": {"duration": 0.00027844400000009983, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'aa' == ''\n  \n  + aa"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_string_with_only_replacement_char():\n>       assert remove_Occ(\"aaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aa' == ''\nE         \nE         + aa\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.0002074170000003761, "outcome": "passed"}}]}, {"created": 1733296044.4824333, "duration": 0.048923492431640625, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 4, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_in_string", "run.py", "test", ""], "setup": {"duration": 0.0002938660000006976, "outcome": "passed"}, "call": {"duration": 0.00044737500000024966, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_in_string():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020240100000012973, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00020653799999958977, "outcome": "passed"}, "call": {"duration": 0.00017120199999975938, "outcome": "passed"}, "teardown": {"duration": 0.00013730200000061643, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016347399999983026, "outcome": "passed"}, "call": {"duration": 0.00032957999999982945, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00017258699999977978, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.0001679470000004457, "outcome": "passed"}, "call": {"duration": 0.0003203479999998038, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'boo' == 'bookeeper'\n  \n  - bookeeper\n  + boo"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_same_char():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'boo' == 'bookeeper'\nE         \nE         - bookeeper\nE         + boo\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017447600000064512, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016734700000053948, "outcome": "passed"}, "call": {"duration": 0.0001510030000000384, "outcome": "passed"}, "teardown": {"duration": 0.00014474599999925175, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00015375899999980902, "outcome": "passed"}, "call": {"duration": 0.00014314500000001118, "outcome": "passed"}, "teardown": {"duration": 0.00012988400000057965, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00016047200000013362, "outcome": "passed"}, "call": {"duration": 0.00014468100000009088, "outcome": "passed"}, "teardown": {"duration": 0.00012855599999994638, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00014635500000004242, "outcome": "passed"}, "call": {"duration": 0.0003272619999998838, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'appl' == 'apppl'\n  \n  - apppl\n  ?    -\n  + appl"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_at_end():\n>       assert remove_Occ(\"apple\", \"e\") == \"apppl\"\nE       AssertionError: assert 'appl' == 'apppl'\nE         \nE         - apppl\nE         ?    -\nE         + appl\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00020185899999969337, "outcome": "passed"}}]}, {"created": 1733296044.4648917, "duration": 0.06770038604736328, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 4, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_multiple_chars", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_in_string", "run.py", "test", ""], "setup": {"duration": 0.00039086000000043697, "outcome": "passed"}, "call": {"duration": 0.0005907750000000433, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_in_string():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00025920700000003905, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.000251463999999757, "outcome": "passed"}, "call": {"duration": 0.00023309500000046057, "outcome": "passed"}, "teardown": {"duration": 0.00019117300000015547, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00021844800000003772, "outcome": "passed"}, "call": {"duration": 0.00043112000000000705, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00020374000000078496, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00021392000000020062, "outcome": "passed"}, "call": {"duration": 0.00019301299999963106, "outcome": "passed"}, "teardown": {"duration": 0.00017305399999933968, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00020469200000050591, "outcome": "passed"}, "call": {"duration": 0.000399135000000328, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'es' == 'tes'\n  \n  - tes\n  ? -\n  + es"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_at_end():\n>       assert remove_Occ(\"test\", \"t\") == \"tes\"\nE       AssertionError: assert 'es' == 'tes'\nE         \nE         - tes\nE         ? -\nE         + es\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00020159500000005437, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_chars", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00023848400000048287, "outcome": "passed"}, "call": {"duration": 0.0004080900000005272, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.0002026499999994158, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00020745399999988479, "outcome": "passed"}, "call": {"duration": 0.00019796499999991113, "outcome": "passed"}, "teardown": {"duration": 0.00017102000000068784, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00020532100000014708, "outcome": "passed"}, "call": {"duration": 0.00019499800000044587, "outcome": "passed"}, "teardown": {"duration": 0.00017133100000066293, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.000200449000000269, "outcome": "passed"}, "call": {"duration": 0.0003648209999997931, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'o' == 'op'\n  \n  - op\n  + o"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_same_char():\n>       assert remove_Occ(\"pop\", \"p\") == \"op\"\nE       AssertionError: assert 'o' == 'op'\nE         \nE         - op\nE         + o\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.0002591039999995104, "outcome": "passed"}}]}, {"created": 1733296045.6480424, "duration": 0.04929304122924805, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 5, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_string_without_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_char_at_end", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_char_at_start", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00031777299999991016, "outcome": "passed"}, "call": {"duration": 0.0004986669999995641, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00021660099999998295, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019107500000004052, "outcome": "passed"}, "call": {"duration": 0.00016220200000027774, "outcome": "passed"}, "teardown": {"duration": 0.00013842700000044061, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00016197299999998194, "outcome": "passed"}, "call": {"duration": 0.00014909700000043102, "outcome": "passed"}, "teardown": {"duration": 0.00013153100000007356, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017660000000052634, "outcome": "passed"}, "call": {"duration": 0.00015048199999956324, "outcome": "passed"}, "teardown": {"duration": 0.0001620620000002404, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_without_char", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_without_char", "run.py", "test", ""], "setup": {"duration": 0.0001577669999992537, "outcome": "passed"}, "call": {"duration": 0.00017270199999952496, "outcome": "passed"}, "teardown": {"duration": 0.00013407899999950956, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015156599999954778, "outcome": "passed"}, "call": {"duration": 0.00034999899999998973, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.0001723069999997051, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_char_at_end", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.0001756219999995423, "outcome": "passed"}, "call": {"duration": 0.0003093239999998332, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'boo' == 'bookeeper'\n  \n  - bookeeper\n  + boo"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_char_at_end():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'boo' == 'bookeeper'\nE         \nE         - bookeeper\nE         + boo\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017858200000020474, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_char_at_start", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_repeated_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00016914599999928726, "outcome": "passed"}, "call": {"duration": 0.0001527839999999614, "outcome": "passed"}, "teardown": {"duration": 0.00016806699999971642, "outcome": "passed"}}]}, {"created": 1733296043.5520751, "duration": 0.051480770111083984, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 4, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_single_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_multiple_special_characters", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_single_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_with_single_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00038920999999980666, "outcome": "passed"}, "call": {"duration": 0.0004884139999998816, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_single_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00019604299999986807, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00018275300000025752, "outcome": "passed"}, "call": {"duration": 0.0003868229999999251, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00017685000000033924, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001747299999999008, "outcome": "passed"}, "call": {"duration": 0.00015746700000018876, "outcome": "passed"}, "teardown": {"duration": 0.0001411070000001402, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00019421599999969175, "outcome": "passed"}, "call": {"duration": 0.0001522060000000991, "outcome": "passed"}, "teardown": {"duration": 0.00013578399999980562, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.0001531030000001543, "outcome": "passed"}, "call": {"duration": 0.00014653999999980627, "outcome": "passed"}, "teardown": {"duration": 0.00013085600000017905, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015134900000024487, "outcome": "passed"}, "call": {"duration": 0.00014150400000012553, "outcome": "passed"}, "teardown": {"duration": 0.00013265699999998048, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00014596699999991358, "outcome": "passed"}, "call": {"duration": 0.0003337619999999042, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert '!#hello' == '!#hello#'\n  \n  - !#hello#\n  ?        -\n  + !#hello"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"!@#hello@#\", \"@\") == \"!#hello#\"\nE       AssertionError: assert '!#hello' == '!#hello#'\nE         \nE         - !#hello#\nE         ?        -\nE         + !#hello\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.0001748409999997591, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017304600000001003, "outcome": "passed"}, "call": {"duration": 0.000308496000000158, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '!hello' == '!hello#world'\n  \n  - !hello#world\n  + !hello"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_special_characters():\n>       assert remove_Occ(\"!@#hello@#world\", \"@#\") == \"!hello#world\"\nE       AssertionError: assert '!hello' == '!hello#world'\nE         \nE         - !hello#world\nE         + !hello\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00019632799999991235, "outcome": "passed"}}]}, {"created": 1733296044.4777546, "duration": 0.047643423080444336, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 5, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_single_character", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002830090000003338, "outcome": "passed"}, "call": {"duration": 0.00044770500000002045, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00019169699999999068, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018671300000061564, "outcome": "passed"}, "call": {"duration": 0.00017157699999970077, "outcome": "passed"}, "teardown": {"duration": 0.00014080199999977339, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016846699999994996, "outcome": "passed"}, "call": {"duration": 0.00014659400000027745, "outcome": "passed"}, "teardown": {"duration": 0.00013164000000021048, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015540199999986015, "outcome": "passed"}, "call": {"duration": 0.0003385310000005859, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017582100000002043, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017492000000007835, "outcome": "passed"}, "call": {"duration": 0.00015139699999977552, "outcome": "passed"}, "teardown": {"duration": 0.00013393299999986397, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_character", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_single_character", "run.py", "test", ""], "setup": {"duration": 0.00017907899999958232, "outcome": "passed"}, "call": {"duration": 0.00017498900000045836, "outcome": "passed"}, "teardown": {"duration": 0.00013048799999992866, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.0001509079999992835, "outcome": "passed"}, "call": {"duration": 0.0001678990000000269, "outcome": "passed"}, "teardown": {"duration": 0.00013292000000042492, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00015066400000041114, "outcome": "passed"}, "call": {"duration": 0.0003569380000003619, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00020694499999951432, "outcome": "passed"}}]}, {"created": 1733296045.2550735, "duration": 0.06810784339904785, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 7, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_char_not_in_string", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_char_at_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_char_at_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_single_char_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_multiple_removals", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_case_insensitive", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00043829999999989155, "outcome": "passed"}, "call": {"duration": 0.0005568499999997201, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00026789999999987657, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002485500000002361, "outcome": "passed"}, "call": {"duration": 0.00020956000000005304, "outcome": "passed"}, "teardown": {"duration": 0.00024524999999986363, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_in_string", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00024622000000018573, "outcome": "passed"}, "call": {"duration": 0.000266990000000078, "outcome": "passed"}, "teardown": {"duration": 0.00021879999999985245, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.000265559999999887, "outcome": "passed"}, "call": {"duration": 0.00041746999999947576, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'ball' == 'balun'\n  \n  - balun\n  + ball"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"balloon\", \"o\") == \"balun\"\nE       AssertionError: assert 'ball' == 'balun'\nE         \nE         - balun\nE         + ball\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00029409999999963077, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_start", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.0002679900000002178, "outcome": "passed"}, "call": {"duration": 0.0002996199999998339, "outcome": "passed"}, "teardown": {"duration": 0.00026416000000040185, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_end", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00023963000000026824, "outcome": "passed"}, "call": {"duration": 0.0002288200000002405, "outcome": "passed"}, "teardown": {"duration": 0.000202400000000047, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 24, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00023946999999946428, "outcome": "passed"}, "call": {"duration": 0.00021095000000048714, "outcome": "passed"}, "teardown": {"duration": 0.00018403999999971887, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string", "lineno": 27, "outcome": "passed", "keywords": ["test_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.0002557000000003029, "outcome": "passed"}, "call": {"duration": 0.00018774000000032487, "outcome": "passed"}, "teardown": {"duration": 0.00016869999999968854, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_removals", "lineno": 30, "outcome": "passed", "keywords": ["test_multiple_removals", "run.py", "test", ""], "setup": {"duration": 0.0002269699999999375, "outcome": "passed"}, "call": {"duration": 0.00019431999999941496, "outcome": "passed"}, "teardown": {"duration": 0.00016771000000037617, "outcome": "passed"}}, {"nodeid": "run.py::test_case_insensitive", "lineno": 33, "outcome": "failed", "keywords": ["test_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.0002446200000001397, "outcome": "passed"}, "call": {"duration": 0.00034118000000038506, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'HellW' == 'HellWorld'\n  \n  - HellWorld\n  + HellW"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_case_insensitive():\n>       assert remove_Occ(\"HelloWorld\", \"o\") == \"HellWorld\"\nE       AssertionError: assert 'HellW' == 'HellWorld'\nE         \nE         - HellWorld\nE         + HellW\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00025809999999992783, "outcome": "passed"}}]}, {"created": 1733296043.7692678, "duration": 0.0493311882019043, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 4, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_single_char", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_char_at_start", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_char_at_end", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00028587200000007584, "outcome": "passed"}, "call": {"duration": 0.0005285100000000931, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00019694399999981016, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018220699999993428, "outcome": "passed"}, "call": {"duration": 0.0003683930000000224, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00019730999999989507, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017333499999994118, "outcome": "passed"}, "call": {"duration": 0.00016810399999966918, "outcome": "passed"}, "teardown": {"duration": 0.00013479400000004915, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char", "lineno": 15, "outcome": "passed", "keywords": ["test_single_char", "run.py", "test", ""], "setup": {"duration": 0.0001626489999999592, "outcome": "passed"}, "call": {"duration": 0.00014441900000017327, "outcome": "passed"}, "teardown": {"duration": 0.00013166299999989306, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00014975500000025121, "outcome": "passed"}, "call": {"duration": 0.0003654810000002229, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bnanaa' == 'banan'\n  \n  - banan\n  + bnanaa"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"bananaaa\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnanaa' == 'banan'\nE         \nE         - banan\nE         + bnanaa\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00017428700000010622, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017203199999960006, "outcome": "passed"}, "call": {"duration": 0.0001559790000000838, "outcome": "passed"}, "teardown": {"duration": 0.0001326029999999534, "outcome": "passed"}}, {"nodeid": "run.py::test_char_at_start", "lineno": 24, "outcome": "passed", "keywords": ["test_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00015466800000041303, "outcome": "passed"}, "call": {"duration": 0.0001438650000000763, "outcome": "passed"}, "teardown": {"duration": 0.00013024200000000263, "outcome": "passed"}}, {"nodeid": "run.py::test_char_at_end", "lineno": 27, "outcome": "failed", "keywords": ["test_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.000151988999999908, "outcome": "passed"}, "call": {"duration": 0.0003282599999998581, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'appl' == 'apppl'\n  \n  - apppl\n  ?    -\n  + appl"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_char_at_end():\n>       assert remove_Occ(\"apple\", \"e\") == \"apppl\"\nE       AssertionError: assert 'appl' == 'apppl'\nE         \nE         - apppl\nE         ?    -\nE         + appl\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0002049179999996653, "outcome": "passed"}}]}, {"created": 1733296044.4095516, "duration": 0.05633401870727539, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 4, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_single_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_no_replacements", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_in_middle", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_single_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_with_single_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003485589999998595, "outcome": "passed"}, "call": {"duration": 0.0005016280000003093, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'hel'\n  \n  - hel\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_single_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"hel\"\nE       AssertionError: assert 'he' == 'hel'\nE         \nE         - hel\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020833499999994842, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00018160000000033705, "outcome": "passed"}, "call": {"duration": 0.0003593799999999092, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00017653399999950636, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016582199999959357, "outcome": "passed"}, "call": {"duration": 0.00015695400000037552, "outcome": "passed"}, "teardown": {"duration": 0.00013496399999990416, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00015598999999966168, "outcome": "passed"}, "call": {"duration": 0.00015860099999986943, "outcome": "passed"}, "teardown": {"duration": 0.00013823399999957076, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00014960100000038778, "outcome": "passed"}, "call": {"duration": 0.00030626099999953027, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'es' == 'tes'\n  \n  - tes\n  ? -\n  + es"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_at_end():\n>       assert remove_Occ(\"test\", \"t\") == \"tes\"\nE       AssertionError: assert 'es' == 'tes'\nE         \nE         - tes\nE         ? -\nE         + es\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00018033000000006183, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017010899999991835, "outcome": "passed"}, "call": {"duration": 0.00015228899999986112, "outcome": "passed"}, "teardown": {"duration": 0.00014357800000031062, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_replacements", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_no_replacements", "run.py", "test", ""], "setup": {"duration": 0.00016048699999959837, "outcome": "passed"}, "call": {"duration": 0.0003258580000000677, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'ython' == 'python'\n  \n  - python\n  ? -\n  + ython"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_no_replacements():\n>       assert remove_Occ(\"python\", \"p\") == \"python\"\nE       AssertionError: assert 'ython' == 'python'\nE         \nE         - python\nE         ? -\nE         + ython\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017150800000020894, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.000179202999999184, "outcome": "passed"}, "call": {"duration": 0.00033386899999943154, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'boo' == 'bookeeper'\n  \n  - bookeeper\n  + boo"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_char_at_end():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'boo' == 'bookeeper'\nE         \nE         - bookeeper\nE         + boo\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017719899999946165, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_in_middle", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_in_middle", "run.py", "test", ""], "setup": {"duration": 0.00017186800000068558, "outcome": "passed"}, "call": {"duration": 0.00030104899999994217, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'hara' == 'haracter'\n  \n  - haracter\n  + hara"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_char_in_middle():\n>       assert remove_Occ(\"character\", \"c\") == \"haracter\"\nE       AssertionError: assert 'hara' == 'haracter'\nE         \nE         - haracter\nE         + hara\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00018482100000039026, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_with_repeated_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00016914199999984447, "outcome": "passed"}, "call": {"duration": 0.00015184299999937423, "outcome": "passed"}, "teardown": {"duration": 0.00016389099999969403, "outcome": "passed"}}]}, {"created": 1733296043.72236, "duration": 0.05789470672607422, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 4, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_char_from_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_char_from_single_char_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_char_from_string_with_only_target_char", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_char_from_string_with_multiple_same_chars", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_char_from_string_with_no_target_char", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003563010000000588, "outcome": "passed"}, "call": {"duration": 0.0004835410000003648, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00021951799999975208, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002062299999998629, "outcome": "passed"}, "call": {"duration": 0.0003841429999997814, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00018104300000043594, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017162299999995412, "outcome": "passed"}, "call": {"duration": 0.00036238700000001955, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00017537699999969902, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00017057000000075817, "outcome": "passed"}, "call": {"duration": 0.0001577509999997062, "outcome": "passed"}, "teardown": {"duration": 0.0001358969999998294, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00016949199999949371, "outcome": "passed"}, "call": {"duration": 0.00033985800000024824, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bacab' == 'bcb'\n  \n  - bcb\n  + bacab\n  ?  + +"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_same_char():\n>       assert remove_Occ(\"abacaba\", \"a\") == \"bcb\"\nE       AssertionError: assert 'bacab' == 'bcb'\nE         \nE         - bcb\nE         + bacab\nE         ?  + +\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00017951600000021273, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_char_from_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001680029999997501, "outcome": "passed"}, "call": {"duration": 0.00014968300000006707, "outcome": "passed"}, "teardown": {"duration": 0.00013051100000005533, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_single_char_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_char_from_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00016282299999925698, "outcome": "passed"}, "call": {"duration": 0.00014109600000011824, "outcome": "passed"}, "teardown": {"duration": 0.00012650000000036243, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_string_with_only_target_char", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_char_from_string_with_only_target_char", "run.py", "test", ""], "setup": {"duration": 0.00014640199999949033, "outcome": "passed"}, "call": {"duration": 0.00028634900000046315, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'aaa' == ''\n  \n  + aaa"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_char_from_string_with_only_target_char():\n>       assert remove_Occ(\"aaaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aaa' == ''\nE         \nE         + aaa\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017630500000009874, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_string_with_multiple_same_chars", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_char_from_string_with_multiple_same_chars", "run.py", "test", ""], "setup": {"duration": 0.0001767030000001668, "outcome": "passed"}, "call": {"duration": 0.00033514600000028594, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_char_from_string_with_multiple_same_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017208200000062845, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_string_with_no_target_char", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_char_from_string_with_no_target_char", "run.py", "test", ""], "setup": {"duration": 0.00016758899999924637, "outcome": "passed"}, "call": {"duration": 0.00015188099999985383, "outcome": "passed"}, "teardown": {"duration": 0.0001644279999997167, "outcome": "passed"}}]}, {"created": 1733296046.1977837, "duration": 0.051535606384277344, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 5, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_no_occurrence", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_empty_string", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_char_not_in_string", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_multiple_chars", "type": "Function", "lineno": 31}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003042480000008396, "outcome": "passed"}, "call": {"duration": 0.0004227229999997917, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'hello'\n  \n  - hello\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"hello\"\nE       AssertionError: assert 'he' == 'hello'\nE         \nE         - hello\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00019861899999895627, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001751589999994252, "outcome": "passed"}, "call": {"duration": 0.0001549259999986674, "outcome": "passed"}, "teardown": {"duration": 0.00014659600000044293, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001564999999992267, "outcome": "passed"}, "call": {"duration": 0.00030564800000121295, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'he' == 'hello'\n  \n  - hello\n  + he"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"hello\"\nE       AssertionError: assert 'he' == 'hello'\nE         \nE         - hello\nE         + he\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00016973199999981148, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_no_occurrence", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001676039999995993, "outcome": "passed"}, "call": {"duration": 0.00015011599999859015, "outcome": "passed"}, "teardown": {"duration": 0.00013472299999861548, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 19, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001590680000003175, "outcome": "passed"}, "call": {"duration": 0.0003314690000006948, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 21, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 21, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:21: AssertionError"}, "teardown": {"duration": 0.00017382600000104276, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00016712300000065738, "outcome": "passed"}, "call": {"duration": 0.00016270399999918084, "outcome": "passed"}, "teardown": {"duration": 0.00012859199999937232, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_empty_string", "lineno": 25, "outcome": "passed", "keywords": ["test_remove_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00014956299999902, "outcome": "passed"}, "call": {"duration": 0.00014081600000004357, "outcome": "passed"}, "teardown": {"duration": 0.00013697900000053664, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_in_string", "lineno": 28, "outcome": "passed", "keywords": ["test_remove_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.0001721420000002638, "outcome": "passed"}, "call": {"duration": 0.00014325900000144998, "outcome": "passed"}, "teardown": {"duration": 0.00012680699999911837, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_chars", "lineno": 31, "outcome": "failed", "keywords": ["test_remove_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00015165199999955803, "outcome": "passed"}, "call": {"duration": 0.0003318910000000841, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 33, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 33, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:33: AssertionError"}, "teardown": {"duration": 0.000207457000000133, "outcome": "passed"}}]}, {"created": 1733296045.0880094, "duration": 0.05738401412963867, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 7, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_keeps_case_sensitive", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_single_character", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_first_character", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_last_character", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_middle_character", "type": "Function", "lineno": 36}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_one_character", "type": "Function", "lineno": 39}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00035986500000007027, "outcome": "passed"}, "call": {"duration": 0.00039595400000003167, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00019284600000002428, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001850010000001845, "outcome": "passed"}, "call": {"duration": 0.00015923099999959334, "outcome": "passed"}, "teardown": {"duration": 0.00013553599999927002, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.0001601149999999052, "outcome": "passed"}, "call": {"duration": 0.00014902100000036, "outcome": "passed"}, "teardown": {"duration": 0.00012884400000068297, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_case_sensitive", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_case_sensitive", "run.py", "test", ""], "setup": {"duration": 0.00015861900000047058, "outcome": "passed"}, "call": {"duration": 0.00030965999999921223, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'HellW' == 'HellWorld'\n  \n  - HellWorld\n  + HellW"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_case_sensitive():\n>       assert remove_Occ(\"HelloWorld\", \"o\") == \"HellWorld\"\nE       AssertionError: assert 'HellW' == 'HellWorld'\nE         \nE         - HellWorld\nE         + HellW\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00018058700000000982, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017203200000004415, "outcome": "passed"}, "call": {"duration": 0.00015747299999979703, "outcome": "passed"}, "teardown": {"duration": 0.000134078000000315, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015403499999955272, "outcome": "passed"}, "call": {"duration": 0.00015395099999970796, "outcome": "passed"}, "teardown": {"duration": 0.0001302929999997815, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015063100000034524, "outcome": "passed"}, "call": {"duration": 0.0003388019999999159, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00018102200000047475, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_character", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_single_character", "run.py", "test", ""], "setup": {"duration": 0.00017167599999989847, "outcome": "passed"}, "call": {"duration": 0.00015921700000021133, "outcome": "passed"}, "teardown": {"duration": 0.0001339390000003604, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_first_character", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_first_character", "run.py", "test", ""], "setup": {"duration": 0.00015578599999965803, "outcome": "passed"}, "call": {"duration": 0.00031732500000014596, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'a' == 'aab'\n  \n  - aab\n  + a"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_first_character():\n>       assert remove_Occ(\"aaab\", \"a\") == \"aab\"\nE       AssertionError: assert 'a' == 'aab'\nE         \nE         - aab\nE         + a\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017482300000004614, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_last_character", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_handles_repeated_last_character", "run.py", "test", ""], "setup": {"duration": 0.0001757869999998718, "outcome": "passed"}, "call": {"duration": 0.00015662699999996477, "outcome": "passed"}, "teardown": {"duration": 0.00013454299999970942, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_middle_character", "lineno": 36, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_middle_character", "run.py", "test", ""], "setup": {"duration": 0.00016638499999999112, "outcome": "passed"}, "call": {"duration": 0.00029629900000038845, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 38, "message": "AssertionError: assert 'abba' == 'bb'\n  \n  - bb\n  + abba"}, "traceback": [{"path": "run.py", "lineno": 38, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_middle_character():\n>       assert remove_Occ(\"aabbaa\", \"a\") == \"bb\"\nE       AssertionError: assert 'abba' == 'bb'\nE         \nE         - bb\nE         + abba\n\nrun.py:38: AssertionError"}, "teardown": {"duration": 0.00018807300000034388, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_one_character", "lineno": 39, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_only_one_character", "run.py", "test", ""], "setup": {"duration": 0.0001728369999991486, "outcome": "passed"}, "call": {"duration": 0.00015404100000004917, "outcome": "passed"}, "teardown": {"duration": 0.00016241900000046883, "outcome": "passed"}}]}, {"created": 1733296043.8452096, "duration": 0.05298018455505371, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 4, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_case_insensitivity", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_special_characters", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002989539999997959, "outcome": "passed"}, "call": {"duration": 0.00046423999999944954, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00018840699999955746, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001895620000000875, "outcome": "passed"}, "call": {"duration": 0.00015582700000038585, "outcome": "passed"}, "teardown": {"duration": 0.00013397000000026082, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00015238899999925337, "outcome": "passed"}, "call": {"duration": 0.00035520899999941236, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'hell w' == 'hell world'\n  \n  - hell world\n  ?       ----\n  + hell w"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"hello world\", \"o\") == \"hell world\"\nE       AssertionError: assert 'hell w' == 'hell world'\nE         \nE         - hell world\nE         ?       ----\nE         + hell w\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00018056700000013137, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016847099999939275, "outcome": "passed"}, "call": {"duration": 0.00015177299999979965, "outcome": "passed"}, "teardown": {"duration": 0.00013199099999994246, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001627129999999255, "outcome": "passed"}, "call": {"duration": 0.00014684100000028621, "outcome": "passed"}, "teardown": {"duration": 0.0001362040000003617, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015028500000013878, "outcome": "passed"}, "call": {"duration": 0.0001450920000003464, "outcome": "passed"}, "teardown": {"duration": 0.00012605499999995828, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_case_insensitivity", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_handles_case_insensitivity", "run.py", "test", ""], "setup": {"duration": 0.00014642099999928604, "outcome": "passed"}, "call": {"duration": 0.0003441819999991935, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'Hell W' == 'Hell World'\n  \n  - Hell World\n  ?       ----\n  + Hell W"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_case_insensitivity():\n>       assert remove_Occ(\"Hello World\", \"o\") == \"Hell World\"\nE       AssertionError: assert 'Hell W' == 'Hell World'\nE         \nE         - Hell World\nE         ?       ----\nE         + Hell W\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.0001699539999995281, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017921500000017687, "outcome": "passed"}, "call": {"duration": 0.00034259300000005766, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '!#$hello' == '!$hello%'\n  \n  - !$hello%\n  ?        -\n  + !#$hello\n  ?  +"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_special_characters():\n>       assert remove_Occ(\"!@#$hello@#%\", \"@\") == \"!$hello%\"\nE       AssertionError: assert '!#$hello' == '!$hello%'\nE         \nE         - !$hello%\nE         ?        -\nE         + !#$hello\nE         ?  +\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00016620899999963967, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016534000000056892, "outcome": "passed"}, "call": {"duration": 0.00032673899999924316, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert '!hello!' == 'hello!!'\n  \n  - hello!!\n  ?       -\n  + !hello!\n  ? +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_special_characters():\n>       assert remove_Occ(\"!!hello!!\", \"!\") == \"hello!!\"\nE       AssertionError: assert '!hello!' == 'hello!!'\nE         \nE         - hello!!\nE         ?       -\nE         + !hello!\nE         ? +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00019994600000039497, "outcome": "passed"}}]}, {"created": 1733296046.0381277, "duration": 0.05630946159362793, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 6, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_returns_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_single_character", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_single_character_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_repeated_characters", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_Occ_with_same_char_first_and_last", "type": "Function", "lineno": 36}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003874669999994751, "outcome": "passed"}, "call": {"duration": 0.00039114699999931446, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'banna'\n  \n  - banna\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banna\"\nE       AssertionError: assert 'bnan' == 'banna'\nE         \nE         - banna\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00021864700000051585, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00020851600000071357, "outcome": "passed"}, "call": {"duration": 0.0003588190000005653, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00018102599999991753, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00017533699999994212, "outcome": "passed"}, "call": {"duration": 0.00015382099999960985, "outcome": "passed"}, "teardown": {"duration": 0.0001338300000002235, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_returns_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_returns_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016257899999949643, "outcome": "passed"}, "call": {"duration": 0.0001452430000004057, "outcome": "passed"}, "teardown": {"duration": 0.00012695999999934315, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001482350000001631, "outcome": "passed"}, "call": {"duration": 0.0003468149999994452, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.0001789020000000363, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00018403100000075057, "outcome": "passed"}, "call": {"duration": 0.000170989999999982, "outcome": "passed"}, "teardown": {"duration": 0.00013454700000004038, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015539199999992093, "outcome": "passed"}, "call": {"duration": 0.0001513500000003276, "outcome": "passed"}, "teardown": {"duration": 0.00013226499999952068, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_character", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_character", "run.py", "test", ""], "setup": {"duration": 0.00015263199999981936, "outcome": "passed"}, "call": {"duration": 0.00014062600000031011, "outcome": "passed"}, "teardown": {"duration": 0.00013095699999965404, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_character_string", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_character_string", "run.py", "test", ""], "setup": {"duration": 0.00014970800000035922, "outcome": "passed"}, "call": {"duration": 0.00013967599999986646, "outcome": "passed"}, "teardown": {"duration": 0.0001285380000002334, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_characters", "run.py", "test", ""], "setup": {"duration": 0.00015240299999952356, "outcome": "passed"}, "call": {"duration": 0.0002951040000001015, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'aaab' == 'aaaabbbccc'\n  \n  - aaaabbbccc\n  + aaab"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_characters():\n>       assert remove_Occ(\"aaabbbccc\", \"b\") == \"aaaabbbccc\"\nE       AssertionError: assert 'aaab' == 'aaaabbbccc'\nE         \nE         - aaaabbbccc\nE         + aaab\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00017322400000008287, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_same_char_first_and_last", "lineno": 36, "outcome": "failed", "keywords": ["test_remove_Occ_with_same_char_first_and_last", "run.py", "test", ""], "setup": {"duration": 0.0001740479999998712, "outcome": "passed"}, "call": {"duration": 0.000297309999999662, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 38, "message": "AssertionError: assert '' == 'a'\n  \n  - a"}, "traceback": [{"path": "run.py", "lineno": 38, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_same_char_first_and_last():\n>       assert remove_Occ(\"aa\", \"a\") == \"a\"\nE       AssertionError: assert '' == 'a'\nE         \nE         - a\n\nrun.py:38: AssertionError"}, "teardown": {"duration": 0.00019855100000043535, "outcome": "passed"}}]}, {"created": 1733296044.271728, "duration": 0.05543994903564453, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_case_sensitivity", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_numeric_string", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003251969999995552, "outcome": "passed"}, "call": {"duration": 0.00046001699999997925, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002029050000000865, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001959749999995708, "outcome": "passed"}, "call": {"duration": 0.00016182699999944816, "outcome": "passed"}, "teardown": {"duration": 0.00013612199999979424, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00015420599999949047, "outcome": "passed"}, "call": {"duration": 0.0003605900000005491, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'helo wor' == 'heo world'\n  \n  - heo world\n  ?        --\n  + helo wor\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"hello world\", \"l\") == \"heo world\"\nE       AssertionError: assert 'helo wor' == 'heo world'\nE         \nE         - heo world\nE         ?        --\nE         + helo wor\nE         ?   +\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.0001775049999999112, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016770499999996247, "outcome": "passed"}, "call": {"duration": 0.00015294200000059988, "outcome": "passed"}, "teardown": {"duration": 0.000143130999999741, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrences", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016318299999973362, "outcome": "passed"}, "call": {"duration": 0.00014751400000001524, "outcome": "passed"}, "teardown": {"duration": 0.00013268399999954994, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015682499999947197, "outcome": "passed"}, "call": {"duration": 0.00014415400000000744, "outcome": "passed"}, "teardown": {"duration": 0.00012814500000057905, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_characters", "run.py", "test", ""], "setup": {"duration": 0.00015004399999973828, "outcome": "passed"}, "call": {"duration": 0.0003332829999997955, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_characters():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017615099999979122, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_case_sensitivity", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_handles_case_sensitivity", "run.py", "test", ""], "setup": {"duration": 0.000171479000000474, "outcome": "passed"}, "call": {"duration": 0.0003425919999999749, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'Hell W' == 'Hell World'\n  \n  - Hell World\n  ?       ----\n  + Hell W"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_case_sensitivity():\n>       assert remove_Occ(\"Hello World\", \"o\") == \"Hell World\"\nE       AssertionError: assert 'Hell W' == 'Hell World'\nE         \nE         - Hell World\nE         ?       ----\nE         + Hell W\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0001706879999998634, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001646189999995329, "outcome": "passed"}, "call": {"duration": 0.00033864800000049655, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert '!#$hello' == '!#$hello#'\n  \n  - !#$hello#\n  ?         -\n  + !#$hello"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_special_characters():\n>       assert remove_Occ(\"!@#$hello@#\", \"@\") == \"!#$hello#\"\nE       AssertionError: assert '!#$hello' == '!#$hello#'\nE         \nE         - !#$hello#\nE         ?         -\nE         + !#$hello\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017839299999966585, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_numeric_string", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_handles_numeric_string", "run.py", "test", ""], "setup": {"duration": 0.0001685689999995077, "outcome": "passed"}, "call": {"duration": 0.000151128000000611, "outcome": "passed"}, "teardown": {"duration": 0.0001693149999999477, "outcome": "passed"}}]}, {"created": 1733296045.5795197, "duration": 0.05571627616882324, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 6, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_char_not_in_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_single_char_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_string_with_multiple_chars_to_remove", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_string_with_repeated_first_char", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_string_with_repeated_last_char", "type": "Function", "lineno": 36}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00035302700000006126, "outcome": "passed"}, "call": {"duration": 0.0003954340000005274, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00021308100000005936, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018048799999981213, "outcome": "passed"}, "call": {"duration": 0.00016877799999992504, "outcome": "passed"}, "teardown": {"duration": 0.00013744999999953933, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015777399999983288, "outcome": "passed"}, "call": {"duration": 0.0003296029999999561, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'ball' == 'balln'\n  \n  - balln\n  ?     -\n  + ball"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"balloon\", \"o\") == \"balln\"\nE       AssertionError: assert 'ball' == 'balln'\nE         \nE         - balln\nE         ?     -\nE         + ball\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00017966100000066376, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_in_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00017152100000039638, "outcome": "passed"}, "call": {"duration": 0.00016395099999932938, "outcome": "passed"}, "teardown": {"duration": 0.00013463000000069059, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00015573000000035364, "outcome": "passed"}, "call": {"duration": 0.0001491320000006624, "outcome": "passed"}, "teardown": {"duration": 0.00014737999999958618, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015554999999967123, "outcome": "passed"}, "call": {"duration": 0.0003415630000001002, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'msssspp'\n  \n  - msssspp\n  + mssissipp\n  ?    +  +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"msssspp\"\nE       AssertionError: assert 'mssissipp' == 'msssspp'\nE         \nE         - msssspp\nE         + mssissipp\nE         ?    +  +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017823700000008103, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 24, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016873900000025088, "outcome": "passed"}, "call": {"duration": 0.00016330900000038895, "outcome": "passed"}, "teardown": {"duration": 0.00013365200000059474, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string", "lineno": 27, "outcome": "passed", "keywords": ["test_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.0001616140000004762, "outcome": "passed"}, "call": {"duration": 0.00014626099999937026, "outcome": "passed"}, "teardown": {"duration": 0.0001433180000001144, "outcome": "passed"}}, {"nodeid": "run.py::test_string_with_multiple_chars_to_remove", "lineno": 30, "outcome": "passed", "keywords": ["test_string_with_multiple_chars_to_remove", "run.py", "test", ""], "setup": {"duration": 0.00015235399999991017, "outcome": "passed"}, "call": {"duration": 0.00014330700000009244, "outcome": "passed"}, "teardown": {"duration": 0.00012994999999982326, "outcome": "passed"}}, {"nodeid": "run.py::test_string_with_repeated_first_char", "lineno": 33, "outcome": "failed", "keywords": ["test_string_with_repeated_first_char", "run.py", "test", ""], "setup": {"duration": 0.0001508039999995603, "outcome": "passed"}, "call": {"duration": 0.0002917419999999282, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'a' == 'aaabbbccc'\n  \n  - aaabbbccc\n  + a"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_string_with_repeated_first_char():\n>       assert remove_Occ(\"aaabbbccc\", \"a\") == \"aaabbbccc\"\nE       AssertionError: assert 'a' == 'aaabbbccc'\nE         \nE         - aaabbbccc\nE         + a\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00018182099999997092, "outcome": "passed"}}, {"nodeid": "run.py::test_string_with_repeated_last_char", "lineno": 36, "outcome": "failed", "keywords": ["test_string_with_repeated_last_char", "run.py", "test", ""], "setup": {"duration": 0.00017853800000011688, "outcome": "passed"}, "call": {"duration": 0.0003412179999999765, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 38, "message": "AssertionError: assert 'aaabbbc' == 'aaabbbcc'\n  \n  - aaabbbcc\n  ?        -\n  + aaabbbc"}, "traceback": [{"path": "run.py", "lineno": 38, "message": "AssertionError"}], "longrepr": "def test_string_with_repeated_last_char():\n>       assert remove_Occ(\"aaabbbccc\", \"c\") == \"aaabbbcc\"\nE       AssertionError: assert 'aaabbbc' == 'aaabbbcc'\nE         \nE         - aaabbbcc\nE         ?        -\nE         + aaabbbc\n\nrun.py:38: AssertionError"}, "teardown": {"duration": 0.00019937500000022368, "outcome": "passed"}}]}, {"created": 1733296045.472845, "duration": 0.056626319885253906, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 4, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_case_sensitivity", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00030895999999991375, "outcome": "passed"}, "call": {"duration": 0.0004545630000007961, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00021313500000008645, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018399500000043645, "outcome": "passed"}, "call": {"duration": 0.00018720899999991047, "outcome": "passed"}, "teardown": {"duration": 0.0001398850000002838, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00015813699999966957, "outcome": "passed"}, "call": {"duration": 0.00036354499999990963, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'hell w' == 'hell world'\n  \n  - hell world\n  ?       ----\n  + hell w"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"hello world\", \"o\") == \"hell world\"\nE       AssertionError: assert 'hell w' == 'hell world'\nE         \nE         - hell world\nE         ?       ----\nE         + hell w\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00017289400000031208, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017159400000021918, "outcome": "passed"}, "call": {"duration": 0.00015114099999991026, "outcome": "passed"}, "teardown": {"duration": 0.0001328320000002492, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016309400000036334, "outcome": "passed"}, "call": {"duration": 0.0001442869999994656, "outcome": "passed"}, "teardown": {"duration": 0.0001282449999999713, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00014918200000035853, "outcome": "passed"}, "call": {"duration": 0.00033738800000016056, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017646999999954005, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_handles_single_character_string", "run.py", "test", ""], "setup": {"duration": 0.00018175100000039635, "outcome": "passed"}, "call": {"duration": 0.0001548999999991807, "outcome": "passed"}, "teardown": {"duration": 0.00013480699999934842, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_characters", "run.py", "test", ""], "setup": {"duration": 0.00015664699999984322, "outcome": "passed"}, "call": {"duration": 0.0003453709999998722, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_characters():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017109500000067612, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_case_sensitivity", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_case_sensitivity", "run.py", "test", ""], "setup": {"duration": 0.00016849799999985038, "outcome": "passed"}, "call": {"duration": 0.000344489000000614, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'HeloWor' == 'HeoWorld'\n  \n  - HeoWorld\n  ?       --\n  + HeloWor\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_case_sensitivity():\n>       assert remove_Occ(\"HelloWorld\", \"l\") == \"HeoWorld\"\nE       AssertionError: assert 'HeloWor' == 'HeoWorld'\nE         \nE         - HeoWorld\nE         ?       --\nE         + HeloWor\nE         ?   +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.0001965390000000511, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017425699999940036, "outcome": "passed"}, "call": {"duration": 0.00034107799999993915, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert '!#hello' == '!#hello#$'\n  \n  - !#hello#$\n  ?        --\n  + !#hello"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_special_characters():\n>       assert remove_Occ(\"!@#hello@#$\", \"@\") == \"!#hello#$\"\nE       AssertionError: assert '!#hello' == '!#hello#$'\nE         \nE         - !#hello#$\nE         ?        --\nE         + !#hello\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00020838199999939633, "outcome": "passed"}}]}, {"created": 1733296045.5701714, "duration": 0.05612492561340332, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 4, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_single_character", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_leading_occurrence", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_trailing_occurrence", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_case_sensitive", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00032469400000056936, "outcome": "passed"}, "call": {"duration": 0.0004302670000004838, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00021047300000009983, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019113300000039857, "outcome": "passed"}, "call": {"duration": 0.0003822060000002736, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00017408500000026805, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00017452399999928758, "outcome": "passed"}, "call": {"duration": 0.00032576500000036646, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'a' == 'aple'\n  \n  - aple\n  + a"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"apple\", \"p\") == \"aple\"\nE       AssertionError: assert 'a' == 'aple'\nE         \nE         - aple\nE         + a\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.0001708699999998231, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017261899999976293, "outcome": "passed"}, "call": {"duration": 0.00015000800000031234, "outcome": "passed"}, "teardown": {"duration": 0.0001443249999999452, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016969599999949736, "outcome": "passed"}, "call": {"duration": 0.0001438059999996355, "outcome": "passed"}, "teardown": {"duration": 0.00012790500000026128, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_character", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_single_character", "run.py", "test", ""], "setup": {"duration": 0.0001583360000001477, "outcome": "passed"}, "call": {"duration": 0.00014145600000059488, "outcome": "passed"}, "teardown": {"duration": 0.00012693700000010466, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015531499999976717, "outcome": "passed"}, "call": {"duration": 0.0003330329999995385, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.0001863440000002825, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_leading_occurrence", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_leading_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017416800000003008, "outcome": "passed"}, "call": {"duration": 0.00015308999999952277, "outcome": "passed"}, "teardown": {"duration": 0.00013277899999941667, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_trailing_occurrence", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_trailing_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016601799999982347, "outcome": "passed"}, "call": {"duration": 0.0003604359999993534, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_trailing_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017764499999994854, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_sensitive", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_case_sensitive", "run.py", "test", ""], "setup": {"duration": 0.0001694450000000458, "outcome": "passed"}, "call": {"duration": 0.0003437860000001791, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'Bnan' == 'Bnanan'\n  \n  - Bnanan\n  ?     --\n  + Bnan"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_case_sensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnanan\"\nE       AssertionError: assert 'Bnan' == 'Bnanan'\nE         \nE         - Bnanan\nE         ?     --\nE         + Bnan\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.000213378999999847, "outcome": "passed"}}]}, {"created": 1733296046.3966022, "duration": 0.05084538459777832, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 4, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_single_character", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_multiple_same_characters", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003270150000007632, "outcome": "passed"}, "call": {"duration": 0.00048015099999965116, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00026150299999994076, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00020246699999937334, "outcome": "passed"}, "call": {"duration": 0.00018632299999943314, "outcome": "passed"}, "teardown": {"duration": 0.0001376779999997524, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00015958499999957354, "outcome": "passed"}, "call": {"duration": 0.00036592399999957337, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00018816700000012787, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016832799999999537, "outcome": "passed"}, "call": {"duration": 0.00015162000000046305, "outcome": "passed"}, "teardown": {"duration": 0.0001317820000004133, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015723199999939652, "outcome": "passed"}, "call": {"duration": 0.00014250500000034805, "outcome": "passed"}, "teardown": {"duration": 0.0001275679999999113, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_character", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_single_character", "run.py", "test", ""], "setup": {"duration": 0.00015532399999962365, "outcome": "passed"}, "call": {"duration": 0.00014678999999961917, "outcome": "passed"}, "teardown": {"duration": 0.00019274599999974384, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017509999999987258, "outcome": "passed"}, "call": {"duration": 0.0003602310000001552, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00018700499999990683, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_same_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_same_characters", "run.py", "test", ""], "setup": {"duration": 0.00017229100000015762, "outcome": "passed"}, "call": {"duration": 0.00029062700000004327, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'aa' == ''\n  \n  + aa"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_same_characters():\n>       assert remove_Occ(\"aaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aa' == ''\nE         \nE         + aa\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0002074310000006463, "outcome": "passed"}}]}, {"created": 1733296044.6625035, "duration": 0.06645846366882324, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 3, "failed": 7, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_case_insensitive", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_repeated_chars", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_char_same", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00035005600000026504, "outcome": "passed"}, "call": {"duration": 0.00020663400000042742, "outcome": "passed"}, "teardown": {"duration": 0.0001629630000001825, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017505599999978472, "outcome": "passed"}, "call": {"duration": 0.00015333600000033698, "outcome": "passed"}, "teardown": {"duration": 0.00013538700000026438, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001657919999997759, "outcome": "passed"}, "call": {"duration": 0.00042399400000014964, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.0002979090000003737, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_with_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00020588399999965645, "outcome": "passed"}, "call": {"duration": 0.0004404459999998167, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'baa' == 'banba'\n  \n  - banba\n  ?   --\n  + baa"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_last_occurrence():\n>       assert remove_Occ(\"banana\", \"n\") == \"banba\"\nE       AssertionError: assert 'baa' == 'banba'\nE         \nE         - banba\nE         ?   --\nE         + baa\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00020564099999997865, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00020230999999970578, "outcome": "passed"}, "call": {"duration": 0.0003790720000003134, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00019238699999934994, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_case_insensitive", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_with_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.0001795859999997873, "outcome": "passed"}, "call": {"duration": 0.00037913899999963974, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'Bnan' == 'Bnana'\n  \n  - Bnana\n  ?     -\n  + Bnan"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_case_insensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnana\"\nE       AssertionError: assert 'Bnan' == 'Bnana'\nE         \nE         - Bnana\nE         ?     -\nE         + Bnan\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00018300300000007041, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00018427699999978842, "outcome": "passed"}, "call": {"duration": 0.000325665000000086, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'bn' == 'b@nna'\n  \n  - b@nna\n  + bn"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"b@n@na\", \"@\") == \"b@nna\"\nE       AssertionError: assert 'bn' == 'b@nna'\nE         \nE         - b@nna\nE         + bn\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00020367800000009595, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_with_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.0001874270000001843, "outcome": "passed"}, "call": {"duration": 0.00016247800000002144, "outcome": "passed"}, "teardown": {"duration": 0.00013947199999986282, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_chars", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_chars", "run.py", "test", ""], "setup": {"duration": 0.00016509899999928024, "outcome": "passed"}, "call": {"duration": 0.0003186849999998742, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'aa' == 'aaacc'\n  \n  - aaacc\n  + aa"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_chars():\n>       assert remove_Occ(\"aabbcc\", \"b\") == \"aaacc\"\nE       AssertionError: assert 'aa' == 'aaacc'\nE         \nE         - aaacc\nE         + aa\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00018377800000024536, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_char_same", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_char_same", "run.py", "test", ""], "setup": {"duration": 0.00017525999999978836, "outcome": "passed"}, "call": {"duration": 0.00037043800000002847, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'bacab' == 'baca'\n  \n  - baca\n  + bacab\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_char_same():\n>       assert remove_Occ(\"abacaba\", \"a\") == \"baca\"\nE       AssertionError: assert 'bacab' == 'baca'\nE         \nE         - baca\nE         + bacab\nE         ?     +\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00022291700000032222, "outcome": "passed"}}]}, {"created": 1733296044.1450825, "duration": 0.06174445152282715, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 4, "failed": 8, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_both_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_multiple_same_char", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_only_one_char", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_Occ_with_numeric_string", "type": "Function", "lineno": 36}, {"nodeid": "run.py::test_remove_Occ_with_multiple_same_chars_at_end", "type": "Function", "lineno": 39}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00036456199999967964, "outcome": "passed"}, "call": {"duration": 0.00017523600000046713, "outcome": "passed"}, "teardown": {"duration": 0.00015341500000065622, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00021755900000020034, "outcome": "passed"}, "call": {"duration": 0.00017337500000014217, "outcome": "passed"}, "teardown": {"duration": 0.00013628600000004099, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001552399999997789, "outcome": "passed"}, "call": {"duration": 0.0003723920000000547, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.000189396999999758, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_with_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001735650000007638, "outcome": "passed"}, "call": {"duration": 0.000346183000000444, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'baa' == 'banba'\n  \n  - banba\n  ?   --\n  + baa"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_last_occurrence():\n>       assert remove_Occ(\"banana\", \"n\") == \"banba\"\nE       AssertionError: assert 'baa' == 'banba'\nE         \nE         - banba\nE         ?   --\nE         + baa\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00016850999999995508, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_both_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_both_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017866700000013225, "outcome": "passed"}, "call": {"duration": 0.0003560409999998626, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bracadabr' == 'brcdbr'\n  \n  - brcdbr\n  + bracadabr\n  ?   + + +"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_both_occurrences():\n>       assert remove_Occ(\"abracadabra\", \"a\") == \"brcdbr\"\nE       AssertionError: assert 'bracadabr' == 'brcdbr'\nE         \nE         - brcdbr\nE         + bracadabr\nE         ?   + + +\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.0001692489999998159, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_same_char", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_same_char", "run.py", "test", ""], "setup": {"duration": 0.00017268999999942025, "outcome": "passed"}, "call": {"duration": 0.000334697000000439, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_same_char():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017713599999957808, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00016753599999930202, "outcome": "passed"}, "call": {"duration": 0.0003189990000000975, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'eve' == 'levl'\n  \n  - levl\n  + eve"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_same_char():\n>       assert remove_Occ(\"level\", \"l\") == \"levl\"\nE       AssertionError: assert 'eve' == 'levl'\nE         \nE         - levl\nE         + eve\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017699599999954074, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_only_one_char", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_only_one_char", "run.py", "test", ""], "setup": {"duration": 0.00017649999999935773, "outcome": "passed"}, "call": {"duration": 0.0002833979999996572, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'aaa' == ''\n  \n  + aaa"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_only_one_char():\n>       assert remove_Occ(\"aaaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aaa' == ''\nE         \nE         + aaa\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00018858700000023987, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.0001702450000005129, "outcome": "passed"}, "call": {"duration": 0.0001511819999997499, "outcome": "passed"}, "teardown": {"duration": 0.00014078999999966868, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00015788600000021802, "outcome": "passed"}, "call": {"duration": 0.000327050999999301, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert '!#$%a' == '!#$%a#'\n  \n  - !#$%a#\n  ?      -\n  + !#$%a"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"!@#$%a@#\", \"@\") == \"!#$%a#\"\nE       AssertionError: assert '!#$%a' == '!#$%a#'\nE         \nE         - !#$%a#\nE         ?      -\nE         + !#$%a\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00021748200000004658, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_numeric_string", "lineno": 36, "outcome": "passed", "keywords": ["test_remove_Occ_with_numeric_string", "run.py", "test", ""], "setup": {"duration": 0.00017378999999984046, "outcome": "passed"}, "call": {"duration": 0.0001662309999996836, "outcome": "passed"}, "teardown": {"duration": 0.00013100500000007287, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_same_chars_at_end", "lineno": 39, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_same_chars_at_end", "run.py", "test", ""], "setup": {"duration": 0.00015235299999982743, "outcome": "passed"}, "call": {"duration": 0.0003384129999997043, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 41, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 41, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_same_chars_at_end():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:41: AssertionError"}, "teardown": {"duration": 0.0002039149999992773, "outcome": "passed"}}]}, {"created": 1733296044.0986702, "duration": 0.05213117599487305, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 6, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_case_insensitive", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_consecutive_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002924520000000541, "outcome": "passed"}, "call": {"duration": 0.00034919899999996673, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heloo'\n  \n  - heloo\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\nE       AssertionError: assert 'he' == 'heloo'\nE         \nE         - heloo\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00019504900000022474, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001847109999997265, "outcome": "passed"}, "call": {"duration": 0.00016976700000004286, "outcome": "passed"}, "teardown": {"duration": 0.00013610900000005088, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_returns_original_string_if_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00015148300000022985, "outcome": "passed"}, "call": {"duration": 0.0001501750000003632, "outcome": "passed"}, "teardown": {"duration": 0.00012811599999995593, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001475410000000288, "outcome": "passed"}, "call": {"duration": 0.0001390679999997424, "outcome": "passed"}, "teardown": {"duration": 0.00012738499999986885, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_single_character_string", "run.py", "test", ""], "setup": {"duration": 0.00015340300000010743, "outcome": "passed"}, "call": {"duration": 0.00016178499999996987, "outcome": "passed"}, "teardown": {"duration": 0.00014313399999998921, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015863899999990494, "outcome": "passed"}, "call": {"duration": 0.00032807699999981565, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017437900000016882, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrences", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016868000000025418, "outcome": "passed"}, "call": {"duration": 0.00016724699999981496, "outcome": "passed"}, "teardown": {"duration": 0.0001438630000003549, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_case_insensitive", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_handles_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.0001551649999997906, "outcome": "passed"}, "call": {"duration": 0.0003172860000000277, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'He' == 'Heo'\n  \n  - Heo\n  ?   -\n  + He"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_case_insensitive():\n>       assert remove_Occ(\"Hello\", \"l\") == \"Heo\"\nE       AssertionError: assert 'He' == 'Heo'\nE         \nE         - Heo\nE         ?   -\nE         + He\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017166900000020746, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016568699999996994, "outcome": "passed"}, "call": {"duration": 0.00015977599999983383, "outcome": "passed"}, "teardown": {"duration": 0.00013244799999956314, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_consecutive_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_handles_consecutive_characters", "run.py", "test", ""], "setup": {"duration": 0.0001508450000002881, "outcome": "passed"}, "call": {"duration": 0.00033065600000004025, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'bookkep' == 'bookkeepr'\n  \n  - bookkeepr\n  ?       - -\n  + bookkep"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_consecutive_characters():\n>       assert remove_Occ(\"bookkeeper\", \"e\") == \"bookkeepr\"\nE       AssertionError: assert 'bookkep' == 'bookkeepr'\nE         \nE         - bookkeepr\nE         ?       - -\nE         + bookkep\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00019694100000000603, "outcome": "passed"}}]}, {"created": 1733296046.0715597, "duration": 0.05963301658630371, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 4, "failed": 4, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_no_char", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_first_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_last_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_both_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_no_char", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_char", "run.py", "test", ""], "setup": {"duration": 0.0004128300000001417, "outcome": "passed"}, "call": {"duration": 0.0002801989999996479, "outcome": "passed"}, "teardown": {"duration": 0.00019641999999997495, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_first_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00020377999999965368, "outcome": "passed"}, "call": {"duration": 0.000602360000000246, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.0004602000000000217, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_last_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00030967999999997886, "outcome": "passed"}, "call": {"duration": 0.000841349999999963, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'baa' == 'banba'\n  \n  - banba\n  ?   --\n  + baa"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_last_occurrence():\n>       assert remove_Occ(\"banana\", \"n\") == \"banba\"\nE       AssertionError: assert 'baa' == 'banba'\nE         \nE         - banba\nE         ?   --\nE         + baa\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00022565999999990538, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_both_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_both_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0002328600000005565, "outcome": "passed"}, "call": {"duration": 0.0004130400000006418, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'hara' == 'harater'\n  \n  - harater\n  + hara"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_both_occurrences():\n>       assert remove_Occ(\"character\", \"c\") == \"harater\"\nE       AssertionError: assert 'hara' == 'harater'\nE         \nE         - harater\nE         + hara\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00024792900000036866, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.0002441800000001493, "outcome": "passed"}, "call": {"duration": 0.00023687099999936123, "outcome": "passed"}, "teardown": {"duration": 0.00033752900000028063, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00024070899999983908, "outcome": "passed"}, "call": {"duration": 0.00041790899999938347, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00023237999999992098, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00022642999999966662, "outcome": "passed"}, "call": {"duration": 0.00026070999999916467, "outcome": "passed"}, "teardown": {"duration": 0.00019343999999943406, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00022810000000017538, "outcome": "passed"}, "call": {"duration": 0.0002751500000002238, "outcome": "passed"}, "teardown": {"duration": 0.00027578999999988696, "outcome": "passed"}}]}, {"created": 1733296044.42625, "duration": 0.07761144638061523, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 2, "failed": 8, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_case_insensitive", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_multiple_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_special_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0005185599999997237, "outcome": "passed"}, "call": {"duration": 0.0003969200000000228, "outcome": "passed"}, "teardown": {"duration": 0.0005307999999999424, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003223300000003704, "outcome": "passed"}, "call": {"duration": 0.00030197999999970193, "outcome": "passed"}, "teardown": {"duration": 0.0003637400000000568, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003673500000003216, "outcome": "passed"}, "call": {"duration": 0.0006832000000001059, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.0003546400000002947, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_with_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00025055000000051564, "outcome": "passed"}, "call": {"duration": 0.0004868299999998271, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'baa' == 'banba'\n  \n  - banba\n  ?   --\n  + baa"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_last_occurrence():\n>       assert remove_Occ(\"banana\", \"n\") == \"banba\"\nE       AssertionError: assert 'baa' == 'banba'\nE         \nE         - banba\nE         ?   --\nE         + baa\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00025219000000031855, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00023994000000016058, "outcome": "passed"}, "call": {"duration": 0.0004295000000000826, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.0001956500000002137, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_case_insensitive", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_with_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00023939100000003322, "outcome": "passed"}, "call": {"duration": 0.0003758889999998516, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'Bnan' == 'Bnana'\n  \n  - Bnana\n  ?     -\n  + Bnan"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_case_insensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnana\"\nE       AssertionError: assert 'Bnan' == 'Bnana'\nE         \nE         - Bnana\nE         ?     -\nE         + Bnan\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.000205260000000429, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00019919999999995497, "outcome": "passed"}, "call": {"duration": 0.0003977499999994194, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'helloworld' == 'hello@worl'\n  \n  - hello@worl\n  ?      -\n  + helloworld\n  ?          +"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"hello@world\", \"@\") == \"hello@worl\"\nE       AssertionError: assert 'helloworld' == 'hello@worl'\nE         \nE         - hello@worl\nE         ?      -\nE         + helloworld\nE         ?          +\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00020662999999920828, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00035176000000003427, "outcome": "passed"}, "call": {"duration": 0.00037515999999993, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'hello' == 'hello@worl'\n  \n  - hello@worl\n  + hello"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_special_characters():\n>       assert remove_Occ(\"hello@@world\", \"@\") == \"hello@worl\"\nE       AssertionError: assert 'hello' == 'hello@worl'\nE         \nE         - hello@worl\nE         + hello\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0002497300000001701, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00029372000000016385, "outcome": "passed"}, "call": {"duration": 0.0004331689999999, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'hello@' == 'hello@worl'\n  \n  - hello@worl\n  ?       ----\n  + hello@"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_special_characters():\n>       assert remove_Occ(\"hello@@@world\", \"@\") == \"hello@worl\"\nE       AssertionError: assert 'hello@' == 'hello@worl'\nE         \nE         - hello@worl\nE         ?       ----\nE         + hello@\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00024007900000011517, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_special_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0002303299999999453, "outcome": "passed"}, "call": {"duration": 0.00038610999999999507, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'hello@world' == 'hello@worl'\n  \n  - hello@worl\n  + hello@world\n  ?           +"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_special_characters():\n>       assert remove_Occ(\"@hello@world@\", \"@\") == \"hello@worl\"\nE       AssertionError: assert 'hello@world' == 'hello@worl'\nE         \nE         - hello@worl\nE         + hello@world\nE         ?           +\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.0002780400000004235, "outcome": "passed"}}]}, {"created": 1733296044.6912065, "duration": 0.0422210693359375, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 1, "passed": 4, "total": 5, "collected": 5}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test1", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test2", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test3", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test4", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test5", "type": "Function", "lineno": 18}]}], "tests": [{"nodeid": "run.py::test1", "lineno": 6, "outcome": "failed", "keywords": ["test1", "run.py", "test", ""], "setup": {"duration": 0.0003331320000001803, "outcome": "passed"}, "call": {"duration": 0.00045604799999976464, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test1():\n>       assert remove_Occ(\"hello\",\"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.000258587999999893, "outcome": "passed"}}, {"nodeid": "run.py::test2", "lineno": 9, "outcome": "passed", "keywords": ["test2", "run.py", "test", ""], "setup": {"duration": 0.00019012399999995822, "outcome": "passed"}, "call": {"duration": 0.00020603099999982888, "outcome": "passed"}, "teardown": {"duration": 0.00013698900000003178, "outcome": "passed"}}, {"nodeid": "run.py::test3", "lineno": 12, "outcome": "passed", "keywords": ["test3", "run.py", "test", ""], "setup": {"duration": 0.0001555209999999363, "outcome": "passed"}, "call": {"duration": 0.00014438500000002463, "outcome": "passed"}, "teardown": {"duration": 0.00012968600000018426, "outcome": "passed"}}, {"nodeid": "run.py::test4", "lineno": 15, "outcome": "passed", "keywords": ["test4", "run.py", "test", ""], "setup": {"duration": 0.00015483299999985434, "outcome": "passed"}, "call": {"duration": 0.00014421600000025236, "outcome": "passed"}, "teardown": {"duration": 0.00013729199999978903, "outcome": "passed"}}, {"nodeid": "run.py::test5", "lineno": 18, "outcome": "passed", "keywords": ["test5", "run.py", "test", ""], "setup": {"duration": 0.00014950100000010735, "outcome": "passed"}, "call": {"duration": 0.0001451769999998298, "outcome": "passed"}, "teardown": {"duration": 0.00017149399999993875, "outcome": "passed"}}]}, {"created": 1733296044.980869, "duration": 0.05495882034301758, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 8, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_char_at_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_char_at_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_case_sensitive", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_special_chars", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_multiple_special_chars", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_whole_string", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_Occ_empty_string_input", "type": "Function", "lineno": 36}, {"nodeid": "run.py::test_remove_Occ_string_with_no_removal", "type": "Function", "lineno": 39}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00037318799999930263, "outcome": "passed"}, "call": {"duration": 0.00040934200000020127, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_single_char():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00018956400000025297, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00018417799999959072, "outcome": "passed"}, "call": {"duration": 0.00015759400000003865, "outcome": "passed"}, "teardown": {"duration": 0.0001422230000001079, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015646200000052346, "outcome": "passed"}, "call": {"duration": 0.00015041199999998867, "outcome": "passed"}, "teardown": {"duration": 0.00013295200000040808, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001523069999995741, "outcome": "passed"}, "call": {"duration": 0.000140489000000521, "outcome": "passed"}, "teardown": {"duration": 0.0001287880000004904, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_at_start", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00014939500000021866, "outcome": "passed"}, "call": {"duration": 0.0001396109999998174, "outcome": "passed"}, "teardown": {"duration": 0.0001273390000005037, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_at_end", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.0001484939999993884, "outcome": "passed"}, "call": {"duration": 0.00013943999999987966, "outcome": "passed"}, "teardown": {"duration": 0.00012587899999960683, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_sensitive", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_case_sensitive", "run.py", "test", ""], "setup": {"duration": 0.00015457599999990634, "outcome": "passed"}, "call": {"duration": 0.00033344899999931954, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'He' == 'Heo'\n  \n  - Heo\n  ?   -\n  + He"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_case_sensitive():\n>       assert remove_Occ(\"Hello\", \"l\") == \"Heo\"\nE       AssertionError: assert 'He' == 'Heo'\nE         \nE         - Heo\nE         ?   -\nE         + He\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.0001846969999999004, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_special_chars", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_special_chars", "run.py", "test", ""], "setup": {"duration": 0.00016868199999997557, "outcome": "passed"}, "call": {"duration": 0.0003363810000003298, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '!#hello' == '!#hello#$'\n  \n  - !#hello#$\n  ?        --\n  + !#hello"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_special_chars():\n>       assert remove_Occ(\"!@#hello@#$\", \"@\") == \"!#hello#$\"\nE       AssertionError: assert '!#hello' == '!#hello#$'\nE         \nE         - !#hello#$\nE         ?        --\nE         + !#hello\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0001687110000005987, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_special_chars", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_special_chars", "run.py", "test", ""], "setup": {"duration": 0.00016136499999941378, "outcome": "passed"}, "call": {"duration": 0.00034358599999961825, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert '!hello!' == 'hello!!'\n  \n  - hello!!\n  ?       -\n  + !hello!\n  ? +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_special_chars():\n>       assert remove_Occ(\"!!hello!!\", \"!\") == \"hello!!\"\nE       AssertionError: assert '!hello!' == 'hello!!'\nE         \nE         - hello!!\nE         ?       -\nE         + !hello!\nE         ? +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.0001731539999996201, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_whole_string", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_whole_string", "run.py", "test", ""], "setup": {"duration": 0.0001694470000002113, "outcome": "passed"}, "call": {"duration": 0.00016915800000028014, "outcome": "passed"}, "teardown": {"duration": 0.00013196700000062123, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string_input", "lineno": 36, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string_input", "run.py", "test", ""], "setup": {"duration": 0.0001643859999997943, "outcome": "passed"}, "call": {"duration": 0.0001440730000004109, "outcome": "passed"}, "teardown": {"duration": 0.00012851600000018948, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_string_with_no_removal", "lineno": 39, "outcome": "passed", "keywords": ["test_remove_Occ_string_with_no_removal", "run.py", "test", ""], "setup": {"duration": 0.00016114700000002813, "outcome": "passed"}, "call": {"duration": 0.00016863000000011397, "outcome": "passed"}, "teardown": {"duration": 0.0001610379999998912, "outcome": "passed"}}]}, {"created": 1733296045.163391, "duration": 0.05614781379699707, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 5, "failed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_single_character_from_start", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_middle", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_OCC_removes_single_character_from_end", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_start", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_middle", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_leaves_string_unchanged_if_no_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_single_character", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_multiple_same_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_single_character_from_start", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_removes_single_character_from_start", "run.py", "test", ""], "setup": {"duration": 0.00034090400000019727, "outcome": "passed"}, "call": {"duration": 0.0002602070000001788, "outcome": "passed"}, "teardown": {"duration": 0.00015809899999963406, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_middle", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_single_character_from_middle", "run.py", "test", ""], "setup": {"duration": 0.00016332000000041091, "outcome": "passed"}, "call": {"duration": 0.0004656620000003109, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_single_character_from_middle():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00018078999999993073, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_OCC_removes_single_character_from_end", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_OCC_removes_single_character_from_end", "run.py", "test", ""], "setup": {"duration": 0.0001699469999998371, "outcome": "passed"}, "call": {"duration": 0.00016250399999995224, "outcome": "passed"}, "teardown": {"duration": 0.00013953399999966365, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_start", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_start", "run.py", "test", ""], "setup": {"duration": 0.00015707799999997718, "outcome": "passed"}, "call": {"duration": 0.00031865799999986066, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'b' == 'bkkeeper'\n  \n  - bkkeeper\n  + b"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_start():\n>       assert remove_Occ(\"bookkeeper\", \"o\") == \"bkkeeper\"\nE       AssertionError: assert 'b' == 'bkkeeper'\nE         \nE         - bkkeeper\nE         + b\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017745199999996686, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_middle", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_middle", "run.py", "test", ""], "setup": {"duration": 0.00017534900000004683, "outcome": "passed"}, "call": {"duration": 0.00034711800000009063, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_middle():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00017284899999969738, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_end", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_end", "run.py", "test", ""], "setup": {"duration": 0.00016581900000023353, "outcome": "passed"}, "call": {"duration": 0.0003458339999999893, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'chaacte' == 'chacter'\n  \n  - chacter\n  ?       -\n  + chaacte\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_end():\n>       assert remove_Occ(\"character\", \"r\") == \"chacter\"\nE       AssertionError: assert 'chaacte' == 'chacter'\nE         \nE         - chacter\nE         ?       -\nE         + chaacte\nE         ?   +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017049599999996445, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_leaves_string_unchanged_if_no_occurrences", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_leaves_string_unchanged_if_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016538500000029543, "outcome": "passed"}, "call": {"duration": 0.00016377300000014472, "outcome": "passed"}, "teardown": {"duration": 0.00013328700000014848, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001595679999999433, "outcome": "passed"}, "call": {"duration": 0.00014746899999984464, "outcome": "passed"}, "teardown": {"duration": 0.00013405300000002285, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_single_character", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_single_character", "run.py", "test", ""], "setup": {"duration": 0.00014958600000003486, "outcome": "passed"}, "call": {"duration": 0.00015810299999996502, "outcome": "passed"}, "teardown": {"duration": 0.00012823600000011481, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_multiple_same_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_handles_string_with_multiple_same_characters", "run.py", "test", ""], "setup": {"duration": 0.00015058299999992641, "outcome": "passed"}, "call": {"duration": 0.00027025000000024946, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'a' == ''\n  \n  + a"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_string_with_multiple_same_characters():\n>       assert remove_Occ(\"aaa\", \"a\") == \"\"\nE       AssertionError: assert 'a' == ''\nE         \nE         + a\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00020904899999996118, "outcome": "passed"}}]}, {"created": 1733296045.424272, "duration": 0.055970191955566406, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 4, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence_from_left", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_first_occurrence_from_right", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_case_sensitive", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_string_without_target_character", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_removes_all_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_characters", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence_from_left", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence_from_left", "run.py", "test", ""], "setup": {"duration": 0.00035773800000016287, "outcome": "passed"}, "call": {"duration": 0.0005277200000000093, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence_from_left():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002550799999998521, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_first_occurrence_from_right", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence_from_right", "run.py", "test", ""], "setup": {"duration": 0.00020763999999995342, "outcome": "passed"}, "call": {"duration": 0.00017164999999996766, "outcome": "passed"}, "teardown": {"duration": 0.00013858499999996887, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_case_sensitive", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_case_sensitive", "run.py", "test", ""], "setup": {"duration": 0.00017158200000011448, "outcome": "passed"}, "call": {"duration": 0.00040233600000005865, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'HeLO' == 'HeLo'\n  \n  - HeLo\n  ?    ^\n  + HeLO\n  ?    ^"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_case_sensitive():\n>       assert remove_Occ(\"HeLlO\", \"l\") == \"HeLo\"\nE       AssertionError: assert 'HeLO' == 'HeLo'\nE         \nE         - HeLo\nE         ?    ^\nE         + HeLO\nE         ?    ^\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00017664699999997424, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016775700000004612, "outcome": "passed"}, "call": {"duration": 0.00015557600000004612, "outcome": "passed"}, "teardown": {"duration": 0.00015339500000011164, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_without_target_character", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_without_target_character", "run.py", "test", ""], "setup": {"duration": 0.00015836499999988263, "outcome": "passed"}, "call": {"duration": 0.00014824400000001958, "outcome": "passed"}, "teardown": {"duration": 0.00013041299999994038, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_all_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_removes_all_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015418499999997337, "outcome": "passed"}, "call": {"duration": 0.0003419120000001108, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'bnan' == 'bnn'\n  \n  - bnn\n  + bnan\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_all_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnn\"\nE       AssertionError: assert 'bnan' == 'bnn'\nE         \nE         - bnn\nE         + bnan\nE         ?   +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017865899999991441, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_characters", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_characters", "run.py", "test", ""], "setup": {"duration": 0.0001874070000000838, "outcome": "passed"}, "call": {"duration": 0.0003673959999999088, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'msssspp'\n  \n  - msssspp\n  + mssissipp\n  ?    +  +"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_characters():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"msssspp\"\nE       AssertionError: assert 'mssissipp' == 'msssspp'\nE         \nE         - msssspp\nE         + mssissipp\nE         ?    +  +\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.0001755839999999509, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_characters", "run.py", "test", ""], "setup": {"duration": 0.00016976599999996012, "outcome": "passed"}, "call": {"duration": 0.00030275099999999, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'aaa' == ''\n  \n  + aaa"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_characters():\n>       assert remove_Occ(\"aaaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aaa' == ''\nE         \nE         + aaa\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0001781350000000792, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00017305299999992307, "outcome": "passed"}, "call": {"duration": 0.00015819900000013654, "outcome": "passed"}, "teardown": {"duration": 0.00017069800000002466, "outcome": "passed"}}]}, {"created": 1733296044.1759806, "duration": 0.05960226058959961, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 7, "failed": 5, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_single_character_from_start", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_end", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_middle", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_character_not_present", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_middle", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_target_character", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_no_target_character", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_multiple_target_characters", "type": "Function", "lineno": 36}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_target_character_at_end", "type": "Function", "lineno": 39}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_single_character_from_start", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_removes_single_character_from_start", "run.py", "test", ""], "setup": {"duration": 0.0005948980000001214, "outcome": "passed"}, "call": {"duration": 0.00020035300000031953, "outcome": "passed"}, "teardown": {"duration": 0.00016722300000004964, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_end", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_single_character_from_end", "run.py", "test", ""], "setup": {"duration": 0.0001710799999998791, "outcome": "passed"}, "call": {"duration": 0.00014867499999970946, "outcome": "passed"}, "teardown": {"duration": 0.0001319120000000673, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_middle", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_removes_single_character_from_middle", "run.py", "test", ""], "setup": {"duration": 0.00017020499999986782, "outcome": "passed"}, "call": {"duration": 0.0004251110000002001, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'che' == 'chey'\n  \n  - chey\n  ?    -\n  + che"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_single_character_from_middle():\n>       assert remove_Occ(\"cherry\", \"r\") == \"chey\"\nE       AssertionError: assert 'che' == 'chey'\nE         \nE         - chey\nE         ?    -\nE         + che\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00019451299999984073, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_character_not_present", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_returns_original_string_if_character_not_present", "run.py", "test", ""], "setup": {"duration": 0.00017766200000002286, "outcome": "passed"}, "call": {"duration": 0.00015732700000015143, "outcome": "passed"}, "teardown": {"duration": 0.00013754800000009837, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_start", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_start", "run.py", "test", ""], "setup": {"duration": 0.0001624370000001818, "outcome": "passed"}, "call": {"duration": 0.0003661659999996125, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_start():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.0001843240000001245, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_end", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_end", "run.py", "test", ""], "setup": {"duration": 0.0001699190000001849, "outcome": "passed"}, "call": {"duration": 0.0003629400000000338, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mississi' == 'missisi'\n  \n  - missisi\n  + mississi\n  ?       +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_end():\n>       assert remove_Occ(\"mississippi\", \"p\") == \"missisi\"\nE       AssertionError: assert 'mississi' == 'missisi'\nE         \nE         - missisi\nE         + mississi\nE         ?       +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00018510700000007319, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_middle", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_middle", "run.py", "test", ""], "setup": {"duration": 0.0001734230000001169, "outcome": "passed"}, "call": {"duration": 0.0003143569999997098, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'misis' == 'miiippi'\n  \n  - miiippi\n  + misis"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_middle():\n>       assert remove_Occ(\"mississippi\", \"s\") == \"miiippi\"\nE       AssertionError: assert 'misis' == 'miiippi'\nE         \nE         - miiippi\nE         + misis\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.0001733640000001202, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016378800000005356, "outcome": "passed"}, "call": {"duration": 0.00014867099999982258, "outcome": "passed"}, "teardown": {"duration": 0.0001362910000000106, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_target_character", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_string_with_only_target_character", "run.py", "test", ""], "setup": {"duration": 0.0001534869999999522, "outcome": "passed"}, "call": {"duration": 0.0002731580000001621, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'aa' == ''\n  \n  + aa"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_string_with_only_target_character():\n>       assert remove_Occ(\"aaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aa' == ''\nE         \nE         + aa\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017590899999975207, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_no_target_character", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_no_target_character", "run.py", "test", ""], "setup": {"duration": 0.0001686209999998134, "outcome": "passed"}, "call": {"duration": 0.00016700600000030263, "outcome": "passed"}, "teardown": {"duration": 0.00013166299999989306, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_multiple_target_characters", "lineno": 36, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_multiple_target_characters", "run.py", "test", ""], "setup": {"duration": 0.00015265300000022464, "outcome": "passed"}, "call": {"duration": 0.00014479300000003192, "outcome": "passed"}, "teardown": {"duration": 0.0001327190000002254, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_target_character_at_end", "lineno": 39, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_target_character_at_end", "run.py", "test", ""], "setup": {"duration": 0.00014927899999994665, "outcome": "passed"}, "call": {"duration": 0.0001454600000001527, "outcome": "passed"}, "teardown": {"duration": 0.00016547899999963533, "outcome": "passed"}}]}, {"created": 1733296046.4247136, "duration": 0.05792808532714844, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_single_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_first_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_single_character", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_special_characters", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_multiple_special_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_single_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_single_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003353510000003723, "outcome": "passed"}, "call": {"duration": 0.0005076399999985881, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_single_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0003523840000010381, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0002407670000010853, "outcome": "passed"}, "call": {"duration": 0.0002124950000013115, "outcome": "passed"}, "teardown": {"duration": 0.00015201600000125381, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_first_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016441299999847558, "outcome": "passed"}, "call": {"duration": 0.0003679590000000843, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'a' == 'ale'\n  \n  - ale\n  + a"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_first_occurrence():\n>       assert remove_Occ(\"apple\", \"p\") == \"ale\"\nE       AssertionError: assert 'a' == 'ale'\nE         \nE         - ale\nE         + a\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00019055099999931713, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_last_occurrence", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018780400000117936, "outcome": "passed"}, "call": {"duration": 0.00016220200000027774, "outcome": "passed"}, "teardown": {"duration": 0.00013784699999952466, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016350900000006163, "outcome": "passed"}, "call": {"duration": 0.0001516610000003027, "outcome": "passed"}, "teardown": {"duration": 0.00013312100000106852, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015534400000127846, "outcome": "passed"}, "call": {"duration": 0.00015450699999952633, "outcome": "passed"}, "teardown": {"duration": 0.0001300359999998335, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_character", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_single_character", "run.py", "test", ""], "setup": {"duration": 0.0001513679999991524, "outcome": "passed"}, "call": {"duration": 0.00014214599999995414, "outcome": "passed"}, "teardown": {"duration": 0.00013675499999976637, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00015224500000066143, "outcome": "passed"}, "call": {"duration": 0.0003559349999999739, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'Apple' == 'ppl'\n  \n  - ppl\n  + Apple\n  ? +   +"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_case_insensitive():\n>       assert remove_Occ(\"Apple\", \"a\") == \"ppl\"\nE       AssertionError: assert 'Apple' == 'ppl'\nE         \nE         - ppl\nE         + Apple\nE         ? +   +\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017395999999969547, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001676939999999405, "outcome": "passed"}, "call": {"duration": 0.00036648800000094184, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'helloworld' == 'helloorld'\n  \n  - helloorld\n  + helloworld\n  ?      +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_special_characters():\n>       assert remove_Occ(\"hello@world\", \"@\") == \"helloorld\"\nE       AssertionError: assert 'helloworld' == 'helloorld'\nE         \nE         - helloorld\nE         + helloworld\nE         ?      +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00018086999999944453, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_special_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001853409999998945, "outcome": "passed"}, "call": {"duration": 0.0003218209999999999, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'helloworld' == 'helloorldpython'\n  \n  - helloorldpython\n  + helloworld"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_special_characters():\n>       assert remove_Occ(\"hello@world@python\", \"@\") == \"helloorldpython\"\nE       AssertionError: assert 'helloworld' == 'helloorldpython'\nE         \nE         - helloorldpython\nE         + helloworld\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00021925199999905942, "outcome": "passed"}}]}, {"created": 1733296044.7554774, "duration": 0.0860133171081543, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 6, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_removes_first_and_last_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_keeps_only_middle_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_removes_first_and_last_of_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_single_character", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0007600480000000687, "outcome": "passed"}, "call": {"duration": 0.0007622380000000817, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.000394319999999837, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00036066899999909197, "outcome": "passed"}, "call": {"duration": 0.00032356300000024873, "outcome": "passed"}, "teardown": {"duration": 0.00034254900000085797, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_returns_original_string_if_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00028773400000048355, "outcome": "passed"}, "call": {"duration": 0.0002497489999999658, "outcome": "passed"}, "teardown": {"duration": 0.00046406200000070896, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_first_and_last_occurrences", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_and_last_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00026317100000028404, "outcome": "passed"}, "call": {"duration": 0.0005063990000007124, "outcome": "passed"}, "teardown": {"duration": 0.00028213899999940395, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_only_middle_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_only_middle_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00026819200000005594, "outcome": "passed"}, "call": {"duration": 0.0006375070000004257, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'baa' == 'bana'\n  \n  - bana\n  ?   -\n  + baa"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_only_middle_occurrences():\n>       assert remove_Occ(\"banana\", \"n\") == \"bana\"\nE       AssertionError: assert 'baa' == 'bana'\nE         \nE         - bana\nE         ?   -\nE         + baa\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.0003129560000001419, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_first_and_last_of_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_and_last_of_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0002938940000003498, "outcome": "passed"}, "call": {"duration": 0.0006237320000010982, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'mssisspp'\n  \n  - mssisspp\n  + mssissipp\n  ?       +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_and_last_of_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssisspp\"\nE       AssertionError: assert 'mssissipp' == 'mssisspp'\nE         \nE         - mssisspp\nE         + mssissipp\nE         ?       +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00028892299999938587, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00031116299999922603, "outcome": "passed"}, "call": {"duration": 0.0002698030000001239, "outcome": "passed"}, "teardown": {"duration": 0.00020139599999957625, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_single_character_string", "run.py", "test", ""], "setup": {"duration": 0.0002488419999995273, "outcome": "passed"}, "call": {"duration": 0.0004883440000007511, "outcome": "passed"}, "teardown": {"duration": 0.000283231999999245, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_single_character", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_single_character", "run.py", "test", ""], "setup": {"duration": 0.00034524299999993957, "outcome": "passed"}, "call": {"duration": 0.000281280999999467, "outcome": "passed"}, "teardown": {"duration": 0.00028476800000021285, "outcome": "passed"}}]}, {"created": 1733296045.2705905, "duration": 0.053251028060913086, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 6, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_is_first", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_is_last", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_replaced_segment_is_empty", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_single_char_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_replacement_char", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002989639999997351, "outcome": "passed"}, "call": {"duration": 0.00039678200000015096, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0001987030000005774, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018136200000018476, "outcome": "passed"}, "call": {"duration": 0.00017550499999963165, "outcome": "passed"}, "teardown": {"duration": 0.00015530100000038516, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_string_unchanged_if_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00015951499999999896, "outcome": "passed"}, "call": {"duration": 0.0001450990000000374, "outcome": "passed"}, "teardown": {"duration": 0.00013002100000036876, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_is_first", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_string_unchanged_if_char_is_first", "run.py", "test", ""], "setup": {"duration": 0.0001620239999997608, "outcome": "passed"}, "call": {"duration": 0.00014585000000000292, "outcome": "passed"}, "teardown": {"duration": 0.00013096899999975875, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_is_last", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_string_unchanged_if_char_is_last", "run.py", "test", ""], "setup": {"duration": 0.00016083399999988757, "outcome": "passed"}, "call": {"duration": 0.00037164799999978015, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_string_unchanged_if_char_is_last():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00018351399999971818, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017637799999992154, "outcome": "passed"}, "call": {"duration": 0.0003872029999998361, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'mssisspp'\n  \n  - mssisspp\n  + mssissipp\n  ?       +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssisspp\"\nE       AssertionError: assert 'mssissipp' == 'mssisspp'\nE         \nE         - mssisspp\nE         + mssissipp\nE         ?       +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.0001752660000002848, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_replaced_segment_is_empty", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_string_unchanged_if_replaced_segment_is_empty", "run.py", "test", ""], "setup": {"duration": 0.00017235099999979298, "outcome": "passed"}, "call": {"duration": 0.0001572909999998373, "outcome": "passed"}, "teardown": {"duration": 0.00013361600000028062, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015538999999975545, "outcome": "passed"}, "call": {"duration": 0.00014278299999936905, "outcome": "passed"}, "teardown": {"duration": 0.00012997500000011541, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_char_string", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_handles_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00014959700000005682, "outcome": "passed"}, "call": {"duration": 0.00014080299999985613, "outcome": "passed"}, "teardown": {"duration": 0.00012658999999981546, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_replacement_char", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_handles_string_with_only_replacement_char", "run.py", "test", ""], "setup": {"duration": 0.00015261600000027187, "outcome": "passed"}, "call": {"duration": 0.00027944500000032235, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'aa' == ''\n  \n  + aa"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_string_with_only_replacement_char():\n>       assert remove_Occ(\"aaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aa' == ''\nE         \nE         + aa\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00021988100000047694, "outcome": "passed"}}]}, {"created": 1733296044.525904, "duration": 0.04948711395263672, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 4, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_in_string", "run.py", "test", ""], "setup": {"duration": 0.00029994399999999644, "outcome": "passed"}, "call": {"duration": 0.0004583670000002371, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_in_string():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0001984740000002816, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00017703400000002034, "outcome": "passed"}, "call": {"duration": 0.00015967299999974927, "outcome": "passed"}, "teardown": {"duration": 0.00014152400000000398, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015969000000026767, "outcome": "passed"}, "call": {"duration": 0.0003842299999998744, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00017376100000010553, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00020159199999980615, "outcome": "passed"}, "call": {"duration": 0.00033304600000061413, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'boo' == 'bookeeper'\n  \n  - bookeeper\n  + boo"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_same_char():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'boo' == 'bookeeper'\nE         \nE         - bookeeper\nE         + boo\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017440099999976866, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016784899999944258, "outcome": "passed"}, "call": {"duration": 0.0001512720000000911, "outcome": "passed"}, "teardown": {"duration": 0.00014897999999963218, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.0001543269999997321, "outcome": "passed"}, "call": {"duration": 0.00014206700000052308, "outcome": "passed"}, "teardown": {"duration": 0.00012645999999971735, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00015821199999965785, "outcome": "passed"}, "call": {"duration": 0.00014583000000012447, "outcome": "passed"}, "teardown": {"duration": 0.00012834799999961177, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00014947799999998068, "outcome": "passed"}, "call": {"duration": 0.00032765399999945544, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'appl' == 'apppl'\n  \n  - apppl\n  ?    -\n  + appl"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_at_end():\n>       assert remove_Occ(\"apple\", \"e\") == \"apppl\"\nE       AssertionError: assert 'appl' == 'apppl'\nE         \nE         - apppl\nE         ?    -\nE         + appl\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00020467600000007025, "outcome": "passed"}}]}, {"created": 1733296044.5610793, "duration": 0.05431413650512695, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 4, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_multiple_chars", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_in_string", "run.py", "test", ""], "setup": {"duration": 0.000332380000000132, "outcome": "passed"}, "call": {"duration": 0.0005028880000002012, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_in_string():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00019688299999964798, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00019470700000034924, "outcome": "passed"}, "call": {"duration": 0.00020265800000007772, "outcome": "passed"}, "teardown": {"duration": 0.00014105300000011312, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016711299999982998, "outcome": "passed"}, "call": {"duration": 0.00037217200000005946, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.0001707380000000036, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00016797100000021103, "outcome": "passed"}, "call": {"duration": 0.00015143599999989377, "outcome": "passed"}, "teardown": {"duration": 0.0001469940000000669, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00016876799999998582, "outcome": "passed"}, "call": {"duration": 0.00031835499999965933, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'es' == 'tes'\n  \n  - tes\n  ? -\n  + es"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_at_end():\n>       assert remove_Occ(\"test\", \"t\") == \"tes\"\nE       AssertionError: assert 'es' == 'tes'\nE         \nE         - tes\nE         ? -\nE         + es\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.000180478000000317, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_chars", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00017272299999993024, "outcome": "passed"}, "call": {"duration": 0.0003545359999996833, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017672800000001487, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017202900000024002, "outcome": "passed"}, "call": {"duration": 0.00015907300000028712, "outcome": "passed"}, "teardown": {"duration": 0.0001359110000000996, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.0001551929999998869, "outcome": "passed"}, "call": {"duration": 0.00015011400000020103, "outcome": "passed"}, "teardown": {"duration": 0.00013731100000002883, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00015492800000016516, "outcome": "passed"}, "call": {"duration": 0.0002938299999999394, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'o' == 'op'\n  \n  - op\n  + o"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_same_char():\n>       assert remove_Occ(\"pop\", \"p\") == \"op\"\nE       AssertionError: assert 'o' == 'op'\nE         \nE         - op\nE         + o\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00020627399999995077, "outcome": "passed"}}]}, {"created": 1733296045.426582, "duration": 0.056482553482055664, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 5, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_string_without_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_char_at_end", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_char_at_start", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00041486999999973406, "outcome": "passed"}, "call": {"duration": 0.0005634599999999601, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00030627500000024455, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00024204899999968887, "outcome": "passed"}, "call": {"duration": 0.00019579699999994205, "outcome": "passed"}, "teardown": {"duration": 0.0001640460000000843, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.0001972349999999068, "outcome": "passed"}, "call": {"duration": 0.0001861709999997352, "outcome": "passed"}, "teardown": {"duration": 0.00015535299999980268, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00019191299999965494, "outcome": "passed"}, "call": {"duration": 0.0001948430000000556, "outcome": "passed"}, "teardown": {"duration": 0.00015786099999992587, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_without_char", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_without_char", "run.py", "test", ""], "setup": {"duration": 0.0001969449999998929, "outcome": "passed"}, "call": {"duration": 0.00019111600000032425, "outcome": "passed"}, "teardown": {"duration": 0.00015481599999978002, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001951070000001387, "outcome": "passed"}, "call": {"duration": 0.00041410499999994244, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00018562899999974292, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_char_at_end", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.0001864989999997846, "outcome": "passed"}, "call": {"duration": 0.0003538160000000623, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'boo' == 'bookeeper'\n  \n  - bookeeper\n  + boo"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_char_at_end():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'boo' == 'bookeeper'\nE         \nE         - bookeeper\nE         + boo\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00018304700000015828, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_char_at_start", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_repeated_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00019302699999990125, "outcome": "passed"}, "call": {"duration": 0.00017347200000017438, "outcome": "passed"}, "teardown": {"duration": 0.00019256200000006274, "outcome": "passed"}}]}, {"created": 1733296045.9863617, "duration": 0.06200361251831055, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 4, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_single_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_multiple_special_characters", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_single_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_with_single_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003805820000000182, "outcome": "passed"}, "call": {"duration": 0.0005586229999998693, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_single_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00023044000000016496, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00024824499999986926, "outcome": "passed"}, "call": {"duration": 0.00045491799999997085, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00020299499999953952, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00022214399999942458, "outcome": "passed"}, "call": {"duration": 0.00019693600000003642, "outcome": "passed"}, "teardown": {"duration": 0.000175714000000049, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00021626400000052115, "outcome": "passed"}, "call": {"duration": 0.00019118200000001195, "outcome": "passed"}, "teardown": {"duration": 0.00018751699999963733, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00020279100000042405, "outcome": "passed"}, "call": {"duration": 0.0001910459999994174, "outcome": "passed"}, "teardown": {"duration": 0.00017135800000023238, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0002037810000006246, "outcome": "passed"}, "call": {"duration": 0.0001961690000005234, "outcome": "passed"}, "teardown": {"duration": 0.0001731160000000287, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00020243400000019562, "outcome": "passed"}, "call": {"duration": 0.0004299200000001946, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert '!#hello' == '!#hello#'\n  \n  - !#hello#\n  ?        -\n  + !#hello"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"!@#hello@#\", \"@\") == \"!#hello#\"\nE       AssertionError: assert '!#hello' == '!#hello#'\nE         \nE         - !#hello#\nE         ?        -\nE         + !#hello\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.0002019089999993895, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00021323200000011866, "outcome": "passed"}, "call": {"duration": 0.0003731390000005774, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '!hello' == '!hello#world'\n  \n  - !hello#world\n  + !hello"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_special_characters():\n>       assert remove_Occ(\"!@#hello@#world\", \"@#\") == \"!hello#world\"\nE       AssertionError: assert '!hello' == '!hello#world'\nE         \nE         - !hello#world\nE         + !hello\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00023626400000065217, "outcome": "passed"}}]}, {"created": 1733296044.6360848, "duration": 0.048822641372680664, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 5, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_single_character", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00032468399999974196, "outcome": "passed"}, "call": {"duration": 0.0004625260000001852, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002037690000000758, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00020474999999997578, "outcome": "passed"}, "call": {"duration": 0.00017836899999990052, "outcome": "passed"}, "teardown": {"duration": 0.00014344600000004704, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017594899999995306, "outcome": "passed"}, "call": {"duration": 0.00014703800000015477, "outcome": "passed"}, "teardown": {"duration": 0.00013063100000021421, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015308799999980138, "outcome": "passed"}, "call": {"duration": 0.0003661400000001258, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.000180998999999904, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017553100000000654, "outcome": "passed"}, "call": {"duration": 0.0001545140000001055, "outcome": "passed"}, "teardown": {"duration": 0.00013700800000027158, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_character", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_single_character", "run.py", "test", ""], "setup": {"duration": 0.00017934600000035772, "outcome": "passed"}, "call": {"duration": 0.0001500139999999206, "outcome": "passed"}, "teardown": {"duration": 0.00013219400000030745, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00016146299999997282, "outcome": "passed"}, "call": {"duration": 0.0001429589999997205, "outcome": "passed"}, "teardown": {"duration": 0.00012940500000002686, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00014886999999985662, "outcome": "passed"}, "call": {"duration": 0.000346371000000012, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00020795500000003742, "outcome": "passed"}}]}, {"created": 1733296045.7954972, "duration": 0.04889559745788574, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 3, "passed": 7, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_char_not_in_string", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_char_at_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_char_at_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_single_char_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_multiple_removals", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_case_insensitive", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00029178700000009883, "outcome": "passed"}, "call": {"duration": 0.0003802950000002525, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00017824399999977203, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018136799999979303, "outcome": "passed"}, "call": {"duration": 0.0001669510000001928, "outcome": "passed"}, "teardown": {"duration": 0.00013299600000005185, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_in_string", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00016372699999989138, "outcome": "passed"}, "call": {"duration": 0.00015323100000008694, "outcome": "passed"}, "teardown": {"duration": 0.00013068900000012817, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001644139999998906, "outcome": "passed"}, "call": {"duration": 0.0003301780000000143, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'ball' == 'balun'\n  \n  - balun\n  + ball"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"balloon\", \"o\") == \"balun\"\nE       AssertionError: assert 'ball' == 'balun'\nE         \nE         - balun\nE         + ball\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00016803199999992913, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_start", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00016139199999987142, "outcome": "passed"}, "call": {"duration": 0.000143924000000073, "outcome": "passed"}, "teardown": {"duration": 0.00012980599999989906, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_end", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00015421300000006966, "outcome": "passed"}, "call": {"duration": 0.000141693999999859, "outcome": "passed"}, "teardown": {"duration": 0.00012537199999984594, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 24, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001478009999997809, "outcome": "passed"}, "call": {"duration": 0.0001355809999998847, "outcome": "passed"}, "teardown": {"duration": 0.00012187399999996629, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string", "lineno": 27, "outcome": "passed", "keywords": ["test_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.0001406769999996449, "outcome": "passed"}, "call": {"duration": 0.00013629999999986708, "outcome": "passed"}, "teardown": {"duration": 0.00012020600000006709, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_removals", "lineno": 30, "outcome": "passed", "keywords": ["test_multiple_removals", "run.py", "test", ""], "setup": {"duration": 0.0001390610000000514, "outcome": "passed"}, "call": {"duration": 0.0001330730000002056, "outcome": "passed"}, "teardown": {"duration": 0.00012191999999977554, "outcome": "passed"}}, {"nodeid": "run.py::test_case_insensitive", "lineno": 33, "outcome": "failed", "keywords": ["test_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00013804800000016826, "outcome": "passed"}, "call": {"duration": 0.0003004249999998265, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'HellW' == 'HellWorld'\n  \n  - HellWorld\n  + HellW"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_case_insensitive():\n>       assert remove_Occ(\"HelloWorld\", \"o\") == \"HellWorld\"\nE       AssertionError: assert 'HellW' == 'HellWorld'\nE         \nE         - HellWorld\nE         + HellW\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00018860999999992245, "outcome": "passed"}}]}, {"created": 1733296044.4794521, "duration": 0.04980111122131348, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 4, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_single_char", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_char_at_start", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_char_at_end", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002984589999996956, "outcome": "passed"}, "call": {"duration": 0.00046891499999990316, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00018805300000046543, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001784909999997808, "outcome": "passed"}, "call": {"duration": 0.00036982099999960383, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00017178200000067534, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016595700000010538, "outcome": "passed"}, "call": {"duration": 0.00016175199999945988, "outcome": "passed"}, "teardown": {"duration": 0.0001335920000000712, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char", "lineno": 15, "outcome": "passed", "keywords": ["test_single_char", "run.py", "test", ""], "setup": {"duration": 0.0001612410000007003, "outcome": "passed"}, "call": {"duration": 0.00014731400000034256, "outcome": "passed"}, "teardown": {"duration": 0.00014001500000038192, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015000500000006411, "outcome": "passed"}, "call": {"duration": 0.0003383640000000909, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bnanaa' == 'banan'\n  \n  - banan\n  + bnanaa"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"bananaaa\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnanaa' == 'banan'\nE         \nE         - banan\nE         + bnanaa\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00017321099999989542, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016705600000044285, "outcome": "passed"}, "call": {"duration": 0.00015947199999999384, "outcome": "passed"}, "teardown": {"duration": 0.0001345190000003882, "outcome": "passed"}}, {"nodeid": "run.py::test_char_at_start", "lineno": 24, "outcome": "passed", "keywords": ["test_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.0001549739999999744, "outcome": "passed"}, "call": {"duration": 0.0001432769999993866, "outcome": "passed"}, "teardown": {"duration": 0.00014442499999933744, "outcome": "passed"}}, {"nodeid": "run.py::test_char_at_end", "lineno": 27, "outcome": "failed", "keywords": ["test_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00015581200000003292, "outcome": "passed"}, "call": {"duration": 0.00032728700000017596, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'appl' == 'apppl'\n  \n  - apppl\n  ?    -\n  + appl"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_char_at_end():\n>       assert remove_Occ(\"apple\", \"e\") == \"apppl\"\nE       AssertionError: assert 'appl' == 'apppl'\nE         \nE         - apppl\nE         ?    -\nE         + appl\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00019822500000010734, "outcome": "passed"}}]}, {"created": 1733296045.8324094, "duration": 0.05803513526916504, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 4, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_single_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_no_replacements", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_in_middle", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_single_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_with_single_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00031382299999993535, "outcome": "passed"}, "call": {"duration": 0.0005196680000003617, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'hel'\n  \n  - hel\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_single_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"hel\"\nE       AssertionError: assert 'he' == 'hel'\nE         \nE         - hel\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020231500000011948, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001845410000003156, "outcome": "passed"}, "call": {"duration": 0.00037739600000019635, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00018414299999980344, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00018702500000022937, "outcome": "passed"}, "call": {"duration": 0.00015923600000000704, "outcome": "passed"}, "teardown": {"duration": 0.0001403660000001139, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00016105699999968692, "outcome": "passed"}, "call": {"duration": 0.00015353499999992692, "outcome": "passed"}, "teardown": {"duration": 0.00013437199999977167, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00015639800000011306, "outcome": "passed"}, "call": {"duration": 0.00035073799999985056, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'es' == 'tes'\n  \n  - tes\n  ? -\n  + es"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_at_end():\n>       assert remove_Occ(\"test\", \"t\") == \"tes\"\nE       AssertionError: assert 'es' == 'tes'\nE         \nE         - tes\nE         ? -\nE         + es\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00018682200000030846, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001829459999997951, "outcome": "passed"}, "call": {"duration": 0.000166558999999733, "outcome": "passed"}, "teardown": {"duration": 0.00014512600000005094, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_replacements", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_no_replacements", "run.py", "test", ""], "setup": {"duration": 0.00018300900000012277, "outcome": "passed"}, "call": {"duration": 0.00035535100000005926, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'ython' == 'python'\n  \n  - python\n  ? -\n  + ython"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_no_replacements():\n>       assert remove_Occ(\"python\", \"p\") == \"python\"\nE       AssertionError: assert 'ython' == 'python'\nE         \nE         - python\nE         ? -\nE         + ython\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017804400000009935, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00017354700000016265, "outcome": "passed"}, "call": {"duration": 0.0003339819999998994, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'boo' == 'bookeeper'\n  \n  - bookeeper\n  + boo"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_char_at_end():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'boo' == 'bookeeper'\nE         \nE         - bookeeper\nE         + boo\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0001888330000001659, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_in_middle", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_in_middle", "run.py", "test", ""], "setup": {"duration": 0.0002024710000001484, "outcome": "passed"}, "call": {"duration": 0.00033811900000024764, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'hara' == 'haracter'\n  \n  - haracter\n  + hara"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_char_in_middle():\n>       assert remove_Occ(\"character\", \"c\") == \"haracter\"\nE       AssertionError: assert 'hara' == 'haracter'\nE         \nE         - haracter\nE         + hara\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00018990299999988025, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_with_repeated_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00017169900000002514, "outcome": "passed"}, "call": {"duration": 0.00015239300000002842, "outcome": "passed"}, "teardown": {"duration": 0.00017769299999992327, "outcome": "passed"}}]}, {"created": 1733296046.3950386, "duration": 0.056281328201293945, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 4, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_char_from_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_char_from_single_char_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_char_from_string_with_only_target_char", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_char_from_string_with_multiple_same_chars", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_char_from_string_with_no_target_char", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003092469999996794, "outcome": "passed"}, "call": {"duration": 0.0004054849999999277, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00018813099999981375, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018755999999964246, "outcome": "passed"}, "call": {"duration": 0.0003797470000002079, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00018057800000015334, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017149099999969053, "outcome": "passed"}, "call": {"duration": 0.0003615149999998124, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00017667400000043187, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00016948900000013367, "outcome": "passed"}, "call": {"duration": 0.0001568330000001339, "outcome": "passed"}, "teardown": {"duration": 0.00013563799999971593, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00016179299999929952, "outcome": "passed"}, "call": {"duration": 0.00034851499999977165, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bacab' == 'bcb'\n  \n  - bcb\n  + bacab\n  ?  + +"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_same_char():\n>       assert remove_Occ(\"abacaba\", \"a\") == \"bcb\"\nE       AssertionError: assert 'bacab' == 'bcb'\nE         \nE         - bcb\nE         + bacab\nE         ?  + +\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.0001706669999999022, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_char_from_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001798980000007333, "outcome": "passed"}, "call": {"duration": 0.00014885399999986504, "outcome": "passed"}, "teardown": {"duration": 0.0001325059999999212, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_single_char_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_char_from_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.0001527339999993771, "outcome": "passed"}, "call": {"duration": 0.00014501500000019263, "outcome": "passed"}, "teardown": {"duration": 0.0001265390000000366, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_string_with_only_target_char", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_char_from_string_with_only_target_char", "run.py", "test", ""], "setup": {"duration": 0.00014807099999991635, "outcome": "passed"}, "call": {"duration": 0.00028298400000004165, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'aaa' == ''\n  \n  + aaa"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_char_from_string_with_only_target_char():\n>       assert remove_Occ(\"aaaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aaa' == ''\nE         \nE         + aaa\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00018199600000023963, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_string_with_multiple_same_chars", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_char_from_string_with_multiple_same_chars", "run.py", "test", ""], "setup": {"duration": 0.0001717169999997381, "outcome": "passed"}, "call": {"duration": 0.0003387809999999547, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_char_from_string_with_multiple_same_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00016946399999984152, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_string_with_no_target_char", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_char_from_string_with_no_target_char", "run.py", "test", ""], "setup": {"duration": 0.00016788900000008766, "outcome": "passed"}, "call": {"duration": 0.00016375700000015314, "outcome": "passed"}, "teardown": {"duration": 0.0001613799999997667, "outcome": "passed"}}]}, {"created": 1733296045.0353198, "duration": 0.0511012077331543, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 5, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_no_occurrence", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_empty_string", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_char_not_in_string", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_multiple_chars", "type": "Function", "lineno": 31}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002820820000000168, "outcome": "passed"}, "call": {"duration": 0.0004229980000003408, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'hello'\n  \n  - hello\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"hello\"\nE       AssertionError: assert 'he' == 'hello'\nE         \nE         - hello\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00019149600000023526, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018780300000020844, "outcome": "passed"}, "call": {"duration": 0.00017123900000015624, "outcome": "passed"}, "teardown": {"duration": 0.00014415099999975922, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017235999999964946, "outcome": "passed"}, "call": {"duration": 0.00029643999999962034, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'he' == 'hello'\n  \n  - hello\n  + he"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"hello\"\nE       AssertionError: assert 'he' == 'hello'\nE         \nE         - hello\nE         + he\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00018784900000046179, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_no_occurrence", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.000204069000000473, "outcome": "passed"}, "call": {"duration": 0.0001554759999997657, "outcome": "passed"}, "teardown": {"duration": 0.00014255199999979595, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 19, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001577909999994631, "outcome": "passed"}, "call": {"duration": 0.00032562799999968917, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 21, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 21, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:21: AssertionError"}, "teardown": {"duration": 0.0001689590000006902, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "lineno": 22, "outcome": "passed", "keywords": ["test_remove_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00016436900000016408, "outcome": "passed"}, "call": {"duration": 0.00015088999999957053, "outcome": "passed"}, "teardown": {"duration": 0.00014923599999949744, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_empty_string", "lineno": 25, "outcome": "passed", "keywords": ["test_remove_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015766799999994419, "outcome": "passed"}, "call": {"duration": 0.0001433040000007324, "outcome": "passed"}, "teardown": {"duration": 0.00012858900000001228, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_in_string", "lineno": 28, "outcome": "passed", "keywords": ["test_remove_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015134100000047113, "outcome": "passed"}, "call": {"duration": 0.0001392689999999419, "outcome": "passed"}, "teardown": {"duration": 0.00012442600000017734, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_chars", "lineno": 31, "outcome": "failed", "keywords": ["test_remove_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00014606700000019401, "outcome": "passed"}, "call": {"duration": 0.0003483060000002425, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 33, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 33, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_chars():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:33: AssertionError"}, "teardown": {"duration": 0.00020193000000023886, "outcome": "passed"}}]}, {"created": 1733296045.8279014, "duration": 0.057328224182128906, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 7, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_keeps_case_sensitive", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_single_character", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_first_character", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_last_character", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_middle_character", "type": "Function", "lineno": 36}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_one_character", "type": "Function", "lineno": 39}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0006927750000000898, "outcome": "passed"}, "call": {"duration": 0.000385215999999744, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020619300000035423, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017028099999993884, "outcome": "passed"}, "call": {"duration": 0.00015415500000059978, "outcome": "passed"}, "teardown": {"duration": 0.00013518100000009525, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00015554299999998022, "outcome": "passed"}, "call": {"duration": 0.0001504859999998942, "outcome": "passed"}, "teardown": {"duration": 0.00013052300000016004, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_case_sensitive", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_case_sensitive", "run.py", "test", ""], "setup": {"duration": 0.00016218299999959385, "outcome": "passed"}, "call": {"duration": 0.0002972840000001753, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'HellW' == 'HellWorld'\n  \n  - HellWorld\n  + HellW"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_case_sensitive():\n>       assert remove_Occ(\"HelloWorld\", \"o\") == \"HellWorld\"\nE       AssertionError: assert 'HellW' == 'HellWorld'\nE         \nE         - HellWorld\nE         + HellW\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.0001752039999995958, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017014799999959251, "outcome": "passed"}, "call": {"duration": 0.00015319999999974243, "outcome": "passed"}, "teardown": {"duration": 0.00014786700000080089, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016112999999950972, "outcome": "passed"}, "call": {"duration": 0.00014882600000021284, "outcome": "passed"}, "teardown": {"duration": 0.0001311380000004192, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001517130000001643, "outcome": "passed"}, "call": {"duration": 0.000328625999999943, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.0001738810000002644, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_character", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_single_character", "run.py", "test", ""], "setup": {"duration": 0.00016627200000041142, "outcome": "passed"}, "call": {"duration": 0.00015002899999938535, "outcome": "passed"}, "teardown": {"duration": 0.000140746000000469, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_first_character", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_first_character", "run.py", "test", ""], "setup": {"duration": 0.00015234399999997095, "outcome": "passed"}, "call": {"duration": 0.00029549500000047857, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'a' == 'aab'\n  \n  - aab\n  + a"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_first_character():\n>       assert remove_Occ(\"aaab\", \"a\") == \"aab\"\nE       AssertionError: assert 'a' == 'aab'\nE         \nE         - aab\nE         + a\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.0001682770000002165, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_last_character", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_handles_repeated_last_character", "run.py", "test", ""], "setup": {"duration": 0.00017129999999987433, "outcome": "passed"}, "call": {"duration": 0.00016649799999957082, "outcome": "passed"}, "teardown": {"duration": 0.00013492500000023, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_middle_character", "lineno": 36, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_middle_character", "run.py", "test", ""], "setup": {"duration": 0.00015264100000056402, "outcome": "passed"}, "call": {"duration": 0.00028847199999937345, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 38, "message": "AssertionError: assert 'abba' == 'bb'\n  \n  - bb\n  + abba"}, "traceback": [{"path": "run.py", "lineno": 38, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_middle_character():\n>       assert remove_Occ(\"aabbaa\", \"a\") == \"bb\"\nE       AssertionError: assert 'abba' == 'bb'\nE         \nE         - bb\nE         + abba\n\nrun.py:38: AssertionError"}, "teardown": {"duration": 0.000174453999999713, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_one_character", "lineno": 39, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_only_one_character", "run.py", "test", ""], "setup": {"duration": 0.00017972200000038185, "outcome": "passed"}, "call": {"duration": 0.00016702699999981974, "outcome": "passed"}, "teardown": {"duration": 0.00015937299999979615, "outcome": "passed"}}]}, {"created": 1733296045.2731593, "duration": 0.05515003204345703, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 4, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_case_insensitivity", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_special_characters", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003359640000000219, "outcome": "passed"}, "call": {"duration": 0.0004694779999998566, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00023589899999976183, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019957299999973088, "outcome": "passed"}, "call": {"duration": 0.0001812970000001357, "outcome": "passed"}, "teardown": {"duration": 0.00014024400000023363, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00016421399999977382, "outcome": "passed"}, "call": {"duration": 0.0003725219999997087, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'hell w' == 'hell world'\n  \n  - hell world\n  ?       ----\n  + hell w"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"hello world\", \"o\") == \"hell world\"\nE       AssertionError: assert 'hell w' == 'hell world'\nE         \nE         - hell world\nE         ?       ----\nE         + hell w\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00017995999999964596, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016779799999966372, "outcome": "passed"}, "call": {"duration": 0.0001560710000001464, "outcome": "passed"}, "teardown": {"duration": 0.0001324050000000021, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015247000000018218, "outcome": "passed"}, "call": {"duration": 0.00014273600000036524, "outcome": "passed"}, "teardown": {"duration": 0.00013248100000007312, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00014876699999977205, "outcome": "passed"}, "call": {"duration": 0.00014403799999973543, "outcome": "passed"}, "teardown": {"duration": 0.00012634300000025078, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_case_insensitivity", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_handles_case_insensitivity", "run.py", "test", ""], "setup": {"duration": 0.00014900300000020295, "outcome": "passed"}, "call": {"duration": 0.0003529140000000375, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'Hell W' == 'Hell World'\n  \n  - Hell World\n  ?       ----\n  + Hell W"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_case_insensitivity():\n>       assert remove_Occ(\"Hello World\", \"o\") == \"Hell World\"\nE       AssertionError: assert 'Hell W' == 'Hell World'\nE         \nE         - Hell World\nE         ?       ----\nE         + Hell W\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.0001711460000000109, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016653399999988494, "outcome": "passed"}, "call": {"duration": 0.00035285700000020626, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '!#$hello' == '!$hello%'\n  \n  - !$hello%\n  ?        -\n  + !#$hello\n  ?  +"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_special_characters():\n>       assert remove_Occ(\"!@#$hello@#%\", \"@\") == \"!$hello%\"\nE       AssertionError: assert '!#$hello' == '!$hello%'\nE         \nE         - !$hello%\nE         ?        -\nE         + !#$hello\nE         ?  +\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017142699999972422, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016951000000009486, "outcome": "passed"}, "call": {"duration": 0.0003403149999998689, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert '!hello!' == 'hello!!'\n  \n  - hello!!\n  ?       -\n  + !hello!\n  ? +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_special_characters():\n>       assert remove_Occ(\"!!hello!!\", \"!\") == \"hello!!\"\nE       AssertionError: assert '!hello!' == 'hello!!'\nE         \nE         - hello!!\nE         ?       -\nE         + !hello!\nE         ? +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00022108400000009354, "outcome": "passed"}}]}, {"created": 1733296045.746016, "duration": 0.07145380973815918, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 6, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_returns_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_single_character", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_single_character_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_repeated_characters", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_Occ_with_same_char_first_and_last", "type": "Function", "lineno": 36}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0007712709999998513, "outcome": "passed"}, "call": {"duration": 0.0005435390000001483, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'banna'\n  \n  - banna\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banna\"\nE       AssertionError: assert 'bnan' == 'banna'\nE         \nE         - banna\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0004363949999999228, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00026964800000017775, "outcome": "passed"}, "call": {"duration": 0.0005358609999999153, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.0002532150000003064, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00020612299999989148, "outcome": "passed"}, "call": {"duration": 0.00017459200000002895, "outcome": "passed"}, "teardown": {"duration": 0.0001575099999997498, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_returns_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_returns_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016875499999979837, "outcome": "passed"}, "call": {"duration": 0.00014976299999958087, "outcome": "passed"}, "teardown": {"duration": 0.0002379110000001461, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016117900000001129, "outcome": "passed"}, "call": {"duration": 0.00041339300000009516, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.0002025090000001839, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00019125800000008297, "outcome": "passed"}, "call": {"duration": 0.00016097500000000764, "outcome": "passed"}, "teardown": {"duration": 0.00021707599999976068, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017078200000009147, "outcome": "passed"}, "call": {"duration": 0.0001502570000000425, "outcome": "passed"}, "teardown": {"duration": 0.0002138840000003306, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_character", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_character", "run.py", "test", ""], "setup": {"duration": 0.00015292899999996834, "outcome": "passed"}, "call": {"duration": 0.00015593600000007868, "outcome": "passed"}, "teardown": {"duration": 0.0002153140000000775, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_character_string", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_character_string", "run.py", "test", ""], "setup": {"duration": 0.0001512790000002262, "outcome": "passed"}, "call": {"duration": 0.00015080500000008712, "outcome": "passed"}, "teardown": {"duration": 0.00020502500000008084, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_characters", "run.py", "test", ""], "setup": {"duration": 0.00015713400000016975, "outcome": "passed"}, "call": {"duration": 0.00038053099999979523, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'aaab' == 'aaaabbbccc'\n  \n  - aaaabbbccc\n  + aaab"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_characters():\n>       assert remove_Occ(\"aaabbbccc\", \"b\") == \"aaaabbbccc\"\nE       AssertionError: assert 'aaab' == 'aaaabbbccc'\nE         \nE         - aaaabbbccc\nE         + aaab\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00018921699999996378, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_same_char_first_and_last", "lineno": 36, "outcome": "failed", "keywords": ["test_remove_Occ_with_same_char_first_and_last", "run.py", "test", ""], "setup": {"duration": 0.0002708049999999851, "outcome": "passed"}, "call": {"duration": 0.0003370419999999541, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 38, "message": "AssertionError: assert '' == 'a'\n  \n  - a"}, "traceback": [{"path": "run.py", "lineno": 38, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_same_char_first_and_last():\n>       assert remove_Occ(\"aa\", \"a\") == \"a\"\nE       AssertionError: assert '' == 'a'\nE         \nE         - a\n\nrun.py:38: AssertionError"}, "teardown": {"duration": 0.00023912800000003287, "outcome": "passed"}}]}, {"created": 1733296045.2540185, "duration": 0.07280111312866211, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_case_sensitivity", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_numeric_string", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00044964300000049917, "outcome": "passed"}, "call": {"duration": 0.0006609349999999736, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00027974500000027547, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00024662799999930485, "outcome": "passed"}, "call": {"duration": 0.00024682200000025745, "outcome": "passed"}, "teardown": {"duration": 0.0001985710000003138, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00021529900000061275, "outcome": "passed"}, "call": {"duration": 0.0005220910000005574, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'helo wor' == 'heo world'\n  \n  - heo world\n  ?        --\n  + helo wor\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"hello world\", \"l\") == \"heo world\"\nE       AssertionError: assert 'helo wor' == 'heo world'\nE         \nE         - heo world\nE         ?        --\nE         + helo wor\nE         ?   +\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.000221063999999771, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00021951699999966934, "outcome": "passed"}, "call": {"duration": 0.00019944499999979826, "outcome": "passed"}, "teardown": {"duration": 0.000188116000000349, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrences", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00020157300000001044, "outcome": "passed"}, "call": {"duration": 0.00018783899999963438, "outcome": "passed"}, "teardown": {"duration": 0.00017438199999997295, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001994300000003335, "outcome": "passed"}, "call": {"duration": 0.00018980200000040526, "outcome": "passed"}, "teardown": {"duration": 0.00016940999999981443, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_characters", "run.py", "test", ""], "setup": {"duration": 0.00020153400000033628, "outcome": "passed"}, "call": {"duration": 0.000445917999999601, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_characters():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.0002058830000004619, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_case_sensitivity", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_handles_case_sensitivity", "run.py", "test", ""], "setup": {"duration": 0.00021449400000062013, "outcome": "passed"}, "call": {"duration": 0.00045947399999946015, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'Hell W' == 'Hell World'\n  \n  - Hell World\n  ?       ----\n  + Hell W"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_case_sensitivity():\n>       assert remove_Occ(\"Hello World\", \"o\") == \"Hell World\"\nE       AssertionError: assert 'Hell W' == 'Hell World'\nE         \nE         - Hell World\nE         ?       ----\nE         + Hell W\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0002111000000004637, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00022262399999917193, "outcome": "passed"}, "call": {"duration": 0.00041925900000006067, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert '!#$hello' == '!#$hello#'\n  \n  - !#$hello#\n  ?         -\n  + !#$hello"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_special_characters():\n>       assert remove_Occ(\"!@#$hello@#\", \"@\") == \"!#$hello#\"\nE       AssertionError: assert '!#$hello' == '!#$hello#'\nE         \nE         - !#$hello#\nE         ?         -\nE         + !#$hello\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00021343000000051404, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_numeric_string", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_handles_numeric_string", "run.py", "test", ""], "setup": {"duration": 0.00020454999999941492, "outcome": "passed"}, "call": {"duration": 0.00019320399999944726, "outcome": "passed"}, "teardown": {"duration": 0.00022546800000000644, "outcome": "passed"}}]}, {"created": 1733296045.1870391, "duration": 0.05637931823730469, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 6, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_char_not_in_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_single_char_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_string_with_multiple_chars_to_remove", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_string_with_repeated_first_char", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_string_with_repeated_last_char", "type": "Function", "lineno": 36}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003881049999998609, "outcome": "passed"}, "call": {"duration": 0.0004027450000001487, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0001863979999998655, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018808399999992176, "outcome": "passed"}, "call": {"duration": 0.00017049599999996445, "outcome": "passed"}, "teardown": {"duration": 0.00013622200000007467, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001720640000000273, "outcome": "passed"}, "call": {"duration": 0.00032998600000011535, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'ball' == 'balln'\n  \n  - balln\n  ?     -\n  + ball"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"balloon\", \"o\") == \"balln\"\nE       AssertionError: assert 'ball' == 'balln'\nE         \nE         - balln\nE         ?     -\nE         + ball\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00017836699999973504, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_in_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00017555900000010283, "outcome": "passed"}, "call": {"duration": 0.00015650999999961002, "outcome": "passed"}, "teardown": {"duration": 0.00013364399999993282, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00016620699999991828, "outcome": "passed"}, "call": {"duration": 0.00014551999999978804, "outcome": "passed"}, "teardown": {"duration": 0.00012735500000005118, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00014876199999980244, "outcome": "passed"}, "call": {"duration": 0.00034880300000006415, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'msssspp'\n  \n  - msssspp\n  + mssissipp\n  ?    +  +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"msssspp\"\nE       AssertionError: assert 'mssissipp' == 'msssspp'\nE         \nE         - msssspp\nE         + mssissipp\nE         ?    +  +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017385599999997225, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 24, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017863400000006635, "outcome": "passed"}, "call": {"duration": 0.00015199100000007348, "outcome": "passed"}, "teardown": {"duration": 0.00013002800000005976, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string", "lineno": 27, "outcome": "passed", "keywords": ["test_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00015170400000030781, "outcome": "passed"}, "call": {"duration": 0.0001465359999999194, "outcome": "passed"}, "teardown": {"duration": 0.0001294270000000708, "outcome": "passed"}}, {"nodeid": "run.py::test_string_with_multiple_chars_to_remove", "lineno": 30, "outcome": "passed", "keywords": ["test_string_with_multiple_chars_to_remove", "run.py", "test", ""], "setup": {"duration": 0.00015181599999980477, "outcome": "passed"}, "call": {"duration": 0.0001430629999998878, "outcome": "passed"}, "teardown": {"duration": 0.00013031300000010404, "outcome": "passed"}}, {"nodeid": "run.py::test_string_with_repeated_first_char", "lineno": 33, "outcome": "failed", "keywords": ["test_string_with_repeated_first_char", "run.py", "test", ""], "setup": {"duration": 0.00014810099999973403, "outcome": "passed"}, "call": {"duration": 0.00028818899999993874, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'a' == 'aaabbbccc'\n  \n  - aaabbbccc\n  + a"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_string_with_repeated_first_char():\n>       assert remove_Occ(\"aaabbbccc\", \"a\") == \"aaabbbccc\"\nE       AssertionError: assert 'a' == 'aaabbbccc'\nE         \nE         - aaabbbccc\nE         + a\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00017334299999971492, "outcome": "passed"}}, {"nodeid": "run.py::test_string_with_repeated_last_char", "lineno": 36, "outcome": "failed", "keywords": ["test_string_with_repeated_last_char", "run.py", "test", ""], "setup": {"duration": 0.00016867599999992322, "outcome": "passed"}, "call": {"duration": 0.0003500999999999088, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 38, "message": "AssertionError: assert 'aaabbbc' == 'aaabbbcc'\n  \n  - aaabbbcc\n  ?        -\n  + aaabbbc"}, "traceback": [{"path": "run.py", "lineno": 38, "message": "AssertionError"}], "longrepr": "def test_string_with_repeated_last_char():\n>       assert remove_Occ(\"aaabbbccc\", \"c\") == \"aaabbbcc\"\nE       AssertionError: assert 'aaabbbc' == 'aaabbbcc'\nE         \nE         - aaabbbcc\nE         ?        -\nE         + aaabbbc\n\nrun.py:38: AssertionError"}, "teardown": {"duration": 0.000198131999999962, "outcome": "passed"}}]}, {"created": 1733296045.7381642, "duration": 0.057237863540649414, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 4, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_case_sensitivity", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00029758500000021115, "outcome": "passed"}, "call": {"duration": 0.000448118999999636, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020601599999992004, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018284400000023737, "outcome": "passed"}, "call": {"duration": 0.00016949199999949371, "outcome": "passed"}, "teardown": {"duration": 0.00013674499999982714, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.0001710400000005663, "outcome": "passed"}, "call": {"duration": 0.00034573400000059706, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'hell w' == 'hell world'\n  \n  - hell world\n  ?       ----\n  + hell w"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"hello world\", \"o\") == \"hell world\"\nE       AssertionError: assert 'hell w' == 'hell world'\nE         \nE         - hell world\nE         ?       ----\nE         + hell w\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00018087499999985823, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017018499999998937, "outcome": "passed"}, "call": {"duration": 0.00015095300000034229, "outcome": "passed"}, "teardown": {"duration": 0.0001362179999997437, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016263199999944078, "outcome": "passed"}, "call": {"duration": 0.0001495609999997427, "outcome": "passed"}, "teardown": {"duration": 0.00014220600000047767, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015371399999963842, "outcome": "passed"}, "call": {"duration": 0.0003285900000005171, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.0001793949999999711, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_handles_single_character_string", "run.py", "test", ""], "setup": {"duration": 0.00016997200000012924, "outcome": "passed"}, "call": {"duration": 0.00015235299999982743, "outcome": "passed"}, "teardown": {"duration": 0.00013683800000041657, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_characters", "run.py", "test", ""], "setup": {"duration": 0.00015331200000012757, "outcome": "passed"}, "call": {"duration": 0.0003354369999994944, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_characters():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017072999999978578, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_case_sensitivity", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_case_sensitivity", "run.py", "test", ""], "setup": {"duration": 0.00016576499999931826, "outcome": "passed"}, "call": {"duration": 0.00035885499999999126, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'HeloWor' == 'HeoWorld'\n  \n  - HeoWorld\n  ?       --\n  + HeloWor\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_case_sensitivity():\n>       assert remove_Occ(\"HelloWorld\", \"l\") == \"HeoWorld\"\nE       AssertionError: assert 'HeloWor' == 'HeoWorld'\nE         \nE         - HeoWorld\nE         ?       --\nE         + HeloWor\nE         ?   +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017932300000023105, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00018978100000044407, "outcome": "passed"}, "call": {"duration": 0.0003701249999998879, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert '!#hello' == '!#hello#$'\n  \n  - !#hello#$\n  ?        --\n  + !#hello"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_special_characters():\n>       assert remove_Occ(\"!@#hello@#$\", \"@\") == \"!#hello#$\"\nE       AssertionError: assert '!#hello' == '!#hello#$'\nE         \nE         - !#hello#$\nE         ?        --\nE         + !#hello\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.0002036199999997379, "outcome": "passed"}}]}, {"created": 1733296045.028825, "duration": 0.05594468116760254, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 4, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_single_character", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_leading_occurrence", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_trailing_occurrence", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_case_sensitive", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002991110000003516, "outcome": "passed"}, "call": {"duration": 0.0004192390000001822, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00019876300000021274, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017673299999998449, "outcome": "passed"}, "call": {"duration": 0.00036913699999985283, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00017682000000007747, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00017933999999986128, "outcome": "passed"}, "call": {"duration": 0.0003077230000005926, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'a' == 'aple'\n  \n  - aple\n  + a"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"apple\", \"p\") == \"aple\"\nE       AssertionError: assert 'a' == 'aple'\nE         \nE         - aple\nE         + a\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00018078299999935155, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001666230000001434, "outcome": "passed"}, "call": {"duration": 0.0001534709999999606, "outcome": "passed"}, "teardown": {"duration": 0.00013852399999958465, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016013100000034086, "outcome": "passed"}, "call": {"duration": 0.00014581499999977154, "outcome": "passed"}, "teardown": {"duration": 0.00013029199999969876, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_character", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_single_character", "run.py", "test", ""], "setup": {"duration": 0.00015006900000003043, "outcome": "passed"}, "call": {"duration": 0.00014423699999976947, "outcome": "passed"}, "teardown": {"duration": 0.0001277780000004114, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.000146587999999781, "outcome": "passed"}, "call": {"duration": 0.0003534500000004215, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017017299999988467, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_leading_occurrence", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_leading_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017077899999939916, "outcome": "passed"}, "call": {"duration": 0.00015075399999986416, "outcome": "passed"}, "teardown": {"duration": 0.00013071399999997624, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_trailing_occurrence", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_trailing_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015871300000025457, "outcome": "passed"}, "call": {"duration": 0.00035556300000028074, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'bnan' == 'banan'\n  \n  - banan\n  ?  -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_trailing_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnan' == 'banan'\nE         \nE         - banan\nE         ?  -\nE         + bnan\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017401200000044525, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_sensitive", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_case_sensitive", "run.py", "test", ""], "setup": {"duration": 0.00016977599999989934, "outcome": "passed"}, "call": {"duration": 0.00032791500000062257, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'Bnan' == 'Bnanan'\n  \n  - Bnanan\n  ?     --\n  + Bnan"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_case_sensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnanan\"\nE       AssertionError: assert 'Bnan' == 'Bnanan'\nE         \nE         - Bnanan\nE         ?     --\nE         + Bnan\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00021408100000019914, "outcome": "passed"}}]}, {"created": 1733296045.8296428, "duration": 0.05049324035644531, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 4, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_single_character", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_multiple_same_characters", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00032745799999922554, "outcome": "passed"}, "call": {"duration": 0.0004984600000002004, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heo'\n  \n  - heo\n  ?   -\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heo\"\nE       AssertionError: assert 'he' == 'heo'\nE         \nE         - heo\nE         ?   -\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00019820899999967168, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017980400000006114, "outcome": "passed"}, "call": {"duration": 0.00017307000000066353, "outcome": "passed"}, "teardown": {"duration": 0.00013969200000030213, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.0001602189999996284, "outcome": "passed"}, "call": {"duration": 0.0003509649999999809, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00017495299999925606, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016860800000007004, "outcome": "passed"}, "call": {"duration": 0.0001518450000004279, "outcome": "passed"}, "teardown": {"duration": 0.0001643180000003852, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017327599999994447, "outcome": "passed"}, "call": {"duration": 0.0001488199999997164, "outcome": "passed"}, "teardown": {"duration": 0.00013065400000034089, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_character", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_single_character", "run.py", "test", ""], "setup": {"duration": 0.00015464499999939818, "outcome": "passed"}, "call": {"duration": 0.00016031400000038332, "outcome": "passed"}, "teardown": {"duration": 0.00012841000000030078, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016065699999945338, "outcome": "passed"}, "call": {"duration": 0.00034980099999959435, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00018661100000016972, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_same_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_same_characters", "run.py", "test", ""], "setup": {"duration": 0.00017069000000002887, "outcome": "passed"}, "call": {"duration": 0.00028809199999990653, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'aa' == ''\n  \n  + aa"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_same_characters():\n>       assert remove_Occ(\"aaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aa' == ''\nE         \nE         + aa\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00021284399999998982, "outcome": "passed"}}]}, {"created": 1733296045.351019, "duration": 0.06745648384094238, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 3, "failed": 7, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_case_insensitive", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_repeated_chars", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_char_same", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00037212699999988885, "outcome": "passed"}, "call": {"duration": 0.0002688399999999369, "outcome": "passed"}, "teardown": {"duration": 0.00017910300000001378, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016755800000001209, "outcome": "passed"}, "call": {"duration": 0.0002916550000000573, "outcome": "passed"}, "teardown": {"duration": 0.00021817800000012433, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001661570000000001, "outcome": "passed"}, "call": {"duration": 0.00044176799999995353, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.0002746629999998973, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_with_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019187200000003735, "outcome": "passed"}, "call": {"duration": 0.000418797999999887, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'baa' == 'banba'\n  \n  - banba\n  ?   --\n  + baa"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_last_occurrence():\n>       assert remove_Occ(\"banana\", \"n\") == \"banba\"\nE       AssertionError: assert 'baa' == 'banba'\nE         \nE         - banba\nE         ?   --\nE         + baa\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.004153035999999943, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00023877199999988719, "outcome": "passed"}, "call": {"duration": 0.0003747139999998872, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00021937499999991061, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_case_insensitive", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_with_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.0002085869999999268, "outcome": "passed"}, "call": {"duration": 0.0004007520000000042, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'Bnan' == 'Bnana'\n  \n  - Bnana\n  ?     -\n  + Bnan"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_case_insensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnana\"\nE       AssertionError: assert 'Bnan' == 'Bnana'\nE         \nE         - Bnana\nE         ?     -\nE         + Bnan\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00020811199999992702, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00020109899999987135, "outcome": "passed"}, "call": {"duration": 0.0003432569999999302, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'bn' == 'b@nna'\n  \n  - b@nna\n  + bn"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"b@n@na\", \"@\") == \"b@nna\"\nE       AssertionError: assert 'bn' == 'b@nna'\nE         \nE         - b@nna\nE         + bn\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00019383499999992004, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_with_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.0001815549999999444, "outcome": "passed"}, "call": {"duration": 0.0001569640000000927, "outcome": "passed"}, "teardown": {"duration": 0.00023484099999993013, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_chars", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_chars", "run.py", "test", ""], "setup": {"duration": 0.0001733649999999809, "outcome": "passed"}, "call": {"duration": 0.0003187300000000448, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'aa' == 'aaacc'\n  \n  - aaacc\n  + aa"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_chars():\n>       assert remove_Occ(\"aabbcc\", \"b\") == \"aaacc\"\nE       AssertionError: assert 'aa' == 'aaacc'\nE         \nE         - aaacc\nE         + aa\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00018748500000009827, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_char_same", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_char_same", "run.py", "test", ""], "setup": {"duration": 0.00017344100000005191, "outcome": "passed"}, "call": {"duration": 0.000370885000000154, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'bacab' == 'baca'\n  \n  - baca\n  + bacab\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_char_same():\n>       assert remove_Occ(\"abacaba\", \"a\") == \"baca\"\nE       AssertionError: assert 'bacab' == 'baca'\nE         \nE         - baca\nE         + bacab\nE         ?     +\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.0002253869999999658, "outcome": "passed"}}]}, {"created": 1733296045.3262026, "duration": 0.06415367126464844, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 4, "failed": 8, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_both_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_multiple_same_char", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_only_one_char", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_Occ_with_numeric_string", "type": "Function", "lineno": 36}, {"nodeid": "run.py::test_remove_Occ_with_multiple_same_chars_at_end", "type": "Function", "lineno": 39}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00037171199999974647, "outcome": "passed"}, "call": {"duration": 0.0001698079999998825, "outcome": "passed"}, "teardown": {"duration": 0.0001506540000004719, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016263799999993722, "outcome": "passed"}, "call": {"duration": 0.00014797399999988414, "outcome": "passed"}, "teardown": {"duration": 0.0001362160000004664, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001650350000002021, "outcome": "passed"}, "call": {"duration": 0.0003646200000000377, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.0001947960000006077, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_with_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018010499999920881, "outcome": "passed"}, "call": {"duration": 0.0003595299999998858, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'baa' == 'banba'\n  \n  - banba\n  ?   --\n  + baa"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_last_occurrence():\n>       assert remove_Occ(\"banana\", \"n\") == \"banba\"\nE       AssertionError: assert 'baa' == 'banba'\nE         \nE         - banba\nE         ?   --\nE         + baa\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00018695900000054166, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_both_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_both_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00018545500000044512, "outcome": "passed"}, "call": {"duration": 0.0003527839999994953, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bracadabr' == 'brcdbr'\n  \n  - brcdbr\n  + bracadabr\n  ?   + + +"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_both_occurrences():\n>       assert remove_Occ(\"abracadabra\", \"a\") == \"brcdbr\"\nE       AssertionError: assert 'bracadabr' == 'brcdbr'\nE         \nE         - brcdbr\nE         + bracadabr\nE         ?   + + +\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00017458300000061655, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_same_char", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_same_char", "run.py", "test", ""], "setup": {"duration": 0.00016825400000008983, "outcome": "passed"}, "call": {"duration": 0.0003493800000002878, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_same_char():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00018703599999980725, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.0001705660000004272, "outcome": "passed"}, "call": {"duration": 0.0003049100000005467, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'eve' == 'levl'\n  \n  - levl\n  + eve"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_same_char():\n>       assert remove_Occ(\"level\", \"l\") == \"levl\"\nE       AssertionError: assert 'eve' == 'levl'\nE         \nE         - levl\nE         + eve\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017895199999973244, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_only_one_char", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_only_one_char", "run.py", "test", ""], "setup": {"duration": 0.0001687040000000195, "outcome": "passed"}, "call": {"duration": 0.00029923700000011877, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'aaa' == ''\n  \n  + aaa"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_only_one_char():\n>       assert remove_Occ(\"aaaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aaa' == ''\nE         \nE         + aaa\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017773099999995878, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00018182200000005366, "outcome": "passed"}, "call": {"duration": 0.00015300499999959527, "outcome": "passed"}, "teardown": {"duration": 0.0001347670000004797, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016114000000033712, "outcome": "passed"}, "call": {"duration": 0.0003323420000000965, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert '!#$%a' == '!#$%a#'\n  \n  - !#$%a#\n  ?      -\n  + !#$%a"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"!@#$%a@#\", \"@\") == \"!#$%a#\"\nE       AssertionError: assert '!#$%a' == '!#$%a#'\nE         \nE         - !#$%a#\nE         ?      -\nE         + !#$%a\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.0001855009999998103, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_numeric_string", "lineno": 36, "outcome": "passed", "keywords": ["test_remove_Occ_with_numeric_string", "run.py", "test", ""], "setup": {"duration": 0.00016942400000008462, "outcome": "passed"}, "call": {"duration": 0.00015135299999968765, "outcome": "passed"}, "teardown": {"duration": 0.0001330800000003407, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_same_chars_at_end", "lineno": 39, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_same_chars_at_end", "run.py", "test", ""], "setup": {"duration": 0.00015782699999977723, "outcome": "passed"}, "call": {"duration": 0.0003334219999997501, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 41, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 41, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_same_chars_at_end():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:41: AssertionError"}, "teardown": {"duration": 0.00020760399999986134, "outcome": "passed"}}]}, {"created": 1733296044.9325972, "duration": 0.05209779739379883, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 6, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_case_insensitive", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_consecutive_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002843160000001177, "outcome": "passed"}, "call": {"duration": 0.00037850999999999857, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'he' == 'heloo'\n  \n  - heloo\n  + he"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\nE       AssertionError: assert 'he' == 'heloo'\nE         \nE         - heloo\nE         + he\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020352700000003665, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001973699999999745, "outcome": "passed"}, "call": {"duration": 0.00015758599999982081, "outcome": "passed"}, "teardown": {"duration": 0.00013768200000008335, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_returns_original_string_if_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00016411200000021609, "outcome": "passed"}, "call": {"duration": 0.00014668800000006144, "outcome": "passed"}, "teardown": {"duration": 0.00012904299999982882, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001509980000000688, "outcome": "passed"}, "call": {"duration": 0.00014997000000027683, "outcome": "passed"}, "teardown": {"duration": 0.0001305289999997683, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_single_character_string", "run.py", "test", ""], "setup": {"duration": 0.00014856899999982076, "outcome": "passed"}, "call": {"duration": 0.00014000299999983312, "outcome": "passed"}, "teardown": {"duration": 0.00015457400000018495, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00014796699999974905, "outcome": "passed"}, "call": {"duration": 0.0003501570000001841, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.0001746050000002164, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrences", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001717589999996605, "outcome": "passed"}, "call": {"duration": 0.00016506000000005017, "outcome": "passed"}, "teardown": {"duration": 0.00013524899999994844, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_case_insensitive", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_handles_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00015388100000013338, "outcome": "passed"}, "call": {"duration": 0.00033073599999999814, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'He' == 'Heo'\n  \n  - Heo\n  ?   -\n  + He"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_case_insensitive():\n>       assert remove_Occ(\"Hello\", \"l\") == \"Heo\"\nE       AssertionError: assert 'He' == 'Heo'\nE         \nE         - Heo\nE         ?   -\nE         + He\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0001785049999996069, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016927099999985984, "outcome": "passed"}, "call": {"duration": 0.00016541200000030898, "outcome": "passed"}, "teardown": {"duration": 0.00013285400000029313, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_consecutive_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_handles_consecutive_characters", "run.py", "test", ""], "setup": {"duration": 0.00015458099999987596, "outcome": "passed"}, "call": {"duration": 0.00034740099999996943, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'bookkep' == 'bookkeepr'\n  \n  - bookkeepr\n  ?       - -\n  + bookkep"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_consecutive_characters():\n>       assert remove_Occ(\"bookkeeper\", \"e\") == \"bookkeepr\"\nE       AssertionError: assert 'bookkep' == 'bookkeepr'\nE         \nE         - bookkeepr\nE         ?       - -\nE         + bookkep\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00020644599999997126, "outcome": "passed"}}]}, {"created": 1733296044.7090178, "duration": 0.053619384765625, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 4, "failed": 4, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_no_char", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_first_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_last_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_both_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_no_char", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_char", "run.py", "test", ""], "setup": {"duration": 0.00029895600000040545, "outcome": "passed"}, "call": {"duration": 0.00017358699999991956, "outcome": "passed"}, "teardown": {"duration": 0.00015146399999999005, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_first_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017577599999984983, "outcome": "passed"}, "call": {"duration": 0.0004559580000003116, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00026763499999971074, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_last_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00020479099999981543, "outcome": "passed"}, "call": {"duration": 0.0004243189999999508, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'baa' == 'banba'\n  \n  - banba\n  ?   --\n  + baa"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_last_occurrence():\n>       assert remove_Occ(\"banana\", \"n\") == \"banba\"\nE       AssertionError: assert 'baa' == 'banba'\nE         \nE         - banba\nE         ?   --\nE         + baa\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.000175036999999989, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_both_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_both_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017162099999978864, "outcome": "passed"}, "call": {"duration": 0.00032284400000026636, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'hara' == 'harater'\n  \n  - harater\n  + hara"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_both_occurrences():\n>       assert remove_Occ(\"character\", \"c\") == \"harater\"\nE       AssertionError: assert 'hara' == 'harater'\nE         \nE         - harater\nE         + hara\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017117699999991132, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00016797100000021103, "outcome": "passed"}, "call": {"duration": 0.00015214799999974105, "outcome": "passed"}, "teardown": {"duration": 0.00013100899999995974, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015586699999969866, "outcome": "passed"}, "call": {"duration": 0.0003322070000000288, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissipp' == 'mssissippi'\n  \n  - mssissippi\n  ?          -\n  + mssissipp"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssissippi\"\nE       AssertionError: assert 'mssissipp' == 'mssissippi'\nE         \nE         - mssissippi\nE         ?          -\nE         + mssissipp\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00018477599999977556, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.0001707539999999952, "outcome": "passed"}, "call": {"duration": 0.00015235100000010604, "outcome": "passed"}, "teardown": {"duration": 0.00013098799999999855, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015608899999985937, "outcome": "passed"}, "call": {"duration": 0.00014356900000001005, "outcome": "passed"}, "teardown": {"duration": 0.00016582000000031627, "outcome": "passed"}}]}, {"created": 1733296044.7828581, "duration": 0.06828451156616211, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 2, "failed": 8, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_case_insensitive", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_multiple_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_special_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0003998199999997176, "outcome": "passed"}, "call": {"duration": 0.0002780209999997396, "outcome": "passed"}, "teardown": {"duration": 0.0001942130000003317, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001950410000000069, "outcome": "passed"}, "call": {"duration": 0.00018244699999980796, "outcome": "passed"}, "teardown": {"duration": 0.00017032399999994396, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00020044299999977255, "outcome": "passed"}, "call": {"duration": 0.0004530320000002419, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.0002770739999999883, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_with_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.000231112999999894, "outcome": "passed"}, "call": {"duration": 0.0004556980000001154, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'baa' == 'banba'\n  \n  - banba\n  ?   --\n  + baa"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_last_occurrence():\n>       assert remove_Occ(\"banana\", \"n\") == \"banba\"\nE       AssertionError: assert 'baa' == 'banba'\nE         \nE         - banba\nE         ?   --\nE         + baa\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00019996799999999482, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001962420000003462, "outcome": "passed"}, "call": {"duration": 0.00038542500000016133, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bnan' == 'bnana'\n  \n  - bnana\n  ?     -\n  + bnan"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnana\"\nE       AssertionError: assert 'bnan' == 'bnana'\nE         \nE         - bnana\nE         ?     -\nE         + bnan\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.0001859469999998531, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_case_insensitive", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_with_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00019323499999979177, "outcome": "passed"}, "call": {"duration": 0.00038301900000003997, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'Bnan' == 'Bnana'\n  \n  - Bnana\n  ?     -\n  + Bnan"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_case_insensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnana\"\nE       AssertionError: assert 'Bnan' == 'Bnana'\nE         \nE         - Bnana\nE         ?     -\nE         + Bnan\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00019573900000002808, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00019123600000003904, "outcome": "passed"}, "call": {"duration": 0.0003829070000000989, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'helloworld' == 'hello@worl'\n  \n  - hello@worl\n  ?      -\n  + helloworld\n  ?          +"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"hello@world\", \"@\") == \"hello@worl\"\nE       AssertionError: assert 'helloworld' == 'hello@worl'\nE         \nE         - hello@worl\nE         ?      -\nE         + helloworld\nE         ?          +\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00018679300000012944, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00019470400000010102, "outcome": "passed"}, "call": {"duration": 0.00033602200000037996, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'hello' == 'hello@worl'\n  \n  - hello@worl\n  + hello"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_special_characters():\n>       assert remove_Occ(\"hello@@world\", \"@\") == \"hello@worl\"\nE       AssertionError: assert 'hello' == 'hello@worl'\nE         \nE         - hello@worl\nE         + hello\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00018597700000011486, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00019074400000018699, "outcome": "passed"}, "call": {"duration": 0.0003811110000002671, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'hello@' == 'hello@worl'\n  \n  - hello@worl\n  ?       ----\n  + hello@"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_special_characters():\n>       assert remove_Occ(\"hello@@@world\", \"@\") == \"hello@worl\"\nE       AssertionError: assert 'hello@' == 'hello@worl'\nE         \nE         - hello@worl\nE         ?       ----\nE         + hello@\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00018550799999994538, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_special_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00019523699999979272, "outcome": "passed"}, "call": {"duration": 0.00037613300000005623, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'hello@world' == 'hello@worl'\n  \n  - hello@worl\n  + hello@world\n  ?           +"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_special_characters():\n>       assert remove_Occ(\"@hello@world@\", \"@\") == \"hello@worl\"\nE       AssertionError: assert 'hello@world' == 'hello@worl'\nE         \nE         - hello@worl\nE         + hello@world\nE         ?           +\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00023817000000025956, "outcome": "passed"}}]}, {"created": 1733296045.6496706, "duration": 0.047414302825927734, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 2, "failed": 3, "total": 5, "collected": 5}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test1", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test2", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test3", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test4", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test5", "type": "Function", "lineno": 18}]}], "tests": [{"nodeid": "run.py::test1", "lineno": 6, "outcome": "passed", "keywords": ["test1", "run.py", "test", ""], "setup": {"duration": 0.0003486529999996435, "outcome": "passed"}, "call": {"duration": 0.0002052859999999157, "outcome": "passed"}, "teardown": {"duration": 0.00015768899999990538, "outcome": "passed"}}, {"nodeid": "run.py::test2", "lineno": 9, "outcome": "failed", "keywords": ["test2", "run.py", "test", ""], "setup": {"duration": 0.0001780499999997076, "outcome": "passed"}, "call": {"duration": 0.0004437090000006805, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bcda' == 'bcd'\n  \n  - bcd\n  + bcda\n  ?    +"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test2():\n>       assert remove_Occ(\"abcda\",\"a\") == \"bcd\"\nE       AssertionError: assert 'bcda' == 'bcd'\nE         \nE         - bcd\nE         + bcda\nE         ?    +\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.0003350200000005188, "outcome": "passed"}}, {"nodeid": "run.py::test3", "lineno": 12, "outcome": "failed", "keywords": ["test3", "run.py", "test", ""], "setup": {"duration": 0.00026276799999980227, "outcome": "passed"}, "call": {"duration": 0.0004387210000000863, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'HP' == 'H'\n  \n  - H\n  + HP"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test3():\n>       assert remove_Occ(\"PHP\",\"P\") == \"H\"\nE       AssertionError: assert 'HP' == 'H'\nE         \nE         - H\nE         + HP\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00019281199999987564, "outcome": "passed"}}, {"nodeid": "run.py::test4", "lineno": 15, "outcome": "failed", "keywords": ["test4", "run.py", "test", ""], "setup": {"duration": 0.00018613900000019612, "outcome": "passed"}, "call": {"duration": 0.00041802500000009957, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'helolloll' == 'helollol'\n  \n  - helollol\n  + helolloll\n  ?         +"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test4():\n>       assert remove_Occ(\"hellolloll\",\"l\") == \"helollol\"\nE       AssertionError: assert 'helolloll' == 'helollol'\nE         \nE         - helollol\nE         + helolloll\nE         ?         +\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00018300199999998767, "outcome": "passed"}}, {"nodeid": "run.py::test5", "lineno": 18, "outcome": "passed", "keywords": ["test5", "run.py", "test", ""], "setup": {"duration": 0.00018863999999929604, "outcome": "passed"}, "call": {"duration": 0.00017013300000012777, "outcome": "passed"}, "teardown": {"duration": 0.00018798500000016816, "outcome": "passed"}}]}, {"created": 1733296046.38889, "duration": 0.06000471115112305, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 6, "failed": 6, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_char_at_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_char_at_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_case_sensitive", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_special_chars", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_multiple_special_chars", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_whole_string", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_Occ_empty_string_input", "type": "Function", "lineno": 36}, {"nodeid": "run.py::test_remove_Occ_string_with_no_removal", "type": "Function", "lineno": 39}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.00043169299999945565, "outcome": "passed"}, "call": {"duration": 0.00018043199999961956, "outcome": "passed"}, "teardown": {"duration": 0.00018036200000004499, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00017667600000059736, "outcome": "passed"}, "call": {"duration": 0.0003984250000002021, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnana' == 'bnan'\n  \n  - bnan\n  + bnana\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_chars():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnan\"\nE       AssertionError: assert 'bnana' == 'bnan'\nE         \nE         - bnan\nE         + bnana\nE         ?     +\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00019139000000034656, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017754700000072177, "outcome": "passed"}, "call": {"duration": 0.00015039999999988396, "outcome": "passed"}, "teardown": {"duration": 0.00014381700000054565, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015474900000000957, "outcome": "passed"}, "call": {"duration": 0.00013856300000014699, "outcome": "passed"}, "teardown": {"duration": 0.00012622699999997877, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_at_start", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.0001599810000003643, "outcome": "passed"}, "call": {"duration": 0.0003289420000003318, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'pplee' == 'pple'\n  \n  - pple\n  + pplee\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_char_at_start():\n>       assert remove_Occ(\"apple\", \"a\") == \"pple\"\nE       AssertionError: assert 'pplee' == 'pple'\nE         \nE         - pple\nE         + pplee\nE         ?     +\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00018854200000006927, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_at_end", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00018195900000073095, "outcome": "passed"}, "call": {"duration": 0.00033073400000027675, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mangg' == 'mang'\n  \n  - mang\n  + mangg\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_char_at_end():\n>       assert remove_Occ(\"mango\", \"o\") == \"mang\"\nE       AssertionError: assert 'mangg' == 'mang'\nE         \nE         - mang\nE         + mangg\nE         ?     +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.0001721180000000544, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_sensitive", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_case_sensitive", "run.py", "test", ""], "setup": {"duration": 0.00017589199999967775, "outcome": "passed"}, "call": {"duration": 0.00015655400000014197, "outcome": "passed"}, "teardown": {"duration": 0.00013299900000074416, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_special_chars", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_special_chars", "run.py", "test", ""], "setup": {"duration": 0.00015181999999924756, "outcome": "passed"}, "call": {"duration": 0.00036110499999963963, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '!#hello$' == '!#hello#$'\n  \n  - !#hello#$\n  ?        -\n  + !#hello$"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_special_chars():\n>       assert remove_Occ(\"!@#hello@#$\", \"@\") == \"!#hello#$\"\nE       AssertionError: assert '!#hello$' == '!#hello#$'\nE         \nE         - !#hello#$\nE         ?        -\nE         + !#hello$\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017417200000036104, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_special_chars", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_special_chars", "run.py", "test", ""], "setup": {"duration": 0.00017094699999997687, "outcome": "passed"}, "call": {"duration": 0.00034728599999933607, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert '!hello!!' == 'hello!!'\n  \n  - hello!!\n  + !hello!!\n  ? +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_special_chars():\n>       assert remove_Occ(\"!!hello!!\", \"!\") == \"hello!!\"\nE       AssertionError: assert '!hello!!' == 'hello!!'\nE         \nE         - hello!!\nE         + !hello!!\nE         ? +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017583199999915422, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_whole_string", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_whole_string", "run.py", "test", ""], "setup": {"duration": 0.0001683310000002436, "outcome": "passed"}, "call": {"duration": 0.00033729999999998483, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'est' == 'es'\n  \n  - es\n  + est\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_whole_string():\n>       assert remove_Occ(\"test\", \"t\") == \"es\"\nE       AssertionError: assert 'est' == 'es'\nE         \nE         - es\nE         + est\nE         ?   +\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00017216700000055596, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string_input", "lineno": 36, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string_input", "run.py", "test", ""], "setup": {"duration": 0.0001814100000006036, "outcome": "passed"}, "call": {"duration": 0.00014897400000002392, "outcome": "passed"}, "teardown": {"duration": 0.00013412099999943194, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_string_with_no_removal", "lineno": 39, "outcome": "passed", "keywords": ["test_remove_Occ_string_with_no_removal", "run.py", "test", ""], "setup": {"duration": 0.00015504599999971447, "outcome": "passed"}, "call": {"duration": 0.00014321800000072216, "outcome": "passed"}, "teardown": {"duration": 0.00015800000000076864, "outcome": "passed"}}]}, {"created": 1733296044.7208464, "duration": 0.060167551040649414, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 4, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_single_character_from_start", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_middle", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_OCC_removes_single_character_from_end", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_start", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_middle", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_leaves_string_unchanged_if_no_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_single_character", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_multiple_same_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_single_character_from_start", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_single_character_from_start", "run.py", "test", ""], "setup": {"duration": 0.00031422200000008615, "outcome": "passed"}, "call": {"duration": 0.00047373100000047685, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'elloo' == 'ello'\n  \n  - ello\n  + elloo\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_single_character_from_start():\n>       assert remove_Occ(\"hello\", \"h\") == \"ello\"\nE       AssertionError: assert 'elloo' == 'ello'\nE         \nE         - ello\nE         + elloo\nE         ?     +\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0002154269999996572, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_middle", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_removes_single_character_from_middle", "run.py", "test", ""], "setup": {"duration": 0.00018410599999985067, "outcome": "passed"}, "call": {"duration": 0.0001793550000002142, "outcome": "passed"}, "teardown": {"duration": 0.000142033999999569, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_OCC_removes_single_character_from_end", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_OCC_removes_single_character_from_end", "run.py", "test", ""], "setup": {"duration": 0.000170149999999758, "outcome": "passed"}, "call": {"duration": 0.00038460599999989853, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'worll' == 'worl'\n  \n  - worl\n  + worll\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_OCC_removes_single_character_from_end():\n>       assert remove_Occ(\"world\", \"d\") == \"worl\"\nE       AssertionError: assert 'worll' == 'worl'\nE         \nE         - worl\nE         + worll\nE         ?     +\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00017370299999974748, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_start", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_start", "run.py", "test", ""], "setup": {"duration": 0.00018003799999988246, "outcome": "passed"}, "call": {"duration": 0.00031006199999961126, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'br' == 'bkkeeper'\n  \n  - bkkeeper\n  + br"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_start():\n>       assert remove_Occ(\"bookkeeper\", \"o\") == \"bkkeeper\"\nE       AssertionError: assert 'br' == 'bkkeeper'\nE         \nE         - bkkeeper\nE         + br\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.0001830969999998544, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_middle", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_middle", "run.py", "test", ""], "setup": {"duration": 0.00016893500000048078, "outcome": "passed"}, "call": {"duration": 0.0001525829999993178, "outcome": "passed"}, "teardown": {"duration": 0.00013210599999968764, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_end", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_end", "run.py", "test", ""], "setup": {"duration": 0.00016154999999962172, "outcome": "passed"}, "call": {"duration": 0.00033704600000028506, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'chaacter' == 'chacter'\n  \n  - chacter\n  + chaacter\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_end():\n>       assert remove_Occ(\"character\", \"r\") == \"chacter\"\nE       AssertionError: assert 'chaacter' == 'chacter'\nE         \nE         - chacter\nE         + chaacter\nE         ?   +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00016983699999961743, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_leaves_string_unchanged_if_no_occurrences", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_leaves_string_unchanged_if_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001642159999999393, "outcome": "passed"}, "call": {"duration": 0.00014573100000081496, "outcome": "passed"}, "teardown": {"duration": 0.0001332899999999526, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00018858899999951717, "outcome": "passed"}, "call": {"duration": 0.0001402150000000546, "outcome": "passed"}, "teardown": {"duration": 0.00012544799999947287, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_single_character", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_string_with_single_character", "run.py", "test", ""], "setup": {"duration": 0.00015029600000016075, "outcome": "passed"}, "call": {"duration": 0.00015295300000062184, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 5, "message": "IndexError: string index out of range"}, "traceback": [{"path": "run.py", "lineno": 32, "message": ""}, {"path": "run.py", "lineno": 5, "message": "IndexError"}], "longrepr": "def test_remove_Occ_handles_string_with_single_character():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char not in s:\n            return s\n        s = s.replace(char, \"\", 1)  # Remove the first occurrence\n>       s = s.rsplit(char, 1)[0] + s[-1]  # Remove the last occurrence\nE       IndexError: string index out of range\n\nrun.py:5: IndexError"}, "teardown": {"duration": 0.00018378899999937914, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_multiple_same_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_handles_string_with_multiple_same_characters", "run.py", "test", ""], "setup": {"duration": 0.00016639800000017857, "outcome": "passed"}, "call": {"duration": 0.00028005099999983685, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'aa' == ''\n  \n  + aa"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_string_with_multiple_same_characters():\n>       assert remove_Occ(\"aaa\", \"a\") == \"\"\nE       AssertionError: assert 'aa' == ''\nE         \nE         + aa\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.0002131619999996559, "outcome": "passed"}}]}, {"created": 1733296044.728305, "duration": 0.05558180809020996, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 3, "failed": 6, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence_from_left", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_first_occurrence_from_right", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_case_sensitive", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_string_without_target_character", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_removes_all_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_characters", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence_from_left", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence_from_left", "run.py", "test", ""], "setup": {"duration": 0.00031752800000006687, "outcome": "passed"}, "call": {"duration": 0.0002469060000001022, "outcome": "passed"}, "teardown": {"duration": 0.0001723849999999416, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_first_occurrence_from_right", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence_from_right", "run.py", "test", ""], "setup": {"duration": 0.00017988300000038038, "outcome": "passed"}, "call": {"duration": 0.00038171099999928515, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'helll' == 'hell'\n  \n  - hell\n  + helll\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence_from_right():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\nE       AssertionError: assert 'helll' == 'hell'\nE         \nE         - hell\nE         + helll\nE         ?     +\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00019382199999995464, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_case_sensitive", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_case_sensitive", "run.py", "test", ""], "setup": {"duration": 0.0001875000000000071, "outcome": "passed"}, "call": {"duration": 0.00034014399999993117, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'HeLOO' == 'HeLo'\n  \n  - HeLo\n  + HeLOO"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_case_sensitive():\n>       assert remove_Occ(\"HeLlO\", \"l\") == \"HeLo\"\nE       AssertionError: assert 'HeLOO' == 'HeLo'\nE         \nE         - HeLo\nE         + HeLOO\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00018027099999962104, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.000171912999999968, "outcome": "passed"}, "call": {"duration": 0.00015364099999981562, "outcome": "passed"}, "teardown": {"duration": 0.00013990999999968778, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_without_target_character", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_without_target_character", "run.py", "test", ""], "setup": {"duration": 0.00016349800000003967, "outcome": "passed"}, "call": {"duration": 0.00014710800000017343, "outcome": "passed"}, "teardown": {"duration": 0.00014356799999948322, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_all_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_removes_all_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001542089999997387, "outcome": "passed"}, "call": {"duration": 0.00032921900000015825, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'bnana' == 'bnn'\n  \n  - bnn\n  + bnana\n  ?   + +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_all_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnn\"\nE       AssertionError: assert 'bnana' == 'bnn'\nE         \nE         - bnn\nE         + bnana\nE         ?   + +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017895700000014614, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_characters", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_characters", "run.py", "test", ""], "setup": {"duration": 0.00018732699999990388, "outcome": "passed"}, "call": {"duration": 0.000364174000000439, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'mssissippi' == 'msssspp'\n  \n  - msssspp\n  + mssissippi\n  ?    +  +  +"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_characters():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"msssspp\"\nE       AssertionError: assert 'mssissippi' == 'msssspp'\nE         \nE         - msssspp\nE         + mssissippi\nE         ?    +  +  +\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017768299999953996, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_characters", "run.py", "test", ""], "setup": {"duration": 0.00018037800000048065, "outcome": "passed"}, "call": {"duration": 0.0002896369999998427, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'aaaa' == ''\n  \n  + aaaa"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_characters():\n>       assert remove_Occ(\"aaaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aaaa' == ''\nE         \nE         + aaaa\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00018428700000061582, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001686330000003622, "outcome": "passed"}, "call": {"duration": 0.00033192999999975825, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert '!#$%%' == '!#$%'\n  \n  - !#$%\n  + !#$%%\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_special_characters():\n>       assert remove_Occ(\"!@#$%\", \"@\") == \"!#$%\"\nE       AssertionError: assert '!#$%%' == '!#$%'\nE         \nE         - !#$%\nE         + !#$%%\nE         ?     +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00019776800000048667, "outcome": "passed"}}]}, {"created": 1733296044.8380291, "duration": 0.060914039611816406, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 7, "passed": 5, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_single_character_from_start", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_end", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_middle", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_character_not_present", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_middle", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_target_character", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_no_target_character", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_multiple_target_characters", "type": "Function", "lineno": 36}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_target_character_at_end", "type": "Function", "lineno": 39}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_single_character_from_start", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_single_character_from_start", "run.py", "test", ""], "setup": {"duration": 0.00036166500000067714, "outcome": "passed"}, "call": {"duration": 0.00039100600000008257, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'pplee' == 'pple'\n  \n  - pple\n  + pplee\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_single_character_from_start():\n>       assert remove_Occ(\"apple\", \"a\") == \"pple\"\nE       AssertionError: assert 'pplee' == 'pple'\nE         \nE         - pple\nE         + pplee\nE         ?     +\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.0001877589999992324, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_end", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_single_character_from_end", "run.py", "test", ""], "setup": {"duration": 0.00019706500000005178, "outcome": "passed"}, "call": {"duration": 0.00034365699999927557, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnana' == 'bnan'\n  \n  - bnan\n  + bnana\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_single_character_from_end():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnan\"\nE       AssertionError: assert 'bnana' == 'bnan'\nE         \nE         - bnan\nE         + bnana\nE         ?     +\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00017270399999969044, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_single_character_from_middle", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_removes_single_character_from_middle", "run.py", "test", ""], "setup": {"duration": 0.00016548500000013178, "outcome": "passed"}, "call": {"duration": 0.00016063299999924396, "outcome": "passed"}, "teardown": {"duration": 0.00013202900000042206, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_character_not_present", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_returns_original_string_if_character_not_present", "run.py", "test", ""], "setup": {"duration": 0.00015128599999947312, "outcome": "passed"}, "call": {"duration": 0.00014036299999986568, "outcome": "passed"}, "teardown": {"duration": 0.00013815899999958248, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_start", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_start", "run.py", "test", ""], "setup": {"duration": 0.0001496460000005584, "outcome": "passed"}, "call": {"duration": 0.00014153299999986046, "outcome": "passed"}, "teardown": {"duration": 0.00012740900000007827, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_end", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_end", "run.py", "test", ""], "setup": {"duration": 0.00015677300000049854, "outcome": "passed"}, "call": {"duration": 0.0003370320000000149, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mississii' == 'missisi'\n  \n  - missisi\n  + mississii\n  ?       + +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_end():\n>       assert remove_Occ(\"mississippi\", \"p\") == \"missisi\"\nE       AssertionError: assert 'mississii' == 'missisi'\nE         \nE         - missisi\nE         + mississii\nE         ?       + +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.0001704120000001197, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences_from_middle", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences_from_middle", "run.py", "test", ""], "setup": {"duration": 0.00016321499999971678, "outcome": "passed"}, "call": {"duration": 0.0003157310000005964, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'misisi' == 'miiippi'\n  \n  - miiippi\n  + misisi"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences_from_middle():\n>       assert remove_Occ(\"mississippi\", \"s\") == \"miiippi\"\nE       AssertionError: assert 'misisi' == 'miiippi'\nE         \nE         - miiippi\nE         + misisi\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00016762500000044867, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001616039999996488, "outcome": "passed"}, "call": {"duration": 0.00015536500000035147, "outcome": "passed"}, "teardown": {"duration": 0.00013698200000078486, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_target_character", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_string_with_only_target_character", "run.py", "test", ""], "setup": {"duration": 0.0001562809999997583, "outcome": "passed"}, "call": {"duration": 0.0002825819999996426, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'aaa' == ''\n  \n  + aaa"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_string_with_only_target_character():\n>       assert remove_Occ(\"aaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aaa' == ''\nE         \nE         + aaa\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017391699999969035, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_no_target_character", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_no_target_character", "run.py", "test", ""], "setup": {"duration": 0.00016815700000005762, "outcome": "passed"}, "call": {"duration": 0.0001511459999994358, "outcome": "passed"}, "teardown": {"duration": 0.00013301000000076613, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_multiple_target_characters", "lineno": 36, "outcome": "failed", "keywords": ["test_remove_Occ_handles_string_with_multiple_target_characters", "run.py", "test", ""], "setup": {"duration": 0.00016394200000036108, "outcome": "passed"}, "call": {"duration": 0.000327289999999536, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 38, "message": "AssertionError: assert 'bnana' == 'bnan'\n  \n  - bnan\n  + bnana\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 38, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_string_with_multiple_target_characters():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnan\"\nE       AssertionError: assert 'bnana' == 'bnan'\nE         \nE         - bnan\nE         + bnana\nE         ?     +\n\nrun.py:38: AssertionError"}, "teardown": {"duration": 0.00018121799999981647, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_target_character_at_end", "lineno": 39, "outcome": "failed", "keywords": ["test_remove_Occ_handles_string_with_target_character_at_end", "run.py", "test", ""], "setup": {"duration": 0.0001665710000002818, "outcome": "passed"}, "call": {"duration": 0.00032042199999970933, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 41, "message": "AssertionError: assert 'bnana' == 'bnan'\n  \n  - bnan\n  + bnana\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 41, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_string_with_target_character_at_end():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnan\"\nE       AssertionError: assert 'bnana' == 'bnan'\nE         \nE         - bnan\nE         + bnana\nE         ?     +\n\nrun.py:41: AssertionError"}, "teardown": {"duration": 0.0002042619999995665, "outcome": "passed"}}]}, {"created": 1733296045.9942687, "duration": 0.06046557426452637, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 3, "failed": 7, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_single_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_first_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_single_character", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_special_characters", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_multiple_special_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_single_occurrence", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_single_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003475229999998497, "outcome": "passed"}, "call": {"duration": 0.00025896199999975167, "outcome": "passed"}, "teardown": {"duration": 0.00017369400000033508, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001782029999999324, "outcome": "passed"}, "call": {"duration": 0.0004003930000000544, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnana' == 'bnan'\n  \n  - bnan\n  + bnana\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnan\"\nE       AssertionError: assert 'bnana' == 'bnan'\nE         \nE         - bnan\nE         + bnana\nE         ?     +\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.0002582360000000783, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_first_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002056330000002049, "outcome": "passed"}, "call": {"duration": 0.0004231580000002566, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'ae' == 'ale'\n  \n  - ale\n  ?  -\n  + ae"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_first_occurrence():\n>       assert remove_Occ(\"apple\", \"p\") == \"ale\"\nE       AssertionError: assert 'ae' == 'ale'\nE         \nE         - ale\nE         ?  -\nE         + ae\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00019015599999994137, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017343600000030435, "outcome": "passed"}, "call": {"duration": 0.0003403670000001746, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'peaa' == 'pea'\n  \n  - pea\n  + peaa\n  ?    +"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_last_occurrence():\n>       assert remove_Occ(\"pear\", \"r\") == \"pea\"\nE       AssertionError: assert 'peaa' == 'pea'\nE         \nE         - pea\nE         + peaa\nE         ?    +\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00018016699999989783, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017069700000016397, "outcome": "passed"}, "call": {"duration": 0.00016364400000012935, "outcome": "passed"}, "teardown": {"duration": 0.00013805300000013787, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015604800000001973, "outcome": "passed"}, "call": {"duration": 0.00014538299999999893, "outcome": "passed"}, "teardown": {"duration": 0.00014438999999999425, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_character", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_single_character", "run.py", "test", ""], "setup": {"duration": 0.00015802100000028574, "outcome": "passed"}, "call": {"duration": 0.00016205400000002257, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 5, "message": "IndexError: string index out of range"}, "traceback": [{"path": "run.py", "lineno": 26, "message": ""}, {"path": "run.py", "lineno": 5, "message": "IndexError"}], "longrepr": "def test_remove_Occ_single_character():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char not in s:\n            return s\n        s = s.replace(char, \"\", 1)  # Remove the first occurrence\n>       s = s.rsplit(char, 1)[0] + s[-1]  # Remove the last occurrence\nE       IndexError: string index out of range\n\nrun.py:5: IndexError"}, "teardown": {"duration": 0.0001841090000000989, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_insensitive", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.0001769270000000489, "outcome": "passed"}, "call": {"duration": 0.00034168199999973226, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'Apple' == 'ppl'\n  \n  - ppl\n  + Apple\n  ? +   +"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_case_insensitive():\n>       assert remove_Occ(\"Apple\", \"a\") == \"ppl\"\nE       AssertionError: assert 'Apple' == 'ppl'\nE         \nE         - ppl\nE         + Apple\nE         ? +   +\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017249000000019166, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001740789999997716, "outcome": "passed"}, "call": {"duration": 0.0003521530000001327, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'helloworldd' == 'helloorld'\n  \n  - helloorld\n  + helloworldd\n  ?      +    +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_special_characters():\n>       assert remove_Occ(\"hello@world\", \"@\") == \"helloorld\"\nE       AssertionError: assert 'helloworldd' == 'helloorld'\nE         \nE         - helloorld\nE         + helloworldd\nE         ?      +    +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.0001777689999999943, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_special_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016768599999972267, "outcome": "passed"}, "call": {"duration": 0.000371492999999834, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'helloworldn' == 'helloorldpython'\n  \n  - helloorldpython\n  ?          -----\n  + helloworldn\n  ?      +"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_special_characters():\n>       assert remove_Occ(\"hello@world@python\", \"@\") == \"helloorldpython\"\nE       AssertionError: assert 'helloworldn' == 'helloorldpython'\nE         \nE         - helloorldpython\nE         ?          -----\nE         + helloworldn\nE         ?      +\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00022120700000005655, "outcome": "passed"}}]}, {"created": 1733296046.1841383, "duration": 0.056505680084228516, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 4, "failed": 5, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_removes_first_and_last_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_keeps_only_middle_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_removes_first_and_last_of_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_single_character", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0004696080000003988, "outcome": "passed"}, "call": {"duration": 0.0003071989999998692, "outcome": "passed"}, "teardown": {"duration": 0.0001801569999999586, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017177900000042712, "outcome": "passed"}, "call": {"duration": 0.00044780700000046636, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'helll' == 'hell'\n  \n  - hell\n  + helll\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\nE       AssertionError: assert 'helll' == 'hell'\nE         \nE         - hell\nE         + helll\nE         ?     +\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00021111600000001118, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_returns_original_string_if_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00017806700000022602, "outcome": "passed"}, "call": {"duration": 0.00017389599999972916, "outcome": "passed"}, "teardown": {"duration": 0.0001477699999998805, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_first_and_last_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_and_last_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001654499999999004, "outcome": "passed"}, "call": {"duration": 0.00038352800000041043, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'bnana' == 'bnan'\n  \n  - bnan\n  + bnana\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_and_last_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnan\"\nE       AssertionError: assert 'bnana' == 'bnan'\nE         \nE         - bnan\nE         + bnana\nE         ?     +\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00018093200000013354, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_only_middle_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_only_middle_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00018305800000018024, "outcome": "passed"}, "call": {"duration": 0.00035327900000048373, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'baaa' == 'bana'\n  \n  - bana\n  ?   -\n  + baaa\n  ?    +"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_only_middle_occurrences():\n>       assert remove_Occ(\"banana\", \"n\") == \"bana\"\nE       AssertionError: assert 'baaa' == 'bana'\nE         \nE         - bana\nE         ?   -\nE         + baaa\nE         ?    +\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00019104199999997462, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_first_and_last_of_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_and_last_of_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017169000000016865, "outcome": "passed"}, "call": {"duration": 0.00035211600000017995, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissippi' == 'mssisspp'\n  \n  - mssisspp\n  + mssissippi\n  ?       +  +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_and_last_of_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssisspp\"\nE       AssertionError: assert 'mssissippi' == 'mssisspp'\nE         \nE         - mssisspp\nE         + mssissippi\nE         ?       +  +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017923099999972436, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017225599999992625, "outcome": "passed"}, "call": {"duration": 0.00016282700000047612, "outcome": "passed"}, "teardown": {"duration": 0.00013397199999953813, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_handles_single_character_string", "run.py", "test", ""], "setup": {"duration": 0.0001562880000003375, "outcome": "passed"}, "call": {"duration": 0.0001629489999999123, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 5, "message": "IndexError: string index out of range"}, "traceback": [{"path": "run.py", "lineno": 29, "message": ""}, {"path": "run.py", "lineno": 5, "message": "IndexError"}], "longrepr": "def test_remove_Occ_handles_single_character_string():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char not in s:\n            return s\n        s = s.replace(char, \"\", 1)  # Remove the first occurrence\n>       s = s.rsplit(char, 1)[0] + s[-1]  # Remove the last occurrence\nE       IndexError: string index out of range\n\nrun.py:5: IndexError"}, "teardown": {"duration": 0.00018370200000017434, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_single_character", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_single_character", "run.py", "test", ""], "setup": {"duration": 0.00019738199999963513, "outcome": "passed"}, "call": {"duration": 0.00015426100000048848, "outcome": "passed"}, "teardown": {"duration": 0.00016826600000019454, "outcome": "passed"}}]}, {"created": 1733296046.1377313, "duration": 0.05672717094421387, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 4, "failed": 6, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_is_first", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_is_last", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_replaced_segment_is_empty", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_single_char_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_replacement_char", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00030524200000048296, "outcome": "passed"}, "call": {"duration": 0.0001872570000003293, "outcome": "passed"}, "teardown": {"duration": 0.00015403900000077186, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016379000000021904, "outcome": "passed"}, "call": {"duration": 0.0003823069999997486, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'helll' == 'hell'\n  \n  - hell\n  + helll\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\nE       AssertionError: assert 'helll' == 'hell'\nE         \nE         - hell\nE         + helll\nE         ?     +\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00019425400000017135, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_string_unchanged_if_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00018497800000005782, "outcome": "passed"}, "call": {"duration": 0.00016850599999962412, "outcome": "passed"}, "teardown": {"duration": 0.00013981899999926384, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_is_first", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_string_unchanged_if_char_is_first", "run.py", "test", ""], "setup": {"duration": 0.0001600330000002259, "outcome": "passed"}, "call": {"duration": 0.0003533979999996717, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'pplee' == 'pple'\n  \n  - pple\n  + pplee\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_string_unchanged_if_char_is_first():\n>       assert remove_Occ(\"apple\", \"a\") == \"pple\"\nE       AssertionError: assert 'pplee' == 'pple'\nE         \nE         - pple\nE         + pplee\nE         ?     +\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017599400000012366, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_char_is_last", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_string_unchanged_if_char_is_last", "run.py", "test", ""], "setup": {"duration": 0.00017984900000023174, "outcome": "passed"}, "call": {"duration": 0.0003537729999996131, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bnana' == 'banan'\n  \n  - banan\n  ?     -\n  + bnana\n  ?  +"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_string_unchanged_if_char_is_last():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnana' == 'banan'\nE         \nE         - banan\nE         ?     -\nE         + bnana\nE         ?  +\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.0001876979999995143, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_removes_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001713820000004418, "outcome": "passed"}, "call": {"duration": 0.0003436179999996014, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissippi' == 'mssisspp'\n  \n  - mssisspp\n  + mssissippi\n  ?       +  +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"mssisspp\"\nE       AssertionError: assert 'mssissippi' == 'mssisspp'\nE         \nE         - mssisspp\nE         + mssissippi\nE         ?       +  +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00017401599999988804, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_string_unchanged_if_replaced_segment_is_empty", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_string_unchanged_if_replaced_segment_is_empty", "run.py", "test", ""], "setup": {"duration": 0.000169986999999594, "outcome": "passed"}, "call": {"duration": 0.00017903100000005168, "outcome": "passed"}, "teardown": {"duration": 0.00017129200000010059, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015777900000024658, "outcome": "passed"}, "call": {"duration": 0.00014402900000032304, "outcome": "passed"}, "teardown": {"duration": 0.00014422299999949928, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_char_string", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.0001652400000002885, "outcome": "passed"}, "call": {"duration": 0.00015961400000019665, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 5, "message": "IndexError: string index out of range"}, "traceback": [{"path": "run.py", "lineno": 32, "message": ""}, {"path": "run.py", "lineno": 5, "message": "IndexError"}], "longrepr": "def test_remove_Occ_handles_single_char_string():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char not in s:\n            return s\n        s = s.replace(char, \"\", 1)  # Remove the first occurrence\n>       s = s.rsplit(char, 1)[0] + s[-1]  # Remove the last occurrence\nE       IndexError: string index out of range\n\nrun.py:5: IndexError"}, "teardown": {"duration": 0.00017475500000063704, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_replacement_char", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_handles_string_with_only_replacement_char", "run.py", "test", ""], "setup": {"duration": 0.000172163000000225, "outcome": "passed"}, "call": {"duration": 0.0002779399999992549, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'aaa' == ''\n  \n  + aaa"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_string_with_only_replacement_char():\n>       assert remove_Occ(\"aaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aaa' == ''\nE         \nE         + aaa\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00021434800000008636, "outcome": "passed"}}]}, {"created": 1733296046.3452442, "duration": 0.050254106521606445, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 4, "failed": 4, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_in_string", "run.py", "test", ""], "setup": {"duration": 0.00030230399999986446, "outcome": "passed"}, "call": {"duration": 0.00027971099999968274, "outcome": "passed"}, "teardown": {"duration": 0.0002570259999998825, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.0002198560000001848, "outcome": "passed"}, "call": {"duration": 0.00024782700000036684, "outcome": "passed"}, "teardown": {"duration": 0.0001329829999998644, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016011700000007068, "outcome": "passed"}, "call": {"duration": 0.0001420999999997008, "outcome": "passed"}, "teardown": {"duration": 0.0001225819999999267, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00014375700000002212, "outcome": "passed"}, "call": {"duration": 0.00037878600000018636, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'boor' == 'bookeeper'\n  \n  - bookeeper\n  + boor"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_same_char():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'boor' == 'bookeeper'\nE         \nE         - bookeeper\nE         + boor\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.0001778539999999218, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00021287800000013846, "outcome": "passed"}, "call": {"duration": 0.00016872600000006344, "outcome": "passed"}, "teardown": {"duration": 0.000143247000000013, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_with_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00018335800000013336, "outcome": "passed"}, "call": {"duration": 0.00015900999999995946, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 5, "message": "IndexError: string index out of range"}, "traceback": [{"path": "run.py", "lineno": 23, "message": ""}, {"path": "run.py", "lineno": 5, "message": "IndexError"}], "longrepr": "def test_remove_Occ_with_single_char_string():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char not in s:\n            return s\n        s = s.replace(char, \"\", 1)  # Remove the first occurrence\n>       s = s.rsplit(char, 1)[0] + s[-1]  # Remove the last occurrence\nE       IndexError: string index out of range\n\nrun.py:5: IndexError"}, "teardown": {"duration": 0.00016980299999991288, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00016104400000038765, "outcome": "passed"}, "call": {"duration": 0.0003342160000001648, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'pplee' == 'pple'\n  \n  - pple\n  + pplee\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_at_start():\n>       assert remove_Occ(\"apple\", \"a\") == \"pple\"\nE       AssertionError: assert 'pplee' == 'pple'\nE         \nE         - pple\nE         + pplee\nE         ?     +\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.0001675119999999808, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00017821000000006748, "outcome": "passed"}, "call": {"duration": 0.0003258769999998634, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'appll' == 'apppl'\n  \n  - apppl\n  ?    -\n  + appll\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_at_end():\n>       assert remove_Occ(\"apple\", \"e\") == \"apppl\"\nE       AssertionError: assert 'appll' == 'apppl'\nE         \nE         - apppl\nE         ?    -\nE         + appll\nE         ?     +\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00019861300000023618, "outcome": "passed"}}]}, {"created": 1733296046.318688, "duration": 0.05094194412231445, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 6, "failed": 3, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_multiple_chars", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_char_in_string", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_in_string", "run.py", "test", ""], "setup": {"duration": 0.0003199259999999704, "outcome": "passed"}, "call": {"duration": 0.0002560319999997951, "outcome": "passed"}, "teardown": {"duration": 0.0001571780000002576, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00016200399999988235, "outcome": "passed"}, "call": {"duration": 0.0001511039999999575, "outcome": "passed"}, "teardown": {"duration": 0.00013270299999978974, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015049699999991617, "outcome": "passed"}, "call": {"duration": 0.0001431690000002206, "outcome": "passed"}, "teardown": {"duration": 0.00013420600000024763, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00017773800000009388, "outcome": "passed"}, "call": {"duration": 0.00038253700000012714, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'pplee' == 'pple'\n  \n  - pple\n  + pplee\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_at_start():\n>       assert remove_Occ(\"apple\", \"a\") == \"pple\"\nE       AssertionError: assert 'pplee' == 'pple'\nE         \nE         - pple\nE         + pplee\nE         ?     +\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00019211700000010268, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00017411599999972438, "outcome": "passed"}, "call": {"duration": 0.0003644669999998129, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'est' == 'tes'\n  \n  - tes\n  + est"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_at_end():\n>       assert remove_Occ(\"test\", \"t\") == \"tes\"\nE       AssertionError: assert 'est' == 'tes'\nE         \nE         - tes\nE         + est\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00017509300000018158, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_chars", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_with_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00017131500000022726, "outcome": "passed"}, "call": {"duration": 0.0001644519999999261, "outcome": "passed"}, "teardown": {"duration": 0.0001372489999997839, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015628400000000653, "outcome": "passed"}, "call": {"duration": 0.0001434659999999255, "outcome": "passed"}, "teardown": {"duration": 0.00013187100000022767, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_char_string", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00014920299999987563, "outcome": "passed"}, "call": {"duration": 0.0001532680000000397, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 5, "message": "IndexError: string index out of range"}, "traceback": [{"path": "run.py", "lineno": 29, "message": ""}, {"path": "run.py", "lineno": 5, "message": "IndexError"}], "longrepr": "def test_remove_Occ_with_single_char_string():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char not in s:\n            return s\n        s = s.replace(char, \"\", 1)  # Remove the first occurrence\n>       s = s.rsplit(char, 1)[0] + s[-1]  # Remove the last occurrence\nE       IndexError: string index out of range\n\nrun.py:5: IndexError"}, "teardown": {"duration": 0.0001748429999999246, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_with_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00017831099999998656, "outcome": "passed"}, "call": {"duration": 0.00015563500000004282, "outcome": "passed"}, "teardown": {"duration": 0.0001683779999996915, "outcome": "passed"}}]}, {"created": 1733296044.7541053, "duration": 0.04850125312805176, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 5, "failed": 3, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_string_without_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_char_at_end", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_char_at_start", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00030167799999958334, "outcome": "passed"}, "call": {"duration": 0.0001705020000004609, "outcome": "passed"}, "teardown": {"duration": 0.00015414900000010334, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016069600000001572, "outcome": "passed"}, "call": {"duration": 0.00045434000000010855, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'helll' == 'hell'\n  \n  - hell\n  + helll\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\nE       AssertionError: assert 'helll' == 'hell'\nE         \nE         - hell\nE         + helll\nE         ?     +\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00019262100000005944, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00017335299999921006, "outcome": "passed"}, "call": {"duration": 0.00018976999999953392, "outcome": "passed"}, "teardown": {"duration": 0.00013513100000039913, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015717399999992665, "outcome": "passed"}, "call": {"duration": 0.00014492300000057412, "outcome": "passed"}, "teardown": {"duration": 0.00012993999999988404, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_without_char", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_without_char", "run.py", "test", ""], "setup": {"duration": 0.0001627370000001349, "outcome": "passed"}, "call": {"duration": 0.00015266499999988525, "outcome": "passed"}, "teardown": {"duration": 0.00013179799999996078, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00015408800000038525, "outcome": "passed"}, "call": {"duration": 0.0001572720000000416, "outcome": "passed"}, "teardown": {"duration": 0.00013012199999984375, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_char_at_end", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00014982899999971266, "outcome": "passed"}, "call": {"duration": 0.00032509700000016295, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'boor' == 'bookeeper'\n  \n  - bookeeper\n  + boor"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_char_at_end():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'boor' == 'bookeeper'\nE         \nE         - bookeeper\nE         + boor\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017681399999958103, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_char_at_start", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00017250899999954328, "outcome": "passed"}, "call": {"duration": 0.00034059899999938636, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'ookkeeperr' == 'ookkeeper'\n  \n  - ookkeeper\n  + ookkeeperr\n  ?          +"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_char_at_start():\n>       assert remove_Occ(\"bookkeeper\", \"b\") == \"ookkeeper\"\nE       AssertionError: assert 'ookkeeperr' == 'ookkeeper'\nE         \nE         - ookkeeper\nE         + ookkeeperr\nE         ?          +\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00020841100000001944, "outcome": "passed"}}]}, {"created": 1733296046.376883, "duration": 0.04953622817993164, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 4, "failed": 4, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_single_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_multiple_special_characters", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_single_occurrence", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003071729999994943, "outcome": "passed"}, "call": {"duration": 0.00017457499999995463, "outcome": "passed"}, "teardown": {"duration": 0.00016760499999968204, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016105300000024414, "outcome": "passed"}, "call": {"duration": 0.0004614880000000099, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnana' == 'banan'\n  \n  - banan\n  ?     -\n  + bnana\n  ?  +"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnana' == 'banan'\nE         \nE         - banan\nE         ?     -\nE         + bnana\nE         ?  +\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00018776299999956336, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00018487200000016912, "outcome": "passed"}, "call": {"duration": 0.00016784999999952532, "outcome": "passed"}, "teardown": {"duration": 0.00013382099999947883, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00016937699999974853, "outcome": "passed"}, "call": {"duration": 0.0003427570000003044, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'pplee' == 'pple'\n  \n  - pple\n  + pplee\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_at_start():\n>       assert remove_Occ(\"apple\", \"a\") == \"pple\"\nE       AssertionError: assert 'pplee' == 'pple'\nE         \nE         - pple\nE         + pplee\nE         ?     +\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017464000000000368, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00016591999999970852, "outcome": "passed"}, "call": {"duration": 0.00034135399999968286, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'worll' == 'worl'\n  \n  - worl\n  + worll\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_at_end():\n>       assert remove_Occ(\"world\", \"d\") == \"worl\"\nE       AssertionError: assert 'worll' == 'worl'\nE         \nE         - worl\nE         + worll\nE         ?     +\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.0001679819999997889, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017109499999978794, "outcome": "passed"}, "call": {"duration": 0.00015166699999991096, "outcome": "passed"}, "teardown": {"duration": 0.00013548500000037933, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00015381900000033255, "outcome": "passed"}, "call": {"duration": 0.0001562010000002445, "outcome": "passed"}, "teardown": {"duration": 0.00012765600000008703, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00014642100000017422, "outcome": "passed"}, "call": {"duration": 0.00029062000000035226, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '!hellod' == '!hello#world'\n  \n  - !hello#world\n  + !hellod"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_special_characters():\n>       assert remove_Occ(\"!@#hello@#world\", \"@#\") == \"!hello#world\"\nE       AssertionError: assert '!hellod' == '!hello#world'\nE         \nE         - !hello#world\nE         + !hellod\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0001997060000000772, "outcome": "passed"}}]}, {"created": 1733296045.8710165, "duration": 0.04895281791687012, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 6, "failed": 2, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_single_character", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00035151899999963376, "outcome": "passed"}, "call": {"duration": 0.0002734220000002452, "outcome": "passed"}, "teardown": {"duration": 0.00016173199999958143, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016617400000029647, "outcome": "passed"}, "call": {"duration": 0.0004941719999997929, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'helll' == 'hell'\n  \n  - hell\n  + helll\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\nE       AssertionError: assert 'helll' == 'hell'\nE         \nE         - hell\nE         + helll\nE         ?     +\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00020353399999972765, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018428000000003664, "outcome": "passed"}, "call": {"duration": 0.00017577200000040705, "outcome": "passed"}, "teardown": {"duration": 0.00013718699999998307, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001606860000000765, "outcome": "passed"}, "call": {"duration": 0.00014800000000025904, "outcome": "passed"}, "teardown": {"duration": 0.00013072600000008094, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016204799999997022, "outcome": "passed"}, "call": {"duration": 0.00014754299999975018, "outcome": "passed"}, "teardown": {"duration": 0.0001281200000002869, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_character", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_single_character", "run.py", "test", ""], "setup": {"duration": 0.000150552000000026, "outcome": "passed"}, "call": {"duration": 0.00017107199999966127, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 5, "message": "IndexError: string index out of range"}, "traceback": [{"path": "run.py", "lineno": 23, "message": ""}, {"path": "run.py", "lineno": 5, "message": "IndexError"}], "longrepr": "def test_remove_Occ_single_character():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char not in s:\n            return s\n        s = s.replace(char, \"\", 1)  # Remove the first occurrence\n>       s = s.rsplit(char, 1)[0] + s[-1]  # Remove the last occurrence\nE       IndexError: string index out of range\n\nrun.py:5: IndexError"}, "teardown": {"duration": 0.00017907299999997406, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00017594400000042754, "outcome": "passed"}, "call": {"duration": 0.00015308600000008, "outcome": "passed"}, "teardown": {"duration": 0.00013612399999995972, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_chars", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.0001577630000006991, "outcome": "passed"}, "call": {"duration": 0.00014504299999984482, "outcome": "passed"}, "teardown": {"duration": 0.00017142499999955874, "outcome": "passed"}}]}, {"created": 1733296045.5983315, "duration": 0.05957221984863281, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 3, "failed": 7, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_char_not_in_string", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_char_at_start", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_char_at_end", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_single_char_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_multiple_removals", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_case_insensitive", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00034978899999948965, "outcome": "passed"}, "call": {"duration": 0.0001839040000000125, "outcome": "passed"}, "teardown": {"duration": 0.00015673000000049342, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017116000000072518, "outcome": "passed"}, "call": {"duration": 0.00037835599999969105, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'helll' == 'hell'\n  \n  - hell\n  + helll\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\nE       AssertionError: assert 'helll' == 'hell'\nE         \nE         - hell\nE         + helll\nE         ?     +\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00022163999999946782, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_in_string", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00018774099999951943, "outcome": "passed"}, "call": {"duration": 0.0001641259999995981, "outcome": "passed"}, "teardown": {"duration": 0.00013895900000004957, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001738519999996413, "outcome": "passed"}, "call": {"duration": 0.0003860890000000339, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'balln' == 'balun'\n  \n  - balun\n  ?    ^\n  + balln\n  ?    ^"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"balloon\", \"o\") == \"balun\"\nE       AssertionError: assert 'balln' == 'balun'\nE         \nE         - balun\nE         ?    ^\nE         + balln\nE         ?    ^\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.0001884340000000151, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_start", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00017444099999952556, "outcome": "passed"}, "call": {"duration": 0.0003433980000000503, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'elloo' == 'ello'\n  \n  - ello\n  + elloo\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_char_at_start():\n>       assert remove_Occ(\"hello\", \"h\") == \"ello\"\nE       AssertionError: assert 'elloo' == 'ello'\nE         \nE         - ello\nE         + elloo\nE         ?     +\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00017373100000028785, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_at_end", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00016789499999969593, "outcome": "passed"}, "call": {"duration": 0.00034058500000000436, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'helll' == 'hell'\n  \n  - hell\n  + helll\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_char_at_end():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\nE       AssertionError: assert 'helll' == 'hell'\nE         \nE         - hell\nE         + helll\nE         ?     +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.0001736679999995161, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 24, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017145000000073907, "outcome": "passed"}, "call": {"duration": 0.00014883799999942937, "outcome": "passed"}, "teardown": {"duration": 0.00013201700000031735, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string", "lineno": 27, "outcome": "failed", "keywords": ["test_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00015190100000062046, "outcome": "passed"}, "call": {"duration": 0.00015898799999991553, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 5, "message": "IndexError: string index out of range"}, "traceback": [{"path": "run.py", "lineno": 29, "message": ""}, {"path": "run.py", "lineno": 5, "message": "IndexError"}], "longrepr": "def test_single_char_string():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char not in s:\n            return s\n        s = s.replace(char, \"\", 1)  # Remove the first occurrence\n>       s = s.rsplit(char, 1)[0] + s[-1]  # Remove the last occurrence\nE       IndexError: string index out of range\n\nrun.py:5: IndexError"}, "teardown": {"duration": 0.00017286000000016344, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_removals", "lineno": 30, "outcome": "failed", "keywords": ["test_multiple_removals", "run.py", "test", ""], "setup": {"duration": 0.0001715989999997447, "outcome": "passed"}, "call": {"duration": 0.0003411240000001925, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'bnana' == 'bnan'\n  \n  - bnan\n  + bnana\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_multiple_removals():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnan\"\nE       AssertionError: assert 'bnana' == 'bnan'\nE         \nE         - bnan\nE         + bnana\nE         ?     +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00016723899999959713, "outcome": "passed"}}, {"nodeid": "run.py::test_case_insensitive", "lineno": 33, "outcome": "failed", "keywords": ["test_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00016871900000037243, "outcome": "passed"}, "call": {"duration": 0.0003407699999993241, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'HellWd' == 'HellWorld'\n  \n  - HellWorld\n  ?      ---\n  + HellWd"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_case_insensitive():\n>       assert remove_Occ(\"HelloWorld\", \"o\") == \"HellWorld\"\nE       AssertionError: assert 'HellWd' == 'HellWorld'\nE         \nE         - HellWorld\nE         ?      ---\nE         + HellWd\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00019736899999944768, "outcome": "passed"}}]}, {"created": 1733296045.2646117, "duration": 0.05144691467285156, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 3, "failed": 5, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_no_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_single_char", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_multiple_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_char_at_start", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_char_at_end", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003054550000003431, "outcome": "passed"}, "call": {"duration": 0.00020953900000009185, "outcome": "passed"}, "teardown": {"duration": 0.00015460699999980676, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015622999999997944, "outcome": "passed"}, "call": {"duration": 0.00045436399999987387, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnana' == 'banan'\n  \n  - banan\n  ?     -\n  + bnana\n  ?  +"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnana' == 'banan'\nE         \nE         - banan\nE         ?     -\nE         + bnana\nE         ?  +\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00018827699999990344, "outcome": "passed"}}, {"nodeid": "run.py::test_no_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016858700000010884, "outcome": "passed"}, "call": {"duration": 0.00016565000000001717, "outcome": "passed"}, "teardown": {"duration": 0.00013470899999967756, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char", "lineno": 15, "outcome": "failed", "keywords": ["test_single_char", "run.py", "test", ""], "setup": {"duration": 0.00015602200000008892, "outcome": "passed"}, "call": {"duration": 0.0001610379999998912, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 5, "message": "IndexError: string index out of range"}, "traceback": [{"path": "run.py", "lineno": 17, "message": ""}, {"path": "run.py", "lineno": 5, "message": "IndexError"}], "longrepr": "def test_single_char():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char not in s:\n            return s\n        s = s.replace(char, \"\", 1)  # Remove the first occurrence\n>       s = s.rsplit(char, 1)[0] + s[-1]  # Remove the last occurrence\nE       IndexError: string index out of range\n\nrun.py:5: IndexError"}, "teardown": {"duration": 0.00017638199999980841, "outcome": "passed"}}, {"nodeid": "run.py::test_multiple_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017804399999965526, "outcome": "passed"}, "call": {"duration": 0.0003283609999997772, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bnanaaa' == 'banan'\n  \n  - banan\n  + bnanaaa"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_multiple_occurrences():\n>       assert remove_Occ(\"bananaaa\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnanaaa' == 'banan'\nE         \nE         - banan\nE         + bnanaaa\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00016673199999983623, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016497900000000953, "outcome": "passed"}, "call": {"duration": 0.0001479280000000749, "outcome": "passed"}, "teardown": {"duration": 0.00013102499999995132, "outcome": "passed"}}, {"nodeid": "run.py::test_char_at_start", "lineno": 24, "outcome": "failed", "keywords": ["test_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.0001607290000000816, "outcome": "passed"}, "call": {"duration": 0.00031188799999970485, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'pplee' == 'pple'\n  \n  - pple\n  + pplee\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_char_at_start():\n>       assert remove_Occ(\"apple\", \"a\") == \"pple\"\nE       AssertionError: assert 'pplee' == 'pple'\nE         \nE         - pple\nE         + pplee\nE         ?     +\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00017796000000025458, "outcome": "passed"}}, {"nodeid": "run.py::test_char_at_end", "lineno": 27, "outcome": "failed", "keywords": ["test_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00016419899999986498, "outcome": "passed"}, "call": {"duration": 0.0003293619999999997, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'appll' == 'apppl'\n  \n  - apppl\n  ?    -\n  + appll\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_char_at_end():\n>       assert remove_Occ(\"apple\", \"e\") == \"apppl\"\nE       AssertionError: assert 'appll' == 'apppl'\nE         \nE         - apppl\nE         ?    -\nE         + appll\nE         ?     +\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.0001998709999999626, "outcome": "passed"}}]}, {"created": 1733296046.3131273, "duration": 0.06048703193664551, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 8, "passed": 2, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_single_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_no_replacements", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_in_middle", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_single_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_with_single_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00030518300000004217, "outcome": "passed"}, "call": {"duration": 0.0004850429999994077, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'heo' == 'hel'\n  \n  - hel\n  + heo"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_single_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"hel\"\nE       AssertionError: assert 'heo' == 'hel'\nE         \nE         - hel\nE         + heo\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020864299999967528, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.000174447000000022, "outcome": "passed"}, "call": {"duration": 0.00036183899999997493, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnana' == 'banan'\n  \n  - banan\n  ?     -\n  + bnana\n  ?  +"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnana' == 'banan'\nE         \nE         - banan\nE         ?     -\nE         + bnana\nE         ?  +\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00017741799999981822, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00020011999999969277, "outcome": "passed"}, "call": {"duration": 0.00016028699999992568, "outcome": "passed"}, "teardown": {"duration": 0.0001370129999997971, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_start", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00015680299999942804, "outcome": "passed"}, "call": {"duration": 0.00032252699999979484, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'pplee' == 'pple'\n  \n  - pple\n  + pplee\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_at_start():\n>       assert remove_Occ(\"apple\", \"a\") == \"pple\"\nE       AssertionError: assert 'pplee' == 'pple'\nE         \nE         - pple\nE         + pplee\nE         ?     +\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017551300000029357, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_at_end", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00017000199999994692, "outcome": "passed"}, "call": {"duration": 0.0003169600000001438, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'est' == 'tes'\n  \n  - tes\n  + est"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_char_at_end():\n>       assert remove_Occ(\"test\", \"t\") == \"tes\"\nE       AssertionError: assert 'est' == 'tes'\nE         \nE         - tes\nE         + est\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00017464100000008642, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016910200000008757, "outcome": "passed"}, "call": {"duration": 0.0001480630000001426, "outcome": "passed"}, "teardown": {"duration": 0.00013255699999970005, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_replacements", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_no_replacements", "run.py", "test", ""], "setup": {"duration": 0.0001515569999996913, "outcome": "passed"}, "call": {"duration": 0.00032590600000048653, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'ythonn' == 'python'\n  \n  - python\n  ? -\n  + ythonn\n  ?      +"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_no_replacements():\n>       assert remove_Occ(\"python\", \"p\") == \"python\"\nE       AssertionError: assert 'ythonn' == 'python'\nE         \nE         - python\nE         ? -\nE         + ythonn\nE         ?      +\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.0001823319999996187, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_end", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_at_end", "run.py", "test", ""], "setup": {"duration": 0.00017818300000005394, "outcome": "passed"}, "call": {"duration": 0.0003354330000000516, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'boor' == 'bookeeper'\n  \n  - bookeeper\n  + boor"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_char_at_end():\n>       assert remove_Occ(\"bookkeeper\", \"k\") == \"bookeeper\"\nE       AssertionError: assert 'boor' == 'bookeeper'\nE         \nE         - bookeeper\nE         + boor\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00018019599999963276, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_in_middle", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_in_middle", "run.py", "test", ""], "setup": {"duration": 0.00020659499999986508, "outcome": "passed"}, "call": {"duration": 0.00036187699999956635, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'harar' == 'haracter'\n  \n  - haracter\n  ?     ---\n  + harar"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_char_in_middle():\n>       assert remove_Occ(\"character\", \"c\") == \"haracter\"\nE       AssertionError: assert 'harar' == 'haracter'\nE         \nE         - haracter\nE         ?     ---\nE         + harar\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.0001726939999997512, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_char_at_start", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_char_at_start", "run.py", "test", ""], "setup": {"duration": 0.00017003999999953834, "outcome": "passed"}, "call": {"duration": 0.0003552909999999798, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'ananaa' == 'anana'\n  \n  - anana\n  + ananaa\n  ?      +"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_char_at_start():\n>       assert remove_Occ(\"banana\", \"b\") == \"anana\"\nE       AssertionError: assert 'ananaa' == 'anana'\nE         \nE         - anana\nE         + ananaa\nE         ?      +\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00021111100000048566, "outcome": "passed"}}]}, {"created": 1733296045.8507442, "duration": 0.05907416343688965, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 6, "passed": 4, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_char_not_present", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_char_from_empty_string", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_char_from_single_char_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_char_from_string_with_only_target_char", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_char_from_string_with_multiple_same_chars", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_char_from_string_with_no_target_char", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00034863200000145866, "outcome": "passed"}, "call": {"duration": 0.00047838499999919293, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnana' == 'banan'\n  \n  - banan\n  ?     -\n  + bnana\n  ?  +"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnana' == 'banan'\nE         \nE         - banan\nE         ?     -\nE         + bnana\nE         ?  +\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00021983200000086356, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001880849999995604, "outcome": "passed"}, "call": {"duration": 0.0004361450000001099, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnana' == 'banan'\n  \n  - banan\n  ?     -\n  + bnana\n  ?  +"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnana' == 'banan'\nE         \nE         - banan\nE         ?     -\nE         + bnana\nE         ?  +\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00019162699999952792, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017954499999994766, "outcome": "passed"}, "call": {"duration": 0.00036726399999942316, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnana' == 'banan'\n  \n  - banan\n  ?     -\n  + bnana\n  ?  +"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnana' == 'banan'\nE         \nE         - banan\nE         ?     -\nE         + bnana\nE         ?  +\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00017174599999947304, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_present", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00016886200000065799, "outcome": "passed"}, "call": {"duration": 0.0001561999999992736, "outcome": "passed"}, "teardown": {"duration": 0.0001344840000001568, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00016356000000072868, "outcome": "passed"}, "call": {"duration": 0.0003195320000006774, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bacaba' == 'bcb'\n  \n  - bcb\n  + bacaba"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_same_char():\n>       assert remove_Occ(\"abacaba\", \"a\") == \"bcb\"\nE       AssertionError: assert 'bacaba' == 'bcb'\nE         \nE         - bcb\nE         + bacaba\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00017149199999977327, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_empty_string", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_char_from_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0001766009999997209, "outcome": "passed"}, "call": {"duration": 0.00015024400000029914, "outcome": "passed"}, "teardown": {"duration": 0.00013141500000024564, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_single_char_string", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_char_from_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.000150489999999337, "outcome": "passed"}, "call": {"duration": 0.0001695650000002047, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 5, "message": "IndexError: string index out of range"}, "traceback": [{"path": "run.py", "lineno": 26, "message": ""}, {"path": "run.py", "lineno": 5, "message": "IndexError"}], "longrepr": "def test_remove_char_from_single_char_string():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char not in s:\n            return s\n        s = s.replace(char, \"\", 1)  # Remove the first occurrence\n>       s = s.rsplit(char, 1)[0] + s[-1]  # Remove the last occurrence\nE       IndexError: string index out of range\n\nrun.py:5: IndexError"}, "teardown": {"duration": 0.0001861860000005322, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_string_with_only_target_char", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_char_from_string_with_only_target_char", "run.py", "test", ""], "setup": {"duration": 0.00016943099999977562, "outcome": "passed"}, "call": {"duration": 0.00029974000000088097, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'aaaa' == ''\n  \n  + aaaa"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_char_from_string_with_only_target_char():\n>       assert remove_Occ(\"aaaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aaaa' == ''\nE         \nE         + aaaa\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017482500000021162, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_string_with_multiple_same_chars", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_char_from_string_with_multiple_same_chars", "run.py", "test", ""], "setup": {"duration": 0.00016819100000020626, "outcome": "passed"}, "call": {"duration": 0.00015303500000030112, "outcome": "passed"}, "teardown": {"duration": 0.00013599999999946988, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_from_string_with_no_target_char", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_char_from_string_with_no_target_char", "run.py", "test", ""], "setup": {"duration": 0.0001539519999997907, "outcome": "passed"}, "call": {"duration": 0.00014352700000053176, "outcome": "passed"}, "teardown": {"duration": 0.00016492800000023067, "outcome": "passed"}}]}, {"created": 1733296046.198058, "duration": 0.05446481704711914, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 4, "passed": 5, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_no_occurrence", "type": "Function", "lineno": 16}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 19}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "type": "Function", "lineno": 22}, {"nodeid": "run.py::test_remove_empty_string", "type": "Function", "lineno": 25}, {"nodeid": "run.py::test_remove_char_not_in_string", "type": "Function", "lineno": 28}, {"nodeid": "run.py::test_remove_multiple_chars", "type": "Function", "lineno": 31}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00034535799999968475, "outcome": "passed"}, "call": {"duration": 0.0004978499999994668, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'heo' == 'hello'\n  \n  - hello\n  ?   --\n  + heo"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"hello\"\nE       AssertionError: assert 'heo' == 'hello'\nE         \nE         - hello\nE         ?   --\nE         + heo\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00021592799999936574, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018721100000007596, "outcome": "passed"}, "call": {"duration": 0.00039902999999963384, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'helll' == 'hell'\n  \n  - hell\n  + helll\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\nE       AssertionError: assert 'helll' == 'hell'\nE         \nE         - hell\nE         + helll\nE         ?     +\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00018929799999956032, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001768769999994646, "outcome": "passed"}, "call": {"duration": 0.00035239399999920096, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'heo' == 'hello'\n  \n  - hello\n  ?   --\n  + heo"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"hello\"\nE       AssertionError: assert 'heo' == 'hello'\nE         \nE         - hello\nE         ?   --\nE         + heo\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00017087799999959685, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_no_occurrence", "lineno": 16, "outcome": "passed", "keywords": ["test_remove_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016872900000031166, "outcome": "passed"}, "call": {"duration": 0.00015247199999990357, "outcome": "passed"}, "teardown": {"duration": 0.0001388770000003703, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 19, "outcome": "passed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001641760000001824, "outcome": "passed"}, "call": {"duration": 0.00015056999999973897, "outcome": "passed"}, "teardown": {"duration": 0.0001316430000004587, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "lineno": 22, "outcome": "failed", "keywords": ["test_remove_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.0001551529999996859, "outcome": "passed"}, "call": {"duration": 0.00015676399999975388, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 5, "message": "IndexError: string index out of range"}, "traceback": [{"path": "run.py", "lineno": 24, "message": ""}, {"path": "run.py", "lineno": 5, "message": "IndexError"}], "longrepr": "def test_remove_first_and_last_same_char():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char not in s:\n            return s\n        s = s.replace(char, \"\", 1)  # Remove the first occurrence\n>       s = s.rsplit(char, 1)[0] + s[-1]  # Remove the last occurrence\nE       IndexError: string index out of range\n\nrun.py:5: IndexError"}, "teardown": {"duration": 0.000178511999999742, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_empty_string", "lineno": 25, "outcome": "passed", "keywords": ["test_remove_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016922200000024645, "outcome": "passed"}, "call": {"duration": 0.00015018999999938387, "outcome": "passed"}, "teardown": {"duration": 0.0001351719999993506, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_in_string", "lineno": 28, "outcome": "passed", "keywords": ["test_remove_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00015292199999983325, "outcome": "passed"}, "call": {"duration": 0.00014326700000033554, "outcome": "passed"}, "teardown": {"duration": 0.00013623600000034486, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_chars", "lineno": 31, "outcome": "passed", "keywords": ["test_remove_multiple_chars", "run.py", "test", ""], "setup": {"duration": 0.00015190199999981502, "outcome": "passed"}, "call": {"duration": 0.00014152800000033494, "outcome": "passed"}, "teardown": {"duration": 0.00016253500000029675, "outcome": "passed"}}]}, {"created": 1733296046.457394, "duration": 0.06357622146606445, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 5, "failed": 7, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_keeps_case_sensitive", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_single_character", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_first_character", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_last_character", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_middle_character", "type": "Function", "lineno": 36}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_one_character", "type": "Function", "lineno": 39}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00044357099999992045, "outcome": "passed"}, "call": {"duration": 0.00019633600000013018, "outcome": "passed"}, "teardown": {"duration": 0.00016052199999982975, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001792820000003914, "outcome": "passed"}, "call": {"duration": 0.00040643500000037136, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'helll' == 'hell'\n  \n  - hell\n  + helll\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\nE       AssertionError: assert 'helll' == 'hell'\nE         \nE         - hell\nE         + helll\nE         ?     +\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00023355400000024673, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00019164600000021181, "outcome": "passed"}, "call": {"duration": 0.00038905700000047005, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'bnana' == 'bnan'\n  \n  - bnan\n  + bnana\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnan\"\nE       AssertionError: assert 'bnana' == 'bnan'\nE         \nE         - bnan\nE         + bnana\nE         ?     +\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00018317700000025638, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_case_sensitive", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_case_sensitive", "run.py", "test", ""], "setup": {"duration": 0.00017540700000040488, "outcome": "passed"}, "call": {"duration": 0.0003729760000004134, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'HellWd' == 'HellWorld'\n  \n  - HellWorld\n  ?      ---\n  + HellWd"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_case_sensitive():\n>       assert remove_Occ(\"HelloWorld\", \"o\") == \"HellWorld\"\nE       AssertionError: assert 'HellWd' == 'HellWorld'\nE         \nE         - HellWorld\nE         ?      ---\nE         + HellWd\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00017796699999994559, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00018155300000000096, "outcome": "passed"}, "call": {"duration": 0.00016821599999961023, "outcome": "passed"}, "teardown": {"duration": 0.00013865599999984823, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.000170802000000414, "outcome": "passed"}, "call": {"duration": 0.0001453989999999905, "outcome": "passed"}, "teardown": {"duration": 0.0001297639999995326, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016935199999945638, "outcome": "passed"}, "call": {"duration": 0.00015008100000013513, "outcome": "passed"}, "teardown": {"duration": 0.00012987700000000046, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_character", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_handles_single_character", "run.py", "test", ""], "setup": {"duration": 0.00015395800000028714, "outcome": "passed"}, "call": {"duration": 0.00015543000000040053, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 5, "message": "IndexError: string index out of range"}, "traceback": [{"path": "run.py", "lineno": 29, "message": ""}, {"path": "run.py", "lineno": 5, "message": "IndexError"}], "longrepr": "def test_remove_Occ_handles_single_character():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char not in s:\n            return s\n        s = s.replace(char, \"\", 1)  # Remove the first occurrence\n>       s = s.rsplit(char, 1)[0] + s[-1]  # Remove the last occurrence\nE       IndexError: string index out of range\n\nrun.py:5: IndexError"}, "teardown": {"duration": 0.00019164199999988085, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_first_character", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_first_character", "run.py", "test", ""], "setup": {"duration": 0.0001759359999997656, "outcome": "passed"}, "call": {"duration": 0.0003323159999997216, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'ab' == 'aab'\n  \n  - aab\n  ? -\n  + ab"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_first_character():\n>       assert remove_Occ(\"aaab\", \"a\") == \"aab\"\nE       AssertionError: assert 'ab' == 'aab'\nE         \nE         - aab\nE         ? -\nE         + ab\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.0001794159999999323, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_last_character", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_last_character", "run.py", "test", ""], "setup": {"duration": 0.00018141900000046007, "outcome": "passed"}, "call": {"duration": 0.0003310489999996946, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'bba' == 'bb'\n  \n  - bb\n  + bba\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_last_character():\n>       assert remove_Occ(\"bbaa\", \"a\") == \"bb\"\nE       AssertionError: assert 'bba' == 'bb'\nE         \nE         - bb\nE         + bba\nE         ?   +\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00018882200000014393, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_middle_character", "lineno": 36, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_middle_character", "run.py", "test", ""], "setup": {"duration": 0.0001738480000001985, "outcome": "passed"}, "call": {"duration": 0.00030553399999977415, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 38, "message": "AssertionError: assert 'abbaa' == 'bb'\n  \n  - bb\n  + abbaa"}, "traceback": [{"path": "run.py", "lineno": 38, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_middle_character():\n>       assert remove_Occ(\"aabbaa\", \"a\") == \"bb\"\nE       AssertionError: assert 'abbaa' == 'bb'\nE         \nE         - bb\nE         + abbaa\n\nrun.py:38: AssertionError"}, "teardown": {"duration": 0.00017780900000019528, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_string_with_only_one_character", "lineno": 39, "outcome": "passed", "keywords": ["test_remove_Occ_handles_string_with_only_one_character", "run.py", "test", ""], "setup": {"duration": 0.00017139200000038102, "outcome": "passed"}, "call": {"duration": 0.00016458799999963247, "outcome": "passed"}, "teardown": {"duration": 0.00016581000000037704, "outcome": "passed"}}]}, {"created": 1733296046.055772, "duration": 0.0631709098815918, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 3, "failed": 6, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_case_insensitivity", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_special_characters", "type": "Function", "lineno": 30}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0004992609999998621, "outcome": "passed"}, "call": {"duration": 0.00032166600000005374, "outcome": "passed"}, "teardown": {"duration": 0.00018950200000000805, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.000211685000000017, "outcome": "passed"}, "call": {"duration": 0.0004885930000000371, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'helll' == 'hell'\n  \n  - hell\n  + helll\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\nE       AssertionError: assert 'helll' == 'hell'\nE         \nE         - hell\nE         + helll\nE         ?     +\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00019680300000013418, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00020348300000039288, "outcome": "passed"}, "call": {"duration": 0.00045202999999993665, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'hell wd' == 'hell world'\n  \n  - hell world\n  ?       ---\n  + hell wd"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"hello world\", \"o\") == \"hell world\"\nE       AssertionError: assert 'hell wd' == 'hell world'\nE         \nE         - hell world\nE         ?       ---\nE         + hell wd\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.000188683999999828, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0002039149999997214, "outcome": "passed"}, "call": {"duration": 0.0001793949999999711, "outcome": "passed"}, "teardown": {"duration": 0.0001607569999997338, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019666099999993136, "outcome": "passed"}, "call": {"duration": 0.0001767639999998849, "outcome": "passed"}, "teardown": {"duration": 0.00015785099999998664, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001965649999999819, "outcome": "passed"}, "call": {"duration": 0.00037376499999997037, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'bnana' == 'bnan'\n  \n  - bnan\n  + bnana\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnan\"\nE       AssertionError: assert 'bnana' == 'bnan'\nE         \nE         - bnan\nE         + bnana\nE         ?     +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00018738400000017919, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_case_insensitivity", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_handles_case_insensitivity", "run.py", "test", ""], "setup": {"duration": 0.00019505299999966752, "outcome": "passed"}, "call": {"duration": 0.0003963179999999511, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'Hell Wd' == 'Hell World'\n  \n  - Hell World\n  ?       ---\n  + Hell Wd"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_case_insensitivity():\n>       assert remove_Occ(\"Hello World\", \"o\") == \"Hell World\"\nE       AssertionError: assert 'Hell Wd' == 'Hell World'\nE         \nE         - Hell World\nE         ?       ---\nE         + Hell Wd\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00018702900000011624, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001946850000003053, "outcome": "passed"}, "call": {"duration": 0.000374826999999911, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert '!#$hello%' == '!$hello%'\n  \n  - !$hello%\n  + !#$hello%\n  ?  +"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_special_characters():\n>       assert remove_Occ(\"!@#$hello@#%\", \"@\") == \"!$hello%\"\nE       AssertionError: assert '!#$hello%' == '!$hello%'\nE         \nE         - !$hello%\nE         + !#$hello%\nE         ?  +\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00018566000000008742, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_repeated_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00019333099999974124, "outcome": "passed"}, "call": {"duration": 0.0003706599999997451, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert '!hello!!' == 'hello!!'\n  \n  - hello!!\n  + !hello!!\n  ? +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_repeated_special_characters():\n>       assert remove_Occ(\"!!hello!!\", \"!\") == \"hello!!\"\nE       AssertionError: assert '!hello!!' == 'hello!!'\nE         \nE         - hello!!\nE         + !hello!!\nE         ? +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00023210800000006415, "outcome": "passed"}}]}, {"created": 1733296046.0505972, "duration": 0.05587458610534668, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 6, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_returns_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_single_character", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_single_character_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_repeated_characters", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_Occ_with_same_char_first_and_last", "type": "Function", "lineno": 36}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0003444879999996431, "outcome": "passed"}, "call": {"duration": 0.0004104089999996674, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'bnana' == 'banna'\n  \n  - banna\n  ?    -\n  + bnana\n  ?  +"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banna\"\nE       AssertionError: assert 'bnana' == 'banna'\nE         \nE         - banna\nE         ?    -\nE         + bnana\nE         ?  +\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00019848999999982908, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017920700000040313, "outcome": "passed"}, "call": {"duration": 0.0003710239999996645, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnana' == 'banan'\n  \n  - banan\n  ?     -\n  + bnana\n  ?  +"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnana' == 'banan'\nE         \nE         - banan\nE         ?     -\nE         + bnana\nE         ?  +\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.0001817539999997564, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00017498800000037562, "outcome": "passed"}, "call": {"duration": 0.00031658900000053336, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'ae' == 'a'\n  \n  - a\n  + ae"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"apple\", \"p\") == \"a\"\nE       AssertionError: assert 'ae' == 'a'\nE         \nE         - a\nE         + ae\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00016881100000087912, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_returns_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_returns_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017558299999986815, "outcome": "passed"}, "call": {"duration": 0.00015522799999967418, "outcome": "passed"}, "teardown": {"duration": 0.00013500900000007476, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001551840000004745, "outcome": "passed"}, "call": {"duration": 0.00014766999999960007, "outcome": "passed"}, "teardown": {"duration": 0.00012987599999991772, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00014792899999971354, "outcome": "passed"}, "call": {"duration": 0.00013962099999975663, "outcome": "passed"}, "teardown": {"duration": 0.00013004900000002095, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00014622799999930436, "outcome": "passed"}, "call": {"duration": 0.00013785599999938114, "outcome": "passed"}, "teardown": {"duration": 0.00012590399999989899, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_character", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_single_character", "run.py", "test", ""], "setup": {"duration": 0.00014833799999980357, "outcome": "passed"}, "call": {"duration": 0.00015347900000062253, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 5, "message": "IndexError: string index out of range"}, "traceback": [{"path": "run.py", "lineno": 29, "message": ""}, {"path": "run.py", "lineno": 5, "message": "IndexError"}], "longrepr": "def test_remove_Occ_with_single_character():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char not in s:\n            return s\n        s = s.replace(char, \"\", 1)  # Remove the first occurrence\n>       s = s.rsplit(char, 1)[0] + s[-1]  # Remove the last occurrence\nE       IndexError: string index out of range\n\nrun.py:5: IndexError"}, "teardown": {"duration": 0.0001774740000000108, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_single_character_string", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_with_single_character_string", "run.py", "test", ""], "setup": {"duration": 0.00017802899999974642, "outcome": "passed"}, "call": {"duration": 0.00015490000000006887, "outcome": "passed"}, "teardown": {"duration": 0.0001328720000000061, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_characters", "run.py", "test", ""], "setup": {"duration": 0.0001694419999997976, "outcome": "passed"}, "call": {"duration": 0.00030759900000010276, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'aaabc' == 'aaaabbbccc'\n  \n  - aaaabbbccc\n  + aaabc"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_characters():\n>       assert remove_Occ(\"aaabbbccc\", \"b\") == \"aaaabbbccc\"\nE       AssertionError: assert 'aaabc' == 'aaaabbbccc'\nE         \nE         - aaaabbbccc\nE         + aaabc\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.0001789470000002069, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_same_char_first_and_last", "lineno": 36, "outcome": "passed", "keywords": ["test_remove_Occ_with_same_char_first_and_last", "run.py", "test", ""], "setup": {"duration": 0.0001752749999992531, "outcome": "passed"}, "call": {"duration": 0.00015542600000006956, "outcome": "passed"}, "teardown": {"duration": 0.0001609739999999249, "outcome": "passed"}}]}, {"created": 1733296045.6587307, "duration": 0.09105348587036133, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 5, "failed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_case_sensitivity", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_numeric_string", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0005859860000008155, "outcome": "passed"}, "call": {"duration": 0.00044855400000010093, "outcome": "passed"}, "teardown": {"duration": 0.00025156000000059464, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002847009999999983, "outcome": "passed"}, "call": {"duration": 0.0006698650000007689, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'helll' == 'hell'\n  \n  - hell\n  + helll\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\nE       AssertionError: assert 'helll' == 'hell'\nE         \nE         - hell\nE         + helll\nE         ?     +\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00034552300000001424, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00027890399999996873, "outcome": "passed"}, "call": {"duration": 0.0008482409999999163, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'helo word' == 'heo world'\n  \n  - heo world\n  ?        -\n  + helo word\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"hello world\", \"l\") == \"heo world\"\nE       AssertionError: assert 'helo word' == 'heo world'\nE         \nE         - heo world\nE         ?        -\nE         + helo word\nE         ?   +\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00025967299999862803, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00026125800000009747, "outcome": "passed"}, "call": {"duration": 0.00024358199999952035, "outcome": "passed"}, "teardown": {"duration": 0.00020998699999985604, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrences", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0002815599999994589, "outcome": "passed"}, "call": {"duration": 0.0002446309999992735, "outcome": "passed"}, "teardown": {"duration": 0.0002466330000014949, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00028669099999945047, "outcome": "passed"}, "call": {"duration": 0.000519799999999293, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'bnana' == 'bnan'\n  \n  - bnan\n  + bnana\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_multiple_occurrences():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnan\"\nE       AssertionError: assert 'bnana' == 'bnan'\nE         \nE         - bnan\nE         + bnana\nE         ?     +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.0002663490000003321, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_handles_repeated_characters", "run.py", "test", ""], "setup": {"duration": 0.00030626499999897305, "outcome": "passed"}, "call": {"duration": 0.00027210399999866297, "outcome": "passed"}, "teardown": {"duration": 0.00021257599999913168, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_case_sensitivity", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_handles_case_sensitivity", "run.py", "test", ""], "setup": {"duration": 0.0004903200000008212, "outcome": "passed"}, "call": {"duration": 0.000611774999999426, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'Hell Wd' == 'Hell World'\n  \n  - Hell World\n  ?       ---\n  + Hell Wd"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_case_sensitivity():\n>       assert remove_Occ(\"Hello World\", \"o\") == \"Hell World\"\nE       AssertionError: assert 'Hell Wd' == 'Hell World'\nE         \nE         - Hell World\nE         ?       ---\nE         + Hell Wd\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.000276865000000015, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00027779600000066296, "outcome": "passed"}, "call": {"duration": 0.00022976500000027045, "outcome": "passed"}, "teardown": {"duration": 0.0004336099999999732, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_numeric_string", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_handles_numeric_string", "run.py", "test", ""], "setup": {"duration": 0.00048826699999970913, "outcome": "passed"}, "call": {"duration": 0.0009123080000001949, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert '1234678900' == '123467890'\n  \n  - 123467890\n  + 1234678900\n  ?          +"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_numeric_string():\n>       assert remove_Occ(\"1234567890\", \"5\") == \"123467890\"\nE       AssertionError: assert '1234678900' == '123467890'\nE         \nE         - 123467890\nE         + 1234678900\nE         ?          +\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.000434782999999328, "outcome": "passed"}}]}, {"created": 1733296046.4164608, "duration": 0.06459355354309082, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 5, "failed": 6, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_char_not_in_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_empty_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_single_char_string", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_string_with_multiple_chars_to_remove", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_string_with_repeated_first_char", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_string_with_repeated_last_char", "type": "Function", "lineno": 36}]}], "tests": [{"nodeid": "run.py::test_remove_first_occurrence", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00043543699999992747, "outcome": "passed"}, "call": {"duration": 0.00021218600000016963, "outcome": "passed"}, "teardown": {"duration": 0.00017836000000004404, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019962000000006697, "outcome": "passed"}, "call": {"duration": 0.0004409069999999904, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'helll' == 'hell'\n  \n  - hell\n  + helll\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\nE       AssertionError: assert 'helll' == 'hell'\nE         \nE         - hell\nE         + helll\nE         ?     +\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.0002142889999998676, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_first_and_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00019856200000001323, "outcome": "passed"}, "call": {"duration": 0.00018711799999993062, "outcome": "passed"}, "teardown": {"duration": 0.00016839200000018373, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_char_not_in_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.000184560999999972, "outcome": "passed"}, "call": {"duration": 0.00017678099999995922, "outcome": "passed"}, "teardown": {"duration": 0.00016580999999993296, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_first_and_last_same_char", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00018424999999999692, "outcome": "passed"}, "call": {"duration": 0.00039457200000003745, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'evel' == 'eve'\n  \n  - eve\n  + evel\n  ?    +"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_first_and_last_same_char():\n>       assert remove_Occ(\"level\", \"l\") == \"eve\"\nE       AssertionError: assert 'evel' == 'eve'\nE         \nE         - eve\nE         + evel\nE         ?    +\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.00018880999999981718, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_multiple_occurrences", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00019325400000003157, "outcome": "passed"}, "call": {"duration": 0.000396596999999943, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 23, "message": "AssertionError: assert 'mssissippi' == 'msssspp'\n  \n  - msssspp\n  + mssissippi\n  ?    +  +  +"}, "traceback": [{"path": "run.py", "lineno": 23, "message": "AssertionError"}], "longrepr": "def test_remove_multiple_occurrences():\n>       assert remove_Occ(\"mississippi\", \"i\") == \"msssspp\"\nE       AssertionError: assert 'mssissippi' == 'msssspp'\nE         \nE         - msssspp\nE         + mssissippi\nE         ?    +  +  +\n\nrun.py:23: AssertionError"}, "teardown": {"duration": 0.00018421000000001797, "outcome": "passed"}}, {"nodeid": "run.py::test_empty_string", "lineno": 24, "outcome": "passed", "keywords": ["test_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00019064199999996312, "outcome": "passed"}, "call": {"duration": 0.0001928769999999247, "outcome": "passed"}, "teardown": {"duration": 0.0001579169999998964, "outcome": "passed"}}, {"nodeid": "run.py::test_single_char_string", "lineno": 27, "outcome": "failed", "keywords": ["test_single_char_string", "run.py", "test", ""], "setup": {"duration": 0.00018278999999998824, "outcome": "passed"}, "call": {"duration": 0.00020348500000011427, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 5, "message": "IndexError: string index out of range"}, "traceback": [{"path": "run.py", "lineno": 29, "message": ""}, {"path": "run.py", "lineno": 5, "message": "IndexError"}], "longrepr": "def test_single_char_string():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char not in s:\n            return s\n        s = s.replace(char, \"\", 1)  # Remove the first occurrence\n>       s = s.rsplit(char, 1)[0] + s[-1]  # Remove the last occurrence\nE       IndexError: string index out of range\n\nrun.py:5: IndexError"}, "teardown": {"duration": 0.0001867809999998027, "outcome": "passed"}}, {"nodeid": "run.py::test_string_with_multiple_chars_to_remove", "lineno": 30, "outcome": "failed", "keywords": ["test_string_with_multiple_chars_to_remove", "run.py", "test", ""], "setup": {"duration": 0.0001899370000000289, "outcome": "passed"}, "call": {"duration": 0.0003865570000001206, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'bnana' == 'bnan'\n  \n  - bnan\n  + bnana\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_string_with_multiple_chars_to_remove():\n>       assert remove_Occ(\"banana\", \"a\") == \"bnan\"\nE       AssertionError: assert 'bnana' == 'bnan'\nE         \nE         - bnan\nE         + bnana\nE         ?     +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.0001953489999999558, "outcome": "passed"}}, {"nodeid": "run.py::test_string_with_repeated_first_char", "lineno": 33, "outcome": "failed", "keywords": ["test_string_with_repeated_first_char", "run.py", "test", ""], "setup": {"duration": 0.00019075900000009582, "outcome": "passed"}, "call": {"duration": 0.00034237500000000587, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'ac' == 'aaabbbccc'\n  \n  - aaabbbccc\n  + ac"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_string_with_repeated_first_char():\n>       assert remove_Occ(\"aaabbbccc\", \"a\") == \"aaabbbccc\"\nE       AssertionError: assert 'ac' == 'aaabbbccc'\nE         \nE         - aaabbbccc\nE         + ac\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.0001835290000000711, "outcome": "passed"}}, {"nodeid": "run.py::test_string_with_repeated_last_char", "lineno": 36, "outcome": "passed", "keywords": ["test_string_with_repeated_last_char", "run.py", "test", ""], "setup": {"duration": 0.00019902199999988213, "outcome": "passed"}, "call": {"duration": 0.00018128800000005718, "outcome": "passed"}, "teardown": {"duration": 0.0001941560000000564, "outcome": "passed"}}]}, {"created": 1733296045.278981, "duration": 0.05613136291503906, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 5, "failed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_case_sensitivity", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00033415999999952817, "outcome": "passed"}, "call": {"duration": 0.00024359000000018227, "outcome": "passed"}, "teardown": {"duration": 0.00018680199999998592, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016359500000007188, "outcome": "passed"}, "call": {"duration": 0.0003893339999994083, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'helll' == 'hell'\n  \n  - hell\n  + helll\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\nE       AssertionError: assert 'helll' == 'hell'\nE         \nE         - hell\nE         + helll\nE         ?     +\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00018963599999999303, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.0001741119999998375, "outcome": "passed"}, "call": {"duration": 0.0003771870000006672, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'hell wd' == 'hell world'\n  \n  - hell world\n  ?       ---\n  + hell wd"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"hello world\", \"o\") == \"hell world\"\nE       AssertionError: assert 'hell wd' == 'hell world'\nE         \nE         - hell world\nE         ?       ---\nE         + hell wd\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.0001924429999995425, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017597200000007973, "outcome": "passed"}, "call": {"duration": 0.00015252200000048788, "outcome": "passed"}, "teardown": {"duration": 0.0001339379999993895, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrence", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015702800000028105, "outcome": "passed"}, "call": {"duration": 0.00014082100000045727, "outcome": "passed"}, "teardown": {"duration": 0.00012741299999952105, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00014637700000008635, "outcome": "passed"}, "call": {"duration": 0.00014304799999997897, "outcome": "passed"}, "teardown": {"duration": 0.00012556800000051993, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_handles_single_character_string", "run.py", "test", ""], "setup": {"duration": 0.00014591899999949476, "outcome": "passed"}, "call": {"duration": 0.0001499219999994139, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 5, "message": "IndexError: string index out of range"}, "traceback": [{"path": "run.py", "lineno": 26, "message": ""}, {"path": "run.py", "lineno": 5, "message": "IndexError"}], "longrepr": "def test_remove_Occ_handles_single_character_string():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char not in s:\n            return s\n        s = s.replace(char, \"\", 1)  # Remove the first occurrence\n>       s = s.rsplit(char, 1)[0] + s[-1]  # Remove the last occurrence\nE       IndexError: string index out of range\n\nrun.py:5: IndexError"}, "teardown": {"duration": 0.0001770119999999764, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_repeated_characters", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_repeated_characters", "run.py", "test", ""], "setup": {"duration": 0.00017172199999926363, "outcome": "passed"}, "call": {"duration": 0.0001575189999991622, "outcome": "passed"}, "teardown": {"duration": 0.0001339930000003875, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_case_sensitivity", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_case_sensitivity", "run.py", "test", ""], "setup": {"duration": 0.00016928600000021277, "outcome": "passed"}, "call": {"duration": 0.0003378610000002169, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'HeloWord' == 'HeoWorld'\n  \n  - HeoWorld\n  ?       -\n  + HeloWord\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_case_sensitivity():\n>       assert remove_Occ(\"HelloWorld\", \"l\") == \"HeoWorld\"\nE       AssertionError: assert 'HeloWord' == 'HeoWorld'\nE         \nE         - HeoWorld\nE         ?       -\nE         + HeloWord\nE         ?   +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00018346999999963032, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00016843399999988407, "outcome": "passed"}, "call": {"duration": 0.0003488819999999393, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert '!#hello$' == '!#hello#$'\n  \n  - !#hello#$\n  ?        -\n  + !#hello$"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_special_characters():\n>       assert remove_Occ(\"!@#hello@#$\", \"@\") == \"!#hello#$\"\nE       AssertionError: assert '!#hello$' == '!#hello#$'\nE         \nE         - !#hello#$\nE         ?        -\nE         + !#hello$\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.0002038299999993498, "outcome": "passed"}}]}, {"created": 1733296045.4873433, "duration": 0.05809283256530762, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 4, "failed": 6, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_single_character", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_leading_occurrence", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_trailing_occurrence", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_case_sensitive", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00032988400000011353, "outcome": "passed"}, "call": {"duration": 0.00019228900000012317, "outcome": "passed"}, "teardown": {"duration": 0.00016582800000009001, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001652260000000183, "outcome": "passed"}, "call": {"duration": 0.0004188179999999875, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'bnana' == 'banan'\n  \n  - banan\n  ?     -\n  + bnana\n  ?  +"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnana' == 'banan'\nE         \nE         - banan\nE         ?     -\nE         + bnana\nE         ?  +\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00021210299999996352, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00017773500000028974, "outcome": "passed"}, "call": {"duration": 0.00033731399999936684, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'ae' == 'aple'\n  \n  - aple\n  + ae"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_keeps_other_characters():\n>       assert remove_Occ(\"apple\", \"p\") == \"aple\"\nE       AssertionError: assert 'ae' == 'aple'\nE         \nE         - aple\nE         + ae\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.00017844499999952745, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017151800000014816, "outcome": "passed"}, "call": {"duration": 0.00015760600000014335, "outcome": "passed"}, "teardown": {"duration": 0.00013460799999975848, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00015605099999937977, "outcome": "passed"}, "call": {"duration": 0.00014360900000021104, "outcome": "passed"}, "teardown": {"duration": 0.0001353760000002424, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_character", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_single_character", "run.py", "test", ""], "setup": {"duration": 0.00015685099999984686, "outcome": "passed"}, "call": {"duration": 0.00016054499999995642, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 5, "message": "IndexError: string index out of range"}, "traceback": [{"path": "run.py", "lineno": 23, "message": ""}, {"path": "run.py", "lineno": 5, "message": "IndexError"}], "longrepr": "def test_remove_Occ_single_character():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char not in s:\n            return s\n        s = s.replace(char, \"\", 1)  # Remove the first occurrence\n>       s = s.rsplit(char, 1)[0] + s[-1]  # Remove the last occurrence\nE       IndexError: string index out of range\n\nrun.py:5: IndexError"}, "teardown": {"duration": 0.0001795009999998598, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0001745820000005338, "outcome": "passed"}, "call": {"duration": 0.00015299699999982153, "outcome": "passed"}, "teardown": {"duration": 0.00013338800000006756, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_leading_occurrence", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_leading_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001646980000007403, "outcome": "passed"}, "call": {"duration": 0.0003356119999997631, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'ananaa' == 'anana'\n  \n  - anana\n  + ananaa\n  ?      +"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_leading_occurrence():\n>       assert remove_Occ(\"banana\", \"b\") == \"anana\"\nE       AssertionError: assert 'ananaa' == 'anana'\nE         \nE         - anana\nE         + ananaa\nE         ?      +\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00017987300000044115, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_trailing_occurrence", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_trailing_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00018632100000015583, "outcome": "passed"}, "call": {"duration": 0.00034059000000041806, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'bnana' == 'banan'\n  \n  - banan\n  ?     -\n  + bnana\n  ?  +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_trailing_occurrence():\n>       assert remove_Occ(\"banana\", \"a\") == \"banan\"\nE       AssertionError: assert 'bnana' == 'banan'\nE         \nE         - banan\nE         ?     -\nE         + bnana\nE         ?  +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.0001911100000002719, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_case_sensitive", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_case_sensitive", "run.py", "test", ""], "setup": {"duration": 0.0001722219999997776, "outcome": "passed"}, "call": {"duration": 0.00033554699999971405, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'Bnana' == 'Bnanan'\n  \n  - Bnanan\n  ?      -\n  + Bnana"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_case_sensitive():\n>       assert remove_Occ(\"Banana\", \"a\") == \"Bnanan\"\nE       AssertionError: assert 'Bnana' == 'Bnanan'\nE         \nE         - Bnanan\nE         ?      -\nE         + Bnana\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00020738899999983573, "outcome": "passed"}}]}, {"created": 1733296046.1720808, "duration": 0.04795575141906738, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 5, "failed": 3, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_single_character", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_multiple_same_characters", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002849999999998687, "outcome": "passed"}, "call": {"duration": 0.0001852370000001713, "outcome": "passed"}, "teardown": {"duration": 0.00015188799999954483, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015742399999929546, "outcome": "passed"}, "call": {"duration": 0.00048168599999875994, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'helll' == 'hell'\n  \n  - hell\n  + helll\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\nE       AssertionError: assert 'helll' == 'hell'\nE         \nE         - hell\nE         + helll\nE         ?     +\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00017993099999991102, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_keeps_other_characters", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_keeps_other_characters", "run.py", "test", ""], "setup": {"duration": 0.00018429799999886143, "outcome": "passed"}, "call": {"duration": 0.00017053499999875044, "outcome": "passed"}, "teardown": {"duration": 0.00013208000000020093, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_no_occurrence", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001581900000005021, "outcome": "passed"}, "call": {"duration": 0.00014450499999973943, "outcome": "passed"}, "teardown": {"duration": 0.000126080999999445, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016532200000085595, "outcome": "passed"}, "call": {"duration": 0.0001407980000003306, "outcome": "passed"}, "teardown": {"duration": 0.00012904899999988118, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_character", "lineno": 21, "outcome": "failed", "keywords": ["test_remove_Occ_single_character", "run.py", "test", ""], "setup": {"duration": 0.00015637799999979052, "outcome": "passed"}, "call": {"duration": 0.00015958000000004802, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 5, "message": "IndexError: string index out of range"}, "traceback": [{"path": "run.py", "lineno": 23, "message": ""}, {"path": "run.py", "lineno": 5, "message": "IndexError"}], "longrepr": "def test_remove_Occ_single_character():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char not in s:\n            return s\n        s = s.replace(char, \"\", 1)  # Remove the first occurrence\n>       s = s.rsplit(char, 1)[0] + s[-1]  # Remove the last occurrence\nE       IndexError: string index out of range\n\nrun.py:5: IndexError"}, "teardown": {"duration": 0.00017614699999946026, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017233799999871735, "outcome": "passed"}, "call": {"duration": 0.00015198500000046522, "outcome": "passed"}, "teardown": {"duration": 0.00013211599999962687, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_same_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_multiple_same_characters", "run.py", "test", ""], "setup": {"duration": 0.00017201300000024844, "outcome": "passed"}, "call": {"duration": 0.0002781530000000032, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'aaa' == ''\n  \n  + aaa"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_multiple_same_characters():\n>       assert remove_Occ(\"aaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aaa' == ''\nE         \nE         + aaa\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00019415000000044813, "outcome": "passed"}}]}, {"created": 1733296046.0143607, "duration": 0.057927608489990234, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 5, "failed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_case_insensitive", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_repeated_chars", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_char_same", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00037475999999969645, "outcome": "passed"}, "call": {"duration": 0.00020444500000005306, "outcome": "passed"}, "teardown": {"duration": 0.0001720899999999581, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrences", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016467499999972546, "outcome": "passed"}, "call": {"duration": 0.0001812869999997524, "outcome": "passed"}, "teardown": {"duration": 0.00013515700000032993, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_with_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001690409999999254, "outcome": "passed"}, "call": {"duration": 0.00015049000000022517, "outcome": "passed"}, "teardown": {"duration": 0.0001352599999999704, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_with_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001545420000002018, "outcome": "passed"}, "call": {"duration": 0.00037949400000014677, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'baaa' == 'banba'\n  \n  - banba\n  + baaa"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_last_occurrence():\n>       assert remove_Occ(\"banana\", \"n\") == \"banba\"\nE       AssertionError: assert 'baaa' == 'banba'\nE         \nE         - banba\nE         + baaa\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00021082800000016277, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00021885400000032362, "outcome": "passed"}, "call": {"duration": 0.00018537699999976454, "outcome": "passed"}, "teardown": {"duration": 0.00015112000000039316, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_case_insensitive", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_with_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.00017191700000029897, "outcome": "passed"}, "call": {"duration": 0.0001513139999995694, "outcome": "passed"}, "teardown": {"duration": 0.00013187500000011454, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00015164299999970154, "outcome": "passed"}, "call": {"duration": 0.0003956619999998523, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'bna' == 'b@nna'\n  \n  - b@nna\n  ?  --\n  + bna"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"b@n@na\", \"@\") == \"b@nna\"\nE       AssertionError: assert 'bna' == 'b@nna'\nE         \nE         - b@nna\nE         ?  --\nE         + bna\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00019638900000007453, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00017207200000024514, "outcome": "passed"}, "call": {"duration": 0.00016805600000013854, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 5, "message": "IndexError: string index out of range"}, "traceback": [{"path": "run.py", "lineno": 29, "message": ""}, {"path": "run.py", "lineno": 5, "message": "IndexError"}], "longrepr": "def test_remove_Occ_with_first_and_last_same_char():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char not in s:\n            return s\n        s = s.replace(char, \"\", 1)  # Remove the first occurrence\n>       s = s.rsplit(char, 1)[0] + s[-1]  # Remove the last occurrence\nE       IndexError: string index out of range\n\nrun.py:5: IndexError"}, "teardown": {"duration": 0.0001763249999999772, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_chars", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_chars", "run.py", "test", ""], "setup": {"duration": 0.00018500299999990588, "outcome": "passed"}, "call": {"duration": 0.0003445760000002629, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'aac' == 'aaacc'\n  \n  - aaacc\n  ? -   -\n  + aac"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_chars():\n>       assert remove_Occ(\"aabbcc\", \"b\") == \"aaacc\"\nE       AssertionError: assert 'aac' == 'aaacc'\nE         \nE         - aaacc\nE         ? -   -\nE         + aac\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00018336000000029884, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_char_same", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_char_same", "run.py", "test", ""], "setup": {"duration": 0.00017204199999998337, "outcome": "passed"}, "call": {"duration": 0.00035625500000024957, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'bacaba' == 'baca'\n  \n  - baca\n  + bacaba\n  ?     ++"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_char_same():\n>       assert remove_Occ(\"abacaba\", \"a\") == \"baca\"\nE       AssertionError: assert 'bacaba' == 'baca'\nE         \nE         - baca\nE         + bacaba\nE         ?     ++\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00021529099999995083, "outcome": "passed"}}]}, {"created": 1733296046.1315675, "duration": 0.057843923568725586, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 7, "failed": 5, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_both_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_multiple_same_char", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_only_one_char", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 33}, {"nodeid": "run.py::test_remove_Occ_with_numeric_string", "type": "Function", "lineno": 36}, {"nodeid": "run.py::test_remove_Occ_with_multiple_same_chars_at_end", "type": "Function", "lineno": 39}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0003561559999996078, "outcome": "passed"}, "call": {"duration": 0.0001787840000000429, "outcome": "passed"}, "teardown": {"duration": 0.00015773500000015872, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00016339200000015097, "outcome": "passed"}, "call": {"duration": 0.00016254599999943053, "outcome": "passed"}, "teardown": {"duration": 0.00014107999999968257, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_with_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00015606799999989818, "outcome": "passed"}, "call": {"duration": 0.00014399700000033988, "outcome": "passed"}, "teardown": {"duration": 0.00012835500000019096, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_with_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0001604099999994446, "outcome": "passed"}, "call": {"duration": 0.00034378899999953916, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'baaa' == 'banba'\n  \n  - banba\n  + baaa"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_last_occurrence():\n>       assert remove_Occ(\"banana\", \"n\") == \"banba\"\nE       AssertionError: assert 'baaa' == 'banba'\nE         \nE         - banba\nE         + baaa\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00018604100000008117, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_both_occurrences", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_with_both_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017233400000016275, "outcome": "passed"}, "call": {"duration": 0.0003808720000000321, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 20, "message": "AssertionError: assert 'bracadabra' == 'brcdbr'\n  \n  - brcdbr\n  + bracadabra\n  ?   + + +  +"}, "traceback": [{"path": "run.py", "lineno": 20, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_both_occurrences():\n>       assert remove_Occ(\"abracadabra\", \"a\") == \"brcdbr\"\nE       AssertionError: assert 'bracadabra' == 'brcdbr'\nE         \nE         - brcdbr\nE         + bracadabra\nE         ?   + + +  +\n\nrun.py:20: AssertionError"}, "teardown": {"duration": 0.0001790169999997815, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_same_char", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_with_multiple_same_char", "run.py", "test", ""], "setup": {"duration": 0.00018475599999945302, "outcome": "passed"}, "call": {"duration": 0.00015414900000010334, "outcome": "passed"}, "teardown": {"duration": 0.0001324970000000647, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_same_char", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_same_char", "run.py", "test", ""], "setup": {"duration": 0.00015605299999954525, "outcome": "passed"}, "call": {"duration": 0.00034362900000051155, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'evel' == 'levl'\n  \n  - levl\n  ? -\n  + evel\n  ?   +"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_same_char():\n>       assert remove_Occ(\"level\", \"l\") == \"levl\"\nE       AssertionError: assert 'evel' == 'levl'\nE         \nE         - levl\nE         ? -\nE         + evel\nE         ?   +\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00018117800000005957, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_only_one_char", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_only_one_char", "run.py", "test", ""], "setup": {"duration": 0.000173173000000304, "outcome": "passed"}, "call": {"duration": 0.00028932599999986763, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'aaaa' == ''\n  \n  + aaaa"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_only_one_char():\n>       assert remove_Occ(\"aaaaa\", \"a\") == \"\"\nE       AssertionError: assert 'aaaa' == ''\nE         \nE         + aaaa\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00018072200000052163, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_char_not_in_string", "lineno": 30, "outcome": "passed", "keywords": ["test_remove_Occ_with_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00017390999999999934, "outcome": "passed"}, "call": {"duration": 0.0001544189999993506, "outcome": "passed"}, "teardown": {"duration": 0.00013483599999997153, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 33, "outcome": "passed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0001708350000004799, "outcome": "passed"}, "call": {"duration": 0.0001480160000006947, "outcome": "passed"}, "teardown": {"duration": 0.00013388400000025058, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_numeric_string", "lineno": 36, "outcome": "failed", "keywords": ["test_remove_Occ_with_numeric_string", "run.py", "test", ""], "setup": {"duration": 0.0001582109999995751, "outcome": "passed"}, "call": {"duration": 0.00033724900000020597, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 38, "message": "AssertionError: assert '1245678900' == '124567890'\n  \n  - 124567890\n  + 1245678900\n  ?          +"}, "traceback": [{"path": "run.py", "lineno": 38, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_numeric_string():\n>       assert remove_Occ(\"1234567890\", \"3\") == \"124567890\"\nE       AssertionError: assert '1245678900' == '124567890'\nE         \nE         - 124567890\nE         + 1245678900\nE         ?          +\n\nrun.py:38: AssertionError"}, "teardown": {"duration": 0.0001982469999992631, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_same_chars_at_end", "lineno": 39, "outcome": "passed", "keywords": ["test_remove_Occ_with_multiple_same_chars_at_end", "run.py", "test", ""], "setup": {"duration": 0.00017197099999943788, "outcome": "passed"}, "call": {"duration": 0.00015436799999957174, "outcome": "passed"}, "teardown": {"duration": 0.00019027499999957342, "outcome": "passed"}}]}, {"created": 1733296045.7865298, "duration": 0.05546236038208008, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"failed": 5, "passed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_char_not_present", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrences", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_handles_case_insensitive", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_handles_consecutive_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_removes_first_occurrence", "lineno": 6, "outcome": "failed", "keywords": ["test_remove_Occ_removes_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00031605800000011897, "outcome": "passed"}, "call": {"duration": 0.00041428000000021115, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 8, "message": "AssertionError: assert 'heo' == 'heloo'\n  \n  - heloo\n  ?   - -\n  + heo"}, "traceback": [{"path": "run.py", "lineno": 8, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_first_occurrence():\n>       assert remove_Occ(\"hello\", \"l\") == \"heloo\"\nE       AssertionError: assert 'heo' == 'heloo'\nE         \nE         - heloo\nE         ?   - -\nE         + heo\n\nrun.py:8: AssertionError"}, "teardown": {"duration": 0.00020226700000014475, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_removes_last_occurrence", "lineno": 9, "outcome": "failed", "keywords": ["test_remove_Occ_removes_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017514000000007357, "outcome": "passed"}, "call": {"duration": 0.00037348399999981297, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 11, "message": "AssertionError: assert 'helll' == 'hell'\n  \n  - hell\n  + helll\n  ?     +"}, "traceback": [{"path": "run.py", "lineno": 11, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_removes_last_occurrence():\n>       assert remove_Occ(\"hello\", \"o\") == \"hell\"\nE       AssertionError: assert 'helll' == 'hell'\nE         \nE         - hell\nE         + helll\nE         ?     +\n\nrun.py:11: AssertionError"}, "teardown": {"duration": 0.00017830999999990382, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_returns_original_string_if_char_not_present", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_returns_original_string_if_char_not_present", "run.py", "test", ""], "setup": {"duration": 0.00017465599999999526, "outcome": "passed"}, "call": {"duration": 0.000153419000000099, "outcome": "passed"}, "teardown": {"duration": 0.00013337200000007599, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_empty_string", "lineno": 15, "outcome": "passed", "keywords": ["test_remove_Occ_handles_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00017529500000001974, "outcome": "passed"}, "call": {"duration": 0.00014634299999993772, "outcome": "passed"}, "teardown": {"duration": 0.00013040999999969216, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_single_character_string", "lineno": 18, "outcome": "failed", "keywords": ["test_remove_Occ_handles_single_character_string", "run.py", "test", ""], "setup": {"duration": 0.0001522199999999252, "outcome": "passed"}, "call": {"duration": 0.0001685530000004043, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 5, "message": "IndexError: string index out of range"}, "traceback": [{"path": "run.py", "lineno": 20, "message": ""}, {"path": "run.py", "lineno": 5, "message": "IndexError"}], "longrepr": "def test_remove_Occ_handles_single_character_string():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char not in s:\n            return s\n        s = s.replace(char, \"\", 1)  # Remove the first occurrence\n>       s = s.rsplit(char, 1)[0] + s[-1]  # Remove the last occurrence\nE       IndexError: string index out of range\n\nrun.py:5: IndexError"}, "teardown": {"duration": 0.00017907800000038776, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_multiple_occurrences", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_handles_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00017208900000031946, "outcome": "passed"}, "call": {"duration": 0.00015549100000011862, "outcome": "passed"}, "teardown": {"duration": 0.00014595400000017023, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_no_occurrences", "lineno": 24, "outcome": "passed", "keywords": ["test_remove_Occ_handles_no_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016412999999992905, "outcome": "passed"}, "call": {"duration": 0.00014799800000009355, "outcome": "passed"}, "teardown": {"duration": 0.0001296800000001319, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_case_insensitive", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_handles_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.0001566020000001167, "outcome": "passed"}, "call": {"duration": 0.00014404500000031462, "outcome": "passed"}, "teardown": {"duration": 0.00012630699999993666, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_handles_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00014849799999971935, "outcome": "passed"}, "call": {"duration": 0.0003282809999998193, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'hell!!' == 'hell!'\n  \n  - hell!\n  + hell!!\n  ?      +"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_special_characters():\n>       assert remove_Occ(\"hello!\", \"o\") == \"hell!\"\nE       AssertionError: assert 'hell!!' == 'hell!'\nE         \nE         - hell!\nE         + hell!!\nE         ?      +\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00017801799999972445, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_handles_consecutive_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_handles_consecutive_characters", "run.py", "test", ""], "setup": {"duration": 0.00017184099999978386, "outcome": "passed"}, "call": {"duration": 0.0003566689999998651, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'bookkepr' == 'bookkeepr'\n  \n  - bookkeepr\n  ?       -\n  + bookkepr"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_handles_consecutive_characters():\n>       assert remove_Occ(\"bookkeeper\", \"e\") == \"bookkeepr\"\nE       AssertionError: assert 'bookkepr' == 'bookkeepr'\nE         \nE         - bookkeepr\nE         ?       -\nE         + bookkepr\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00020830900000001762, "outcome": "passed"}}]}, {"created": 1733296045.5821588, "duration": 0.04797244071960449, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 5, "failed": 3, "total": 8, "collected": 8}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_no_char", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_first_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_last_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_both_occurrences", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_single_char", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_empty_string", "type": "Function", "lineno": 27}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_no_char", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_char", "run.py", "test", ""], "setup": {"duration": 0.00028233499999963385, "outcome": "passed"}, "call": {"duration": 0.0002209510000001913, "outcome": "passed"}, "teardown": {"duration": 0.0001536360000002901, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_first_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00017686700000041355, "outcome": "passed"}, "call": {"duration": 0.00022588400000067566, "outcome": "passed"}, "teardown": {"duration": 0.0001323809999993486, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_last_occurrence", "lineno": 12, "outcome": "failed", "keywords": ["test_remove_Occ_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00014815499999976112, "outcome": "passed"}, "call": {"duration": 0.0003406349999997005, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 14, "message": "AssertionError: assert 'baaa' == 'banba'\n  \n  - banba\n  + baaa"}, "traceback": [{"path": "run.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_last_occurrence():\n>       assert remove_Occ(\"banana\", \"n\") == \"banba\"\nE       AssertionError: assert 'baaa' == 'banba'\nE         \nE         - banba\nE         + baaa\n\nrun.py:14: AssertionError"}, "teardown": {"duration": 0.0001888000000001, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_both_occurrences", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_both_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016999300000009043, "outcome": "passed"}, "call": {"duration": 0.0003853229999997154, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'harar' == 'harater'\n  \n  - harater\n  ?     --\n  + harar"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_both_occurrences():\n>       assert remove_Occ(\"character\", \"c\") == \"harater\"\nE       AssertionError: assert 'harar' == 'harater'\nE         \nE         - harater\nE         ?     --\nE         + harar\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00020226699999970066, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_char_not_in_string", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_char_not_in_string", "run.py", "test", ""], "setup": {"duration": 0.00017468599999936885, "outcome": "passed"}, "call": {"duration": 0.0001527630000000002, "outcome": "passed"}, "teardown": {"duration": 0.00013566500000017356, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_multiple_occurrences", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.00016121300000015992, "outcome": "passed"}, "call": {"duration": 0.00014644100000005267, "outcome": "passed"}, "teardown": {"duration": 0.00012858799999992954, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_single_char", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_single_char", "run.py", "test", ""], "setup": {"duration": 0.0001553420000002248, "outcome": "passed"}, "call": {"duration": 0.0001558230000000549, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 5, "message": "IndexError: string index out of range"}, "traceback": [{"path": "run.py", "lineno": 26, "message": ""}, {"path": "run.py", "lineno": 5, "message": "IndexError"}], "longrepr": "def test_remove_Occ_single_char():\n>       assert remove_Occ(\"a\", \"a\") == \"\"\n\nrun.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', char = 'a'\n\n    def remove_Occ(s, char):\n        if char not in s:\n            return s\n        s = s.replace(char, \"\", 1)  # Remove the first occurrence\n>       s = s.rsplit(char, 1)[0] + s[-1]  # Remove the last occurrence\nE       IndexError: string index out of range\n\nrun.py:5: IndexError"}, "teardown": {"duration": 0.0001728069999993309, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_empty_string", "lineno": 27, "outcome": "passed", "keywords": ["test_remove_Occ_empty_string", "run.py", "test", ""], "setup": {"duration": 0.00016842700000019306, "outcome": "passed"}, "call": {"duration": 0.00015011899999972655, "outcome": "passed"}, "teardown": {"duration": 0.00017791099999975302, "outcome": "passed"}}]}, {"created": 1733296046.54482, "duration": 0.08460330963134766, "exitcode": 1, "root": "/test", "environment": {}, "summary": {"passed": 5, "failed": 5, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "run.py", "type": "Module"}]}, {"nodeid": "run.py", "outcome": "passed", "result": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "type": "Function", "lineno": 6}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrence", "type": "Function", "lineno": 9}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "type": "Function", "lineno": 12}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "type": "Function", "lineno": 15}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "type": "Function", "lineno": 18}, {"nodeid": "run.py::test_remove_Occ_with_case_insensitive", "type": "Function", "lineno": 21}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "type": "Function", "lineno": 24}, {"nodeid": "run.py::test_remove_Occ_with_multiple_special_characters", "type": "Function", "lineno": 27}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "type": "Function", "lineno": 30}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_special_characters", "type": "Function", "lineno": 33}]}], "tests": [{"nodeid": "run.py::test_remove_Occ_with_empty_string", "lineno": 6, "outcome": "passed", "keywords": ["test_remove_Occ_with_empty_string", "run.py", "test", ""], "setup": {"duration": 0.0005337039999986359, "outcome": "passed"}, "call": {"duration": 0.0003515440000008141, "outcome": "passed"}, "teardown": {"duration": 0.00036537899999977697, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_no_occurrence", "lineno": 9, "outcome": "passed", "keywords": ["test_remove_Occ_with_no_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002787590000004059, "outcome": "passed"}, "call": {"duration": 0.00045116099999908954, "outcome": "passed"}, "teardown": {"duration": 0.0002684770000005443, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_occurrence", "lineno": 12, "outcome": "passed", "keywords": ["test_remove_Occ_with_first_occurrence", "run.py", "test", ""], "setup": {"duration": 0.00023551499999996395, "outcome": "passed"}, "call": {"duration": 0.00022007300000126406, "outcome": "passed"}, "teardown": {"duration": 0.00021595300000143425, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_last_occurrence", "lineno": 15, "outcome": "failed", "keywords": ["test_remove_Occ_with_last_occurrence", "run.py", "test", ""], "setup": {"duration": 0.0002400019999999614, "outcome": "passed"}, "call": {"duration": 0.0005530799999995395, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 17, "message": "AssertionError: assert 'baaa' == 'banba'\n  \n  - banba\n  + baaa"}, "traceback": [{"path": "run.py", "lineno": 17, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_last_occurrence():\n>       assert remove_Occ(\"banana\", \"n\") == \"banba\"\nE       AssertionError: assert 'baaa' == 'banba'\nE         \nE         - banba\nE         + baaa\n\nrun.py:17: AssertionError"}, "teardown": {"duration": 0.00034611600000111764, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_occurrences", "lineno": 18, "outcome": "passed", "keywords": ["test_remove_Occ_with_multiple_occurrences", "run.py", "test", ""], "setup": {"duration": 0.0002935720000003528, "outcome": "passed"}, "call": {"duration": 0.00026469500000025903, "outcome": "passed"}, "teardown": {"duration": 0.00025140700000036986, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_case_insensitive", "lineno": 21, "outcome": "passed", "keywords": ["test_remove_Occ_with_case_insensitive", "run.py", "test", ""], "setup": {"duration": 0.0002513929999992115, "outcome": "passed"}, "call": {"duration": 0.00024900500000057946, "outcome": "passed"}, "teardown": {"duration": 0.00022618499999893515, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_special_characters", "lineno": 24, "outcome": "failed", "keywords": ["test_remove_Occ_with_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00023743100000039874, "outcome": "passed"}, "call": {"duration": 0.0006279080000002324, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 26, "message": "AssertionError: assert 'helloworldd' == 'hello@worl'\n  \n  - hello@worl\n  ?      -\n  + helloworldd\n  ?          ++"}, "traceback": [{"path": "run.py", "lineno": 26, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_special_characters():\n>       assert remove_Occ(\"hello@world\", \"@\") == \"hello@worl\"\nE       AssertionError: assert 'helloworldd' == 'hello@worl'\nE         \nE         - hello@worl\nE         ?      -\nE         + helloworldd\nE         ?          ++\n\nrun.py:26: AssertionError"}, "teardown": {"duration": 0.00027693000000006407, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_multiple_special_characters", "lineno": 27, "outcome": "failed", "keywords": ["test_remove_Occ_with_multiple_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0002546609999996008, "outcome": "passed"}, "call": {"duration": 0.0005671679999998958, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 29, "message": "AssertionError: assert 'hellod' == 'hello@worl'\n  \n  - hello@worl\n  + hellod"}, "traceback": [{"path": "run.py", "lineno": 29, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_multiple_special_characters():\n>       assert remove_Occ(\"hello@@world\", \"@\") == \"hello@worl\"\nE       AssertionError: assert 'hellod' == 'hello@worl'\nE         \nE         - hello@worl\nE         + hellod\n\nrun.py:29: AssertionError"}, "teardown": {"duration": 0.00026960799999997676, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_repeated_special_characters", "lineno": 30, "outcome": "failed", "keywords": ["test_remove_Occ_with_repeated_special_characters", "run.py", "test", ""], "setup": {"duration": 0.00028514400000112516, "outcome": "passed"}, "call": {"duration": 0.0005046009999993828, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 32, "message": "AssertionError: assert 'hello@d' == 'hello@worl'\n  \n  - hello@worl\n  + hello@d"}, "traceback": [{"path": "run.py", "lineno": 32, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_repeated_special_characters():\n>       assert remove_Occ(\"hello@@@world\", \"@\") == \"hello@worl\"\nE       AssertionError: assert 'hello@d' == 'hello@worl'\nE         \nE         - hello@worl\nE         + hello@d\n\nrun.py:32: AssertionError"}, "teardown": {"duration": 0.00028596399999969435, "outcome": "passed"}}, {"nodeid": "run.py::test_remove_Occ_with_first_and_last_special_characters", "lineno": 33, "outcome": "failed", "keywords": ["test_remove_Occ_with_first_and_last_special_characters", "run.py", "test", ""], "setup": {"duration": 0.0002841670000002239, "outcome": "passed"}, "call": {"duration": 0.000546319999999767, "outcome": "failed", "crash": {"path": "/test/run.py", "lineno": 35, "message": "AssertionError: assert 'hello@world@' == 'hello@worl'\n  \n  - hello@worl\n  + hello@world@\n  ?           ++"}, "traceback": [{"path": "run.py", "lineno": 35, "message": "AssertionError"}], "longrepr": "def test_remove_Occ_with_first_and_last_special_characters():\n>       assert remove_Occ(\"@hello@world@\", \"@\") == \"hello@worl\"\nE       AssertionError: assert 'hello@world@' == 'hello@worl'\nE         \nE         - hello@worl\nE         + hello@world@\nE         ?           ++\n\nrun.py:35: AssertionError"}, "teardown": {"duration": 0.00031309599999929105, "outcome": "passed"}}]}]